// ROLLUP_NO_REPLACE 
 const _11_learnMySql = "{\"parsed\":{\"_path\":\"/note/program/learnmysql\",\"_dir\":\"program\",\"_draft\":false,\"_partial\":false,\"_locale\":\"en\",\"_empty\":false,\"title\":\"MySQL 基础与高级\",\"description\":\"\",\"excerpt\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"mysql基础\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL基础\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"一为什么要学习数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"一、为什么要学习数据库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"持久化数据\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方便检索\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存储大量数据\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"共享、安全\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过组合分析，获取新的数据\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"二数据库的相关概念\"},\"children\":[{\"type\":\"text\",\"value\":\"二、数据库的相关概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类：\"},{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DBMS、DB、SQL\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DB:database数据库，存储一系列有组织数据的容器\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DBMS：Database Management System数据库管理系统，使用DBMS管理和维护DB\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL：StructureQueryLanguage结构化查询语言，程序员用于和DBMS通信的语言\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"三数据库存储数据的特点\"},\"children\":[{\"type\":\"text\",\"value\":\"三、数据库存储数据的特点\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据先放在表中，表再放在库中\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一个库可以有多张表，每张表都有自己的唯一标识名\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一张表的设计，类似于java中”类\\\"的设计\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的字段的设计，类似于属性的设计\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的单条记录，类似于一个对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的所有的记录，类似于对象的集合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"orm ：object relation mapping 对象关系映射\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"四初始mysql\"},\"children\":[{\"type\":\"text\",\"value\":\"四、初始MySQL\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql产品的介绍\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL产品的介绍\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 前身属于瑞典的一家公司AB，2008年被sun公司收购，2009年sun被oracle公司收购。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①体积小、安装较方便\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②开源、免费\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"③性能高、稳定性好\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"④兼容性好\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql产品的安装\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL产品的安装          ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基于C/S架构的DBMS，需要安装服务端和客户端\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.oracle.com\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"www.oracle.com\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL5.5\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql服务的启动和停止\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL服务的启动和停止     ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式一：图形化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右击——计算机管理——服务——MySQL服务\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式二：通过管理员身份运行dos\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"net start 服务名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"net stop 服务名\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql服务的登录和退出\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL服务的登录和退出     ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式一：通过dos命令\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql -h主机名 -P端口号 -u用户名 -p密码\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"注意:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果是本机，则-h主机名  可以省略\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果端口号是3306，则-P端口号可以省略\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式二：通过图形化界面客户端\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过SQLyog/Navicat，直接输入用户名、密码等连接进去即可\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"###　MySQL的常见命令和语法规范\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①常见命令\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show databases             显示当前连接下所有数据库\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show tables                    显示当前库中所有表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show tables from 库名  显示指定库中所有表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show  columns from 表名    显示指定表中所有列\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"use 库名                             打开/使用指定库\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②语法规范\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不区分大小写\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每条命令结尾建议用分号\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"注释：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#单行注释\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"-- 单行注释\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/\"},{\"type\":\"element\",\"tag\":\"em\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行注释\"}]},{\"type\":\"text\",\"value\":\"/\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"五dql语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"五、DQL语言的学习```````````★````````````\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念：DQL:Data Query Language  数据查询语言\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"51-基础查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.1 基础查询        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 from 表名;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 from 表名;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①查询结果集是一个虚拟表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②查询列表可以是单个字段、多个字段、常量、表达式、函数，可以是以上的组合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申1：起别名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 字段名  as  \\\"别名\\\" from 表名;\\r\\nselect 字段名 \\\"别名\\\" from 表名;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 字段名  as  \\\"别名\\\" from 表名;\\r\\nselect 字段名 \\\"别名\\\" from 表名;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申2：+的作用\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"作用：加法运算\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果两个操作数都是数值型，则直接做加法运算\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果其中一个为非数值型，则将强值转换成数值型，如果转换失败，则当做0\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"'123'+4 => 127\\r\\n'abc'+4 => 4\\r\\nnull+4 =>4\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"'123'+4 => 127\\r\\n'abc'+4 => 4\\r\\nnull+4 =>4\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果其中一个为null，则结果直接为null\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申3：去重\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select distinct department_id from employees;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select distinct department_id from employees;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申4：补充函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select version();\\r\\nselect database();\\r\\nselect user();\\r\\nselect ifnull(字段名,表达式);\\r\\nselect concat(字符1，字符2,字符3);\\r\\nselect length(字符/字段);获取字节长度\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select version();\\r\\nselect database();\\r\\nselect user();\\r\\nselect ifnull(字段名,表达式);\\r\\nselect concat(字符1，字符2,字符3);\\r\\nselect length(字符/字段);获取字节长度\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"52-条件查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.2 条件查询  \\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 \\r\\nfrom 表名\\r\\nwhere 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 \\r\\nfrom 表名\\r\\nwhere 筛选条件;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"筛选条件的分类：：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①按条件表达式筛选\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关系运算符：>=   <   <=   >    <>   =\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②按逻辑表达式筛选\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"逻辑运算符：and   or   not\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"③模糊查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"like:一般和通配符搭配使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"_:任意单个字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"%:任意多个字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"between and:一般用于判断某字段是否在指定的区间\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a between 10 and 100\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"in：一般用于判断某字段是否在指定的列表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a in(10,30,50)\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"is null:判断null值\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"​\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"53-排序查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.3 排序查询  \\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select  查询列表\\r\\nfrom 表名\\r\\nwhere 筛选条件\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select  查询列表\\r\\nfrom 表名\\r\\nwhere 筛选条件\\r\\norder by 排序列表;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①排序列表可以是 单个字段、多个字段、函数、表达式、别名、列的索引，以及以上的组合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②升序:asc  降序:desc\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"54-常见函数\"},\"children\":[{\"type\":\"text\",\"value\":\"5.4 常见函数        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概述\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：sql中的函数分为单行函数和分组函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用语法：select 函数名(实参列表);\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"concat(str1,str2,..)    # 拼接字符\\r\\nsubstr(str,pos)   # 截取从pos开始的所有字符，   起始索引从1开始\\r\\nsubstr(str,pos,len)   # 截取len个从pos开始的字符，起始索引从1开始\\r\\nlength(str)   # 获取字节个数\\r\\nchar_length(str)    # 获取字符个数\\r\\nupper(str)    # 变大写\\r\\nlower(str)    # 变小写\\r\\ntrim(【substr from】str)    # 去前后指定字符，默认是去空格\\r\\nleft(str,len)   # 从左边截取指定len个数的 字符\\r\\nright(str,len)    # 从右边截取指定len个数的 字符\\r\\nlpad(str,substr,len)    # 左填充\\r\\nrpad(str,substr,len)：右填充\\r\\nstrcmp(str1,str2)   # 比较两个字符的大小\\r\\ninstr(str,substr)   # 获取substr在str中第一次出现的索引\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"concat(str1,str2,..)    # 拼接字符\\r\\nsubstr(str,pos)   # 截取从pos开始的所有字符，   起始索引从1开始\\r\\nsubstr(str,pos,len)   # 截取len个从pos开始的字符，起始索引从1开始\\r\\nlength(str)   # 获取字节个数\\r\\nchar_length(str)    # 获取字符个数\\r\\nupper(str)    # 变大写\\r\\nlower(str)    # 变小写\\r\\ntrim(【substr from】str)    # 去前后指定字符，默认是去空格\\r\\nleft(str,len)   # 从左边截取指定len个数的 字符\\r\\nright(str,len)    # 从右边截取指定len个数的 字符\\r\\nlpad(str,substr,len)    # 左填充\\r\\nrpad(str,substr,len)：右填充\\r\\nstrcmp(str1,str2)   # 比较两个字符的大小\\r\\ninstr(str,substr)   # 获取substr在str中第一次出现的索引\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数学函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ceil(x)   # 向上取整\\r\\nfloor(x)    # 向下取整\\r\\nround(x,d)    # 四舍五入\\r\\nmod(x,y)    # 取模/取余\\r\\ntruncate(x,d)   # 截断，保留小数点后d位\\r\\nabs(x)    # 求绝对值\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ceil(x)   # 向上取整\\r\\nfloor(x)    # 向下取整\\r\\nround(x,d)    # 四舍五入\\r\\nmod(x,y)    # 取模/取余\\r\\ntruncate(x,d)   # 截断，保留小数点后d位\\r\\nabs(x)    # 求绝对值\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"日期函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"now():获取当前日期——时间\\r\\ncurtime():只有时间\\r\\ncurdate():只有日期\\r\\ndate_format(date,格式):格式日期为字符\\r\\nstr_to_date(str,格式):将字符转换成日期\\r\\ndatediff(date1,date2):获取两个日期之间的天数差\\r\\nyear(date)\\r\\nmonth(date)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"now():获取当前日期——时间\\r\\ncurtime():只有时间\\r\\ncurdate():只有日期\\r\\ndate_format(date,格式):格式日期为字符\\r\\nstr_to_date(str,格式):将字符转换成日期\\r\\ndatediff(date1,date2):获取两个日期之间的天数差\\r\\nyear(date)\\r\\nmonth(date)\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4 流程控制函数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"①if(条件，表达式1，表达式2)：如果条件成立，返回表达式1，否则返回表达式2\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"①if(条件，表达式1，表达式2)：如果条件成立，返回表达式1，否则返回表达式2\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"case 表达式\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"②case 表达式\\r\\nwhen 值1 then 结果1\\r\\nwhen 值2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"②case 表达式\\r\\nwhen 值1 then 结果1\\r\\nwhen 值2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"case\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"③case\\r\\nwhen 条件1 then 结果1\\r\\nwhen 条件2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"③case\\r\\nwhen 条件1 then 结果1\\r\\nwhen 条件2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"55-分组函数\"},\"children\":[{\"type\":\"text\",\"value\":\"5.5 分组函数        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：分组函数往往用于实现将一组数据进行统计计算，最终得到一个值，又称为聚合函数或统计函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"sum:求和\\r\\navg:平均\\r\\nmax:最大\\r\\nmin:最小\\r\\ncount:个数\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"sum:求和\\r\\navg:平均\\r\\nmax:最大\\r\\nmin:最小\\r\\ncount:个数\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"接收参数特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实参的字段的类型，sum和avg只支持数值型，其他三个可以支持任意类型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这五个函数都忽略null值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count可以支持以下参数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(字段)：查询该字段非空值 的个数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(*) ：查询结果集的行数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(1)：查询结果集的行数\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分组函数可以和distinct搭配使用，实现去重的统计\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select count(distinct 字段) from 表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select count(distinct 字段) from 表;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 5.5 分组函数        ★    \\r\\nSELECT SUM(salary),AVG(salary),MIN(salary),MAX(salary),COUNT(salary) FROM   employees;\\r\\n\\r\\nSELECT COUNT(employee_id) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees WHERE salary > 2500;\\r\\n\\r\\nSELECT COUNT(manager_id) FROM employees;\\r\\n\\r\\n# 5.1 统计结果集的行数，推荐使用count(*)\\r\\nSELECT COUNT(*) FROM employees;\\r\\n\\r\\nSELECT COUNT(*) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT COUNT(1) FROM employees;\\r\\n\\r\\nSELECT COUNT(1) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT * FROM employees;\\r\\n\\r\\n#5.2 搭配distinct实现去重统计\\r\\n# 需求，查询部门个数\\r\\nSELECT COUNT(DISTINCT department_id) FROM employees;\\r\\n\\r\\n#5.3 思考：每个部门的总工资、平均工资？需要用到分组查询，只用分组函数无法实现\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 30;\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 35;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"## 5.5 分组函数        ★    \\r\\nSELECT SUM(salary),AVG(salary),MIN(salary),MAX(salary),COUNT(salary) FROM   employees;\\r\\n\\r\\nSELECT COUNT(employee_id) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees WHERE salary > 2500;\\r\\n\\r\\nSELECT COUNT(manager_id) FROM employees;\\r\\n\\r\\n# 5.1 统计结果集的行数，推荐使用count(*)\\r\\nSELECT COUNT(*) FROM employees;\\r\\n\\r\\nSELECT COUNT(*) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT COUNT(1) FROM employees;\\r\\n\\r\\nSELECT COUNT(1) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT * FROM employees;\\r\\n\\r\\n#5.2 搭配distinct实现去重统计\\r\\n# 需求，查询部门个数\\r\\nSELECT COUNT(DISTINCT department_id) FROM employees;\\r\\n\\r\\n#5.3 思考：每个部门的总工资、平均工资？需要用到分组查询，只用分组函数无法实现\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 30;\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 35;\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"56-分组查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.6 分组查询\\t\\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 分组函数,分组的字段\\r\\nfrom 表名\\r\\nwhere 分组前的筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选条件\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 分组函数,分组的字段\\r\\nfrom 表名\\r\\nwhere 分组前的筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选条件\\r\\norder by 排序列表;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分组列表可以是单个字段、多个字段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"筛选条件分为两类\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"table\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"thead\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"筛选方式\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"筛选的基表\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用的关键字\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"位置\"}]}]}]},{\"type\":\"element\",\"tag\":\"tbody\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组前筛选\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"原始表\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"group by前面\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组后筛选\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组后的结果集\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"having\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"group by后面\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 6、分组查询          ★    \\r\\nSELECT SUM(salary),AVG(salary),department_id FROM employees GROUP BY  department_id;    \\r\\n\\r\\n# 查询每个工种的平均工资\\r\\nSELECT AVG(salary),job_id FROM employees GROUP BY job_id;\\r\\n\\r\\n# 查询每个领导的手下人数（有的部门没有领导，需要过滤下）\\r\\nSELECT COUNT(*),manager_id FROM employees WHERE manager_id IS NOT NULL GROUP BY   manager_id;\\r\\n\\r\\n# 查询邮箱中包含a字符的 每个部门的最高工资\\r\\nSELECT MAX(salary) 最高工资 ,department_id FROM employees WHERE email LIKE '%a%'  GROUP BY department_id;\\r\\n\\r\\n# 查询每个领导手下有奖金的员工的平均工资\\r\\nSELECT AVG(salary) 平均工资,manager_id FROM employees WHERE commission_pct IS NOT   NULL GROUP BY manager_id;\\r\\n\\r\\n# 查询哪个部门的员工个数>5\\r\\n# 需要使用分组后筛选having\\r\\nSELECT COUNT(*),department_id FROM employees GROUP BY department_id HAVING COUNT(*) >5;\\r\\n\\r\\n# 分组函数做条件只可能放在having后面\\r\\n\\r\\n# 求每个工种没有奖金的员工的最高工资>12000的工种编号和最高工资\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>12000;\\r\\n\\r\\n# 领导编号>102的每个领导手下的最低工资大于5000的领导编号和最低工资\\r\\nSELECT MIN(salary) 最低工资,manager_id FROM employees WHERE manager_id > 102 GROUP  BY manager_id HAVING MIN(salary)>5000;\\r\\n\\r\\n# 可以实现排序\\r\\n# 查询每个工种没有奖金的员工的最高工资>6000的工种编号和最高工资，按最高工资升序\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>6000 ORDER BY MAX(salary) ASC;\\r\\n\\r\\n# 按多个字段分组\\r\\n# 查询每个工种每个部门的最低工资，并按先按工种升序再最低工资降序\\r\\nSELECT MIN(salary),job_id,department_id FROM employees GROUP BY job_id, department_id ORDER BY job_id ASC,MIN(salary) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"## 6、分组查询          ★    \\r\\nSELECT SUM(salary),AVG(salary),department_id FROM employees GROUP BY  department_id;    \\r\\n\\r\\n# 查询每个工种的平均工资\\r\\nSELECT AVG(salary),job_id FROM employees GROUP BY job_id;\\r\\n\\r\\n# 查询每个领导的手下人数（有的部门没有领导，需要过滤下）\\r\\nSELECT COUNT(*),manager_id FROM employees WHERE manager_id IS NOT NULL GROUP BY   manager_id;\\r\\n\\r\\n# 查询邮箱中包含a字符的 每个部门的最高工资\\r\\nSELECT MAX(salary) 最高工资 ,department_id FROM employees WHERE email LIKE '%a%'  GROUP BY department_id;\\r\\n\\r\\n# 查询每个领导手下有奖金的员工的平均工资\\r\\nSELECT AVG(salary) 平均工资,manager_id FROM employees WHERE commission_pct IS NOT   NULL GROUP BY manager_id;\\r\\n\\r\\n# 查询哪个部门的员工个数>5\\r\\n# 需要使用分组后筛选having\\r\\nSELECT COUNT(*),department_id FROM employees GROUP BY department_id HAVING COUNT(*) >5;\\r\\n\\r\\n# 分组函数做条件只可能放在having后面\\r\\n\\r\\n# 求每个工种没有奖金的员工的最高工资>12000的工种编号和最高工资\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>12000;\\r\\n\\r\\n# 领导编号>102的每个领导手下的最低工资大于5000的领导编号和最低工资\\r\\nSELECT MIN(salary) 最低工资,manager_id FROM employees WHERE manager_id > 102 GROUP  BY manager_id HAVING MIN(salary)>5000;\\r\\n\\r\\n# 可以实现排序\\r\\n# 查询每个工种没有奖金的员工的最高工资>6000的工种编号和最高工资，按最高工资升序\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>6000 ORDER BY MAX(salary) ASC;\\r\\n\\r\\n# 按多个字段分组\\r\\n# 查询每个工种每个部门的最低工资，并按先按工种升序再最低工资降序\\r\\nSELECT MIN(salary),job_id,department_id FROM employees GROUP BY job_id, department_id ORDER BY job_id ASC,MIN(salary) DESC;\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"57-连接查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.7 连接查询\\t \\t★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：当查询中涉及到了多个字段，则需要通过多表连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"笛卡尔乘积：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现原因：没有有效的连接条件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"解决办法：添加有效的连接条件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类（MySql）：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按年代分类：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92标准：仅仅支持内连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99标准【推荐】支持内连接+外连接+交叉连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92和SQL99的区别\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99使用JOIN关键字代替了之前的逗号，并且将连接条件和筛选条件进行了分离，提高阅读性！！\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按功能分类：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"等值连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非等值连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自连接\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左外连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右外连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全外连接\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"交叉连接\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表\\r\\nfrom 表1 别名,表2 别名,...\\r\\nwhere 连接条件\\r\\nand 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后筛选\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表\\r\\nfrom 表1 别名,表2 别名,...\\r\\nwhere 连接条件\\r\\nand 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后筛选\\r\\norder by 排序列表;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92语法内连接示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 7、连接查询       ★\\r\\nUSE girls;\\r\\n\\r\\n# 笛卡尔乘积（错误实例）\\r\\n# beauty 12行，boys4行，最终输出了12*4=48行。\\r\\nSELECT `name`,`boyname` FROM beauty,boys;\\r\\n\\r\\n# 正确查询\\r\\nSELECT `name`,`boyname` FROM beauty,boys WHERE beauty.boyfriend_id = boys.id;\\r\\n\\r\\n\\r\\n# 简单的两表连接\\r\\nUSE myemployees;\\r\\n# 查询员工名和部门名\\r\\nSELECT * FROM employees;\\r\\nSELECT * FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\nSELECT last_name,department_name FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\n\\r\\n# 查询部门编号>100的部门名称和所在的城市名\\r\\nSELECT department_id,department_name,city FROM departments d,locations l WHERE d.location_id = l.`location_id` AND d.`department_id`>100;\\r\\n\\r\\n# 查询有奖金的员工名、部门名\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询城市名中第二个字符为o的部门名和城市名\\r\\nSELECT `department_name`,`city`  FROM `departments` d,`locations` l WHERE d.`location_id`=l.`location_id` AND l.`city` LIKE '_o%';\\r\\n\\r\\n# 查询每个城市的部门个数\\r\\nSELECT COUNT(*),l.city FROM `departments` d,`locations` l  WHERE d.`location_id` = l.`location_id` GROUP BY l.`city`;\\r\\n\\r\\n# 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资\\r\\nSELECT d.`department_name`,d.`manager_id`,MIN(salary) FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_id`;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"## 7、连接查询       ★\\r\\nUSE girls;\\r\\n\\r\\n# 笛卡尔乘积（错误实例）\\r\\n# beauty 12行，boys4行，最终输出了12*4=48行。\\r\\nSELECT `name`,`boyname` FROM beauty,boys;\\r\\n\\r\\n# 正确查询\\r\\nSELECT `name`,`boyname` FROM beauty,boys WHERE beauty.boyfriend_id = boys.id;\\r\\n\\r\\n\\r\\n# 简单的两表连接\\r\\nUSE myemployees;\\r\\n# 查询员工名和部门名\\r\\nSELECT * FROM employees;\\r\\nSELECT * FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\nSELECT last_name,department_name FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\n\\r\\n# 查询部门编号>100的部门名称和所在的城市名\\r\\nSELECT department_id,department_name,city FROM departments d,locations l WHERE d.location_id = l.`location_id` AND d.`department_id`>100;\\r\\n\\r\\n# 查询有奖金的员工名、部门名\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询城市名中第二个字符为o的部门名和城市名\\r\\nSELECT `department_name`,`city`  FROM `departments` d,`locations` l WHERE d.`location_id`=l.`location_id` AND l.`city` LIKE '_o%';\\r\\n\\r\\n# 查询每个城市的部门个数\\r\\nSELECT COUNT(*),l.city FROM `departments` d,`locations` l  WHERE d.`location_id` = l.`location_id` GROUP BY l.`city`;\\r\\n\\r\\n# 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资\\r\\nSELECT d.`department_name`,d.`manager_id`,MIN(salary) FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_id`;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99语法\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# [inner] 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\n[inner] join 表2 别名 on 连接条件\\r\\n[inner] join 表3 别名 on 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选\\r\\norder by 排序列表\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# [inner] 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\n[inner] join 表2 别名 on 连接条件\\r\\n[inner] join 表3 别名 on 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选\\r\\norder by 排序列表\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99语法示例：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 等值连接（与SQL92语法对比）\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 等值连接：SQL99 与 SQL92语法 查询对比\\r\\n# 查询有奖金的员工名、部门名（SQL92语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询有奖金的员工名、部门名（SQL99语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id` = d.`department_id` WHERE e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL92语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL99语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 等值连接：SQL99 与 SQL92语法 查询对比\\r\\n# 查询有奖金的员工名、部门名（SQL92语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询有奖金的员工名、部门名（SQL99语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id` = d.`department_id` WHERE e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL92语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL99语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 非等值连接\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 非等值连接（SQL99语法）\\r\\n# 查询部门编号在10-90之间的员工的工资级别，并按级别进行分组\\r\\nSELECT COUNT(*),`grade` FROM `employees` e JOIN `sal_grade` g ON e.`salary` WHERE e.`salary` BETWEEN g.`min_salary` AND g.`max_salary` GROUP BY g.`grade`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 非等值连接（SQL99语法）\\r\\n# 查询部门编号在10-90之间的员工的工资级别，并按级别进行分组\\r\\nSELECT COUNT(*),`grade` FROM `employees` e JOIN `sal_grade` g ON e.`salary` WHERE e.`salary` BETWEEN g.`min_salary` AND g.`max_salary` GROUP BY g.`grade`;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 自连接\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 自连接（SQL99语法）\\r\\n# 查询员工名和对应的领导名\\r\\nSELECT e.`last_name`,m.`last_name` FROM `employees` e JOIN `employees` m ON e.`manager_id` = m.`employee_id`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 自连接（SQL99语法）\\r\\n# 查询员工名和对应的领导名\\r\\nSELECT e.`last_name`,m.`last_name` FROM `employees` e JOIN `employees` m ON e.`manager_id` = m.`employee_id`;\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql仅支持左连接、右连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询结果为主表中所有的记录，如果从表有匹配项，则显示匹配项，如果从表没有匹配项，则显示null\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"应用场景：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般用于查询主标中有但从表中没有的记录\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接分主从表，两表的顺序不能任意调换。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左连接的话，左边为主表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右连接的话，右边为主表\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# outer 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\nleft|right [outer] join 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# outer 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\nleft|right [outer] join 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE girls;\\r\\n# 查询所有女神的记录，以及对应的男神名，如果没有对应的男神，则显示为null\\r\\n# 左连接\\r\\nSELECT * FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询所有男神的记录，以及对应的女神名\\r\\n# 左连接\\r\\nSELECT * FROM  boys bo LEFT JOIN beauty b ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 右连接\\r\\nSELECT * FROM beauty b RIGHT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询哪个女神没有男朋友，则显示为null\\r\\n# 左连接\\r\\nSELECT b.`name` FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\r\\n\\r\\n# 右连接\\r\\nSELECT b.`name` FROM boys bo RIGHT JOIN beauty b ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"USE girls;\\r\\n# 查询所有女神的记录，以及对应的男神名，如果没有对应的男神，则显示为null\\r\\n# 左连接\\r\\nSELECT * FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询所有男神的记录，以及对应的女神名\\r\\n# 左连接\\r\\nSELECT * FROM  boys bo LEFT JOIN beauty b ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 右连接\\r\\nSELECT * FROM beauty b RIGHT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询哪个女神没有男朋友，则显示为null\\r\\n# 左连接\\r\\nSELECT b.`name` FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\r\\n\\r\\n# 右连接\\r\\nSELECT b.`name` FROM boys bo RIGHT JOIN beauty b ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"总结join连接\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"join连接总结\",\"src\":\"./assets/Snipaste_2022-09-16_18-50-39.png\"},\"children\":[]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"58-子查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.8 子查询       √\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"含义：\\r\\n一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询,\\t在外面的查询语句，称为主查询或外查询.\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select后面（标量子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结果为单行单列\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"from后面（表子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结构可以为多行多列\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"where或having后面 ☆【最常用】\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结构必须为单列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单行子查询\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行子查询\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"exists后面（相关子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求:子查询结构必须为单列\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询都放在小括号内\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询放在条件中，要求必须放在条件的右侧\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询优先于主查询执行，主查询使用了子查询的执行结果\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询根据查询结果的行数不同分为以下两类：\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"① 单行子查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果集只有一行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般搭配单行操作符使用：> < = <> >= <=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非法使用子查询的情况：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a、子查询的结果为一组值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"b、子查询的结果为空\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"② 多行子查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果集有多行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般搭配多行操作符使用：any、all、in、not in、min、max\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"in： 属于子查询结果中的任意一个就行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"any和all往往可以用其他查询代替\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"x > any(10,30,50)\\r\\nx > min(10,30,50)\\r\\n\\r\\nx = any(10,30,50)\\r\\nx in (10,30,50)\\r\\n\\r\\nx > all(10,30,50)\\r\\nx > max(10,30,50)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"x > any(10,30,50)\\r\\nx > min(10,30,50)\\r\\n\\r\\nx = any(10,30,50)\\r\\nx in (10,30,50)\\r\\n\\r\\nx > all(10,30,50)\\r\\nx > max(10,30,50)\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到where后面）：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单行子查询\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 单行子查询\\r\\n# 查询和 Zlotkey 相同部门的员工姓名和工资\\r\\nSELECT `last_name`,`salary` FROM `employees` WHERE `department_id` = (\\r\\n SELECT `department_id` FROM `employees` WHERE `last_name` = 'Zlotkey'\\r\\n);\\r\\n\\r\\n# 查询工资比公司平均工资高的员工的员工号，姓名和工资。\\r\\nSELECT `employee_id`,`last_name`,`salary` FROM `employees` WHERE `salary`>(\\r\\n SELECT AVG(`salary`) FROM `employees`\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 单行子查询\\r\\n# 查询和 Zlotkey 相同部门的员工姓名和工资\\r\\nSELECT `last_name`,`salary` FROM `employees` WHERE `department_id` = (\\r\\n SELECT `department_id` FROM `employees` WHERE `last_name` = 'Zlotkey'\\r\\n);\\r\\n\\r\\n# 查询工资比公司平均工资高的员工的员工号，姓名和工资。\\r\\nSELECT `employee_id`,`last_name`,`salary` FROM `employees` WHERE `salary`>(\\r\\n SELECT AVG(`salary`) FROM `employees`\\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行子查询\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 多行子查询\\r\\n# 返回location_id 是1400 或 1700 的部门中的所有员工姓名\\r\\nSELECT `last_name` FROM `employees` WHERE `department_id` IN (\\r\\n SELECT `department_id` FROM `departments` WHERE `location_id` IN (1400,1700)\\r\\n);\\r\\n\\r\\n# 返回其他部门中比job_id为'IT_PROG'部门所有工资都低的员工的员工号、姓名、job_id 以及 salary\\r\\nSELECT `employee_id`,`job_id`,`salary` FROM `employees` WHERE `salary` < ANY(\\r\\n SELECT DISTINCT `salary` FROM `employees` WHERE `job_id` = 'IT_PROG'\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 多行子查询\\r\\n# 返回location_id 是1400 或 1700 的部门中的所有员工姓名\\r\\nSELECT `last_name` FROM `employees` WHERE `department_id` IN (\\r\\n SELECT `department_id` FROM `departments` WHERE `location_id` IN (1400,1700)\\r\\n);\\r\\n\\r\\n# 返回其他部门中比job_id为'IT_PROG'部门所有工资都低的员工的员工号、姓名、job_id 以及 salary\\r\\nSELECT `employee_id`,`job_id`,`salary` FROM `employees` WHERE `salary` < ANY(\\r\\n SELECT DISTINCT `salary` FROM `employees` WHERE `job_id` = 'IT_PROG'\\r\\n);\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到select后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 放在select后面\\r\\nSELECT (\\r\\n SELECT COUNT(*) FROM `employees` WHERE `department_id` = 50\\r\\n) 个数;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 放在select后面\\r\\nSELECT (\\r\\n SELECT COUNT(*) FROM `employees` WHERE `department_id` = 50\\r\\n) 个数;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到from后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 放在from后面\\r\\n# 查询每个部门的平均工资的工资级别\\r\\nSELECT dep_ag.`department_id`,dep_ag.ag,`grade` FROM `sal_grade` g JOIN(\\r\\n SELECT AVG(`salary`) ag,`department_id` FROM `employees` GROUP BY `department_id`\\r\\n) dep_ag ON dep_ag.ag BETWEEN g.`min_salary` AND g.`max_salary`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 放在from后面\\r\\n# 查询每个部门的平均工资的工资级别\\r\\nSELECT dep_ag.`department_id`,dep_ag.ag,`grade` FROM `sal_grade` g JOIN(\\r\\n SELECT AVG(`salary`) ag,`department_id` FROM `employees` GROUP BY `department_id`\\r\\n) dep_ag ON dep_ag.ag BETWEEN g.`min_salary` AND g.`max_salary`;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放在exists后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 查询有无名字叫\\\"张三丰\\\"的员工信息\\r\\nSELECT EXISTS(\\r\\n SELECT * FROM `employees` WHERE `last_name` = 'Abel'\\r\\n) 有无Abel;\\r\\n\\r\\n# 查询没有女朋友的男神信息\\r\\nUSE girls;\\r\\nSELECT bo.* FROM boys bo WHERE bo.id NOT IN(\\r\\n SELECT `boyfriend_id` FROM `beauty` b\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 查询有无名字叫\\\"张三丰\\\"的员工信息\\r\\nSELECT EXISTS(\\r\\n SELECT * FROM `employees` WHERE `last_name` = 'Abel'\\r\\n) 有无Abel;\\r\\n\\r\\n# 查询没有女朋友的男神信息\\r\\nUSE girls;\\r\\nSELECT bo.* FROM boys bo WHERE bo.id NOT IN(\\r\\n SELECT `boyfriend_id` FROM `beauty` b\\r\\n);\\n\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"59-分页查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.9 分页查询       ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"应用场景：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表\\r\\nfrom 表1 别名\\r\\njoin 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组字段\\r\\nhaving 分组后筛选\\r\\norder by 排序的字段\\r\\nlimit 起始的条目索引，显示的条目数;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表\\r\\nfrom 表1 别名\\r\\njoin 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组字段\\r\\nhaving 分组后筛选\\r\\norder by 排序的字段\\r\\nlimit 起始的条目索引，显示的条目数;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. from 子句\\r\\n2. join 子句\\r\\n3. on 子句\\r\\n4. where 子句\\r\\n5. group by 子句\\r\\n6. having 子句\\r\\n7. select 子句\\r\\n8. order by 子句\\r\\n9. limit 子句\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"1. from 子句\\r\\n2. join 子句\\r\\n3. on 子句\\r\\n4. where 子句\\r\\n5. group by 子句\\r\\n6. having 子句\\r\\n7. select 子句\\r\\n8. order by 子句\\r\\n9. limit 子句\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"起始条目索引从0开始，如果不写，则就是从0开始显示\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"limit子句放在查询语句的最后\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"公式：select * from  表 limit （page-1）*sizePerPage,sizePerPage\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每页显示条目数sizePerPage\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要显示的页数 page\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE myemployees; \\r\\n# 查询员工信息表的前5条\\r\\nSELECT  * FROM employees LIMIT 5;\\r\\nSELECT  * FROM employees LIMIT 0,5;\\r\\nSELECT  * FROM employees LIMIT 5,5;\\r\\n\\r\\n# 查询有奖金的，且工资较高的第11名到第20名\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC;\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC LIMIT 10,20;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"USE myemployees; \\r\\n# 查询员工信息表的前5条\\r\\nSELECT  * FROM employees LIMIT 5;\\r\\nSELECT  * FROM employees LIMIT 0,5;\\r\\nSELECT  * FROM employees LIMIT 5,5;\\r\\n\\r\\n# 查询有奖金的，且工资较高的第11名到第20名\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC;\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC LIMIT 10,20;\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"510-union联合查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.10 union联合查询\\t√\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明\\r\\n当查询结果来自多张表，但多张表之间没有关联，这个时候往往使用联查查询，也称为union查询\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引入：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"union 联合、合并\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 from 表1 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表2 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表3 where 筛选条件 union [all]\\r\\n  ...\\r\\nselect 查询列表 from 表n where 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 from 表1 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表2 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表3 where 筛选条件 union [all]\\r\\n  ...\\r\\nselect 查询列表 from 表n where 筛选条件;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多条查询语句的查询的列数必须是一致的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多条查询语句的查询类型、字段意义最好一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"union代表去重，union all代表不去重\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SELECT * FROM `jobs` UNION\\r\\nSELECT * FROM `china` UNION\\r\\nSELECT * FROM `departments`;\\r\\n\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 2,'test' UNION\\r\\nSELECT 2,'test';\\r\\n\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 2,'test' UNION ALL\\r\\nSELECT 2,'test';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SELECT * FROM `jobs` UNION\\r\\nSELECT * FROM `china` UNION\\r\\nSELECT * FROM `departments`;\\r\\n\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 2,'test' UNION\\r\\nSELECT 2,'test';\\r\\n\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 2,'test' UNION ALL\\r\\nSELECT 2,'test';\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"六ddl语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"六、DDL语言的学习```````````★````````````\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Data Define Language\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"61-创建数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.1 创建数据库\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE DATABASE stuDB2;\\r\\nCREATE DATABASE IF NOT EXISTS stuDB2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE DATABASE stuDB2;\\r\\nCREATE DATABASE IF NOT EXISTS stuDB2;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"62-删除数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.2 删除数据库\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP DATABASE stuDB2;\\r\\nDROP DATABASE IF EXISTS stuDB2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP DATABASE stuDB2;\\r\\nDROP DATABASE IF EXISTS stuDB2;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"63-创建表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.3 创建表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"列类型：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、整型：tinyint/smallint/int/bigint\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、浮点型：float(m，n)/double(m，n)/decimal(m，n);m,n可选\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、字符型：char(n)/varchar(n)/text   n表示最多字符数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4、日期型：datet/time/datetime/timestamp\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5、二进制型\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"blob存储图片数据\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE studb;\\r\\nCREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT ,\\r\\n    stuname VARCHAR(20),\\r\\n    stugender CHAR,\\r\\n    email VARCHAR(20),\\r\\n    borndate DATETIME\\r\\n);\\r\\nDESC stuinfo;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"USE studb;\\r\\nCREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT ,\\r\\n    stuname VARCHAR(20),\\r\\n    stugender CHAR,\\r\\n    email VARCHAR(20),\\r\\n    borndate DATETIME\\r\\n);\\r\\nDESC stuinfo;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"六大约束：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"NOT NULL    非空：用于限制该字段为必填项\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DEFAULT     默认：用于限制该字段没有显式插入值，直接显示默认值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"PRIMARY KEY 主键：用于限制该字段的值不能重复，设置我诶主键列的字段默认不能为空，一个表只能有一个主键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNIQUE      唯一：用于限制该字段值不能重复，可为空，一个表可以有n个唯一\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CHECK       检查：用于限制该字段值必须满足指定条件。CHECK(age BETWEEN 1 AND 100)（mysql不支持）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"FOREIGN KEY 外键：用于限制两个表的关系，要求外键列的值必须来自于主表的关联列。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①主表的关联列和从表的关联列的类型必须一致，意思一样，名称无要求\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②主表的关联列要求必须是主键（mysql中也可以是唯一）。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT PRIMARY KEY,  #添加了主键\\r\\n    stuname VARCHAR(20) UNIQUE NOT NULL,#添加了唯一约束+非空 #\\r\\n    stugender CHAR DEFAULT '男',#添加了默认约束\\r\\n    email VARCHAR(20) NOT NULL,\\r\\n    age INT CHECK (age BETWEEN 0 AND 100),  #添加了检查越是，mysql不支持，但不报错\\r\\n    majorid INT,\\r\\n    borndate DATETIME,\\r\\n    CONSTRAINT fk_stuinfo_major FOREIGN KEY (major_id) REFERENCES major(major_id)#外键要放到最后   \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT PRIMARY KEY,  #添加了主键\\r\\n    stuname VARCHAR(20) UNIQUE NOT NULL,#添加了唯一约束+非空 #\\r\\n    stugender CHAR DEFAULT '男',#添加了默认约束\\r\\n    email VARCHAR(20) NOT NULL,\\r\\n    age INT CHECK (age BETWEEN 0 AND 100),  #添加了检查越是，mysql不支持，但不报错\\r\\n    majorid INT,\\r\\n    borndate DATETIME,\\r\\n    CONSTRAINT fk_stuinfo_major FOREIGN KEY (major_id) REFERENCES major(major_id)#外键要放到最后   \\r\\n);\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"64-修改表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.4 修改表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改表名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE stuinfo RENAME TO students;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE stuinfo RENAME TO students;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"添加字段\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students ADD COLUMN borndate2 TIMESTAMP NOT NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students ADD COLUMN borndate2 TIMESTAMP NOT NULL;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改字段名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students CHANGE COLUMN borndate birthday TIMESTAMP;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students CHANGE COLUMN borndate birthday TIMESTAMP;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改字段类型\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students MODIFY COLUMN birthday TIMESTAMP;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students MODIFY COLUMN birthday TIMESTAMP;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除字段\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students DROP COLUMN borndate2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students DROP COLUMN borndate2;\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"65-删除表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.5 删除表\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP TABLE IF EXISTS students;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP TABLE IF EXISTS students;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"66-复制表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.6 复制表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"仅复制表的结构：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE newtable LIKE stuinfo;\\r\\nCREATE TABLE newtable2 LIKE major;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE newtable LIKE stuinfo;\\r\\nCREATE TABLE newtable2 LIKE major;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"复制表的结构+数据：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE newtable3 SELECT * FROM girls.beauty;\\r\\nCREATE TABLE studb.newtable3 SELECT * FROM girls.beauty; \\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees; #复制指定列+数据\\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees WHERE 1 = 2; #复制指定列（无数据）          \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE newtable3 SELECT * FROM girls.beauty;\\r\\nCREATE TABLE studb.newtable3 SELECT * FROM girls.beauty; \\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees; #复制指定列+数据\\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees WHERE 1 = 2; #复制指定列（无数据）          \\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"七dml语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"七、DML语言的学习\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Data Manipulation Language:insert update delete\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"71-数据的插入\"},\"children\":[{\"type\":\"text\",\"value\":\"7.1 数据的插入：\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\\r\\n①字段和值列表一一对应，包含类型、约束等必须匹配\\r\\n②数值型的值，不用单引号号；非数值型的值，必须是用单引号。\\r\\n③字段顺序无要求\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入单行：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)    \\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(1,'huangweijie','男','1091088708@qq.com',30,1);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(2,'zhangwenli','女','1091088708@qq.com',30,2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(3,'choudan','599499789@qq.com',2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(4,'dandan','599499789@qq.com',100);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)    \\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(1,'huangweijie','男','1091088708@qq.com',30,1);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(2,'zhangwenli','女','1091088708@qq.com',30,2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(3,'choudan','599499789@qq.com',2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(4,'dandan','599499789@qq.com',100);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入多行：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...),(值1，值 2，...) ,(值1，值 2，...);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...),(值1，值 2，...) ,(值1，值 2，...);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自增长列特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、自增长列要求必须设置在一个键上，比如主键或者唯一键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、自增长列要求数据类型为数值型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、一个表至多有一个\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"72-数据的删除\"},\"children\":[{\"type\":\"text\",\"value\":\"7.2 数据的删除\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"delete语句：删除指定数据。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DELETE FROM stuinfo WHERE stuname LIKE 'xiao%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DELETE FROM stuinfo WHERE stuname LIKE 'xiao%';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"truncate语句：删除所有数据，但不影响表的结构\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"TRUNCATE TABLE stuinfo;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"TRUNCATE TABLE stuinfo;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"delete和truncate区别：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1）delete可以添加where条件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2）truncate不能添加where条件，一次性清除所有数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3）如果删除带自增长列的表，\\r\\n使用delete删除后，重新插入数据，记录从断点处开始\\r\\n使用truncate删除后，重新插入数据，记录从1开始。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4）delete删除数据，可以支持事务回滚\\r\\ntruncate删除数据，不支持事务回滚。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"八tcl语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"八、TCL语言的学习\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"81-什么事事务为什么要用事务\"},\"children\":[{\"type\":\"text\",\"value\":\"8.1 什么事事务？为什么要用事务？\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一个事务是由一条或者多条sql语句构成，这一条或者多条sql语句要么全部执行成功，要么全部执行失败！\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下，每条单独的sql语句就是一个单独的事务。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"82-事务的四大特性acid\"},\"children\":[{\"type\":\"text\",\"value\":\"8.2 事务的四大特性（ACID）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原子性：要么都执行，要么都回滚\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一致性：保证数据的状态操作前和操作后保持一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"隔离性：多个事务同时操作相同数据库的同一个数据时，一个事务的执行不受另外一个事务的干扰\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"持久性：一个事务一旦提交，则数据将持久化到本地，除非其他事务对其进行修改\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"83-分类\"},\"children\":[{\"type\":\"text\",\"value\":\"8.3 分类：\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"隐式事务：没有明细的开启和结束标记\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比如dml语句的insert、update、delete语句本身就是一条事务\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"INSERT INTO gradeinfo VALUES(NULL,'一年级'),(NULL,'二年级'),(NULL,'三年级')\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"INSERT INTO gradeinfo VALUES(NULL,'一年级'),(NULL,'二年级'),(NULL,'三年级')\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示事务：具有明显的开启和结束标记\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般由多条sql语句组成，必须具有明显的开启和结束标记\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"步骤：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"0、取消隐式事务自动开启的功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、开启事务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、编写事务需要的sql语句（1条或多条）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、结束事务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"演示：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SET autocommit = 0;\\r\\nSTART TRANSACTION;\\r\\nUPDATE stuinfo SET age = age + 5 WHERE stuname = 'huangweijie';\\r\\nUPDATE stuinfo SET age = age - 5 WHERE stuname = 'zhangwenli';\\r\\nCOMMIT;     # 提交\\r\\nROLLBACK;   # 回滚\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SET autocommit = 0;\\r\\nSTART TRANSACTION;\\r\\nUPDATE stuinfo SET age = age + 5 WHERE stuname = 'huangweijie';\\r\\nUPDATE stuinfo SET age = age - 5 WHERE stuname = 'zhangwenli';\\r\\nCOMMIT;     # 提交\\r\\nROLLBACK;   # 回滚\\n\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"84-事务和事务处理\"},\"children\":[{\"type\":\"text\",\"value\":\"8.4 事务和事务处理\"}]},{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"mysql-高级\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 高级\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"二索引优化分析\"},\"children\":[{\"type\":\"text\",\"value\":\"二、索引优化分析\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"23-索引简介\"},\"children\":[{\"type\":\"text\",\"value\":\"2.3 索引简介\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.1 索引是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL官方对索引的定义为：索引（Index）是帮助MySQL高效获取数据的数据结构。 可以得到索引的本质：索引是数据结构。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引的目的在于提高查询效率，可以类比字典，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果没有索引，那么你可能需要a----z，如果我想找到Java开头的单词呢？或者Oracle开头的单词呢？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是不是觉得如果没有索引，这个事情根本无法完成？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"你可以简单理解为“排好序的快速查找数据结构”。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"详解(重要)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。下图就是一种可能的索引方式示例：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-01-08.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了加快Col2的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找在一定的复杂度内获取到相应数据，从而快速的检索出符合条件的记录。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据本身之外，数据库还维护着一个满足特定查找算法的数据结构，这些数据结构以某种方式指向数据，这样就可以在这些数据结构的基础上实现高级查找算法，这种数据结构就是索引。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般来说索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储的磁盘上。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.2 优势\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"类似大学图书馆建书目索引，提高数据检索的效率，降低数据库的IO成本\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.3 劣势\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。 因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件每次更新添加了索引列的字段， 都会调整因为更新所带来的键值变化后的索引信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际上索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录，所以索引列也是要占用空间的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.4 mysql索引结构\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BTree索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-03-20.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"指针（黄色所示），\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如磁盘块1包含数据项17和35，包含指针P1、P2、P3，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"P1表示小于17的磁盘块，P2表示在17和35之间的磁盘块，P3表示大于35的磁盘块。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"真实的数据存在于叶子节点即3、5、9、10、13、15、28、29、36、60、75、79、90、99。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非叶子节点只不存储真实的数据，只存储指引搜索方向的数据项，如17、35并不真实存在于数据表中。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"【查找过程】\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要查找数据项29，那么首先会把磁盘块1由磁盘加载到内存，此时发生一次IO，在内存中用二分查找确定29在17和35之间，锁定磁盘块1的P2指针，内存时间因为非常短（相比磁盘的IO）可以忽略不计，通过磁盘块1的P2指针的磁盘地址把磁盘块3由磁盘加载到内存，发生第二次IO，29在26和30之间，锁定磁盘块3的P2指针，通过指针加载磁盘块8到内存，发生第三次IO，同时内存中做二分查找找到29，结束查询，总计三次IO。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"真实的情况是，3层的b+树可以表示上百万的数据，如果上百万的数据查找只需要三次IO，性能提高将是巨大的，如果没有索引，每个数据项都要发生一次IO，那么总共需要百万次的IO，显然成本非常非常高。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关于时间复杂度\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同一问题可用不同算法解决，而一个算法的质量优劣将影响到算法乃至程序的效率。算法分析的目的在于选择合适算法和改进算法。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-05-03.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-05-11.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+Tree索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-06-06.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B树和B+树的区别（B+Tree与B-Tree 的区别）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1）B-树的关键字和记录是放在一起的，叶子节点可以看作外部节点，不包含任何信息；B+树的非叶子节点中只有关键字和指向下一个节点的索引，记录只放在叶子节点中。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2）在B-树中，越靠近根节点的记录查找时间越快，只要找到关键字即可确定记录的存在；而B+树中每个记录的查找时间基本是一样的，都需要从根节点走到叶子节点，而且在叶子节点中还要再比较关键字。从这个角度看B-树的性能好像要比B+树好，而在实际应用中却是B+树的性能要好些。因为B+树的非叶子节点不存放实际的数据，这样每个节点可容纳的元素个数比B-树多，树高比B-树小，这样带来的好处是减少磁盘访问次数。尽管B+树找到一个记录所需的比较次数要比B-树多，但是一次磁盘访问的时间相当于成百上千次内存比较的时间，因此实际中B+树的性能可能还会好些，而且B+树的叶子节点使用指针连接在一起，方便顺序遍历（例如查看一个目录下的所有文件，一个表中的所有记录等），这也是很多数据库和文件系统使用B+树的缘故。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"思考：为什么说B+树比B-树更适合实际应用中操作系统的文件索引和数据库索引？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的磁盘读写代价更低\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的内部结点并没有指向关键字具体信息的指针。因此其内部结点相对B 树更小。如果把所有同一内部结点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多。一次性读入内存中的需要查找的关键字也就越多。相对来说IO读写次数也就降低了。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的查询效率更加稳定\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引与非聚簇索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引并不是一种单独的索引类型，而是一种数据存储方式。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"术语‘聚簇’表示数据行和相邻的键值聚簇的存储在一起。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如下图，左侧的索引就是聚簇索引，因为数据行在磁盘的排列和索引排序保持一致。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-08-20.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引的好处：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按照聚簇索引排列顺序，查询显示一定范围数据的时候，由于数据都是紧密相连，数据库不不用从多个数据块中提取数据，所以节省了大量的io操作。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引的限制：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于mysql数据库目前只有innodb数据引擎支持聚簇索引，而Myisam并不支持聚簇索引。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于数据物理存储排序方式只能有一种，所以每个Mysql的表只能有一个聚簇索引。一般情况下就是该表的主键。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了充分利用聚簇索引的聚簇的特性，所以innodb表的主键列尽量选用有序的顺序id，而不建议用无序的id，比如uuid这种。\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.5 mysql索引分类\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单值索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"即一个索引只包含单个列，一个表可以有多个单列索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name)\\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建单值索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  INDEX idx_customer_name ON customer(customer_name); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  INDEX idx_customer_name ON customer(customer_name); \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_customer_name  on customer;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_customer_name  on customer;\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"唯一索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引列的值必须唯一，但允许有空值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_no)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_no)\\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建唯一索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE UNIQUE INDEX idx_customer_no ON customer(customer_no); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE UNIQUE INDEX idx_customer_no ON customer(customer_no); \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_customer_no on customer;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_customer_no on customer;\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"主键索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设定为主键后数据库会自动建立索引，innodb为聚簇索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\r\\n  \\r\\nCREATE TABLE customer2 (id INT(10) UNSIGNED   ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\r\\n  \\r\\nCREATE TABLE customer2 (id INT(10) UNSIGNED   ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建主键索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE customer \\r\\nadd PRIMARY KEY customer(customer_no);  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE customer \\r\\nadd PRIMARY KEY customer(customer_no);  \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除建主键索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE customer \\r\\ndrop PRIMARY KEY;  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE customer \\r\\ndrop PRIMARY KEY;  \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改建主键索引：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"必须先删除掉(drop)原索引，再新建(add)索引\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"复合索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"即一个索引包含多个列\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_name),\\r\\n  KEY (customer_no,customer_name)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_name),\\r\\n  KEY (customer_no,customer_name)\\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  INDEX idx_no_name ON customer(customer_no,customer_name); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  INDEX idx_no_name ON customer(customer_no,customer_name); \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_no_name  on customer ;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_no_name  on customer ;\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基本语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  [UNIQUE ]  INDEX [indexName] ON table_name(column)) \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  [UNIQUE ]  INDEX [indexName] ON table_name(column)) \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX [indexName] ON mytable; \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX [indexName] ON mytable; \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW INDEX FROM table_name\\\\G\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SHOW INDEX FROM table_name\\\\G\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用ALTER命令\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有四种方式来添加数据表的索引：\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。\\r\\n\\r\\nALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。\\r\\n\\r\\nALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。\\r\\n\\r\\nALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。\\r\\n\\r\\nALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。\\r\\n\\r\\nALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。\\r\\n\\r\\nALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.6 哪些情况需要创建索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"主键自动建立唯一索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"频繁作为查询条件的字段应该创建索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中与其它表关联的字段，外键关系建立索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单键/组合索引的选择问题， 组合索引性价比更高\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中统计或者分组字段\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.7 哪些情况不要创建索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表记录太少\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"经常增删改的表或者字段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Why:提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。 因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Where条件里用不到的字段不创建索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"过滤性不好的不适合建索引\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"24-性能分析\"},\"children\":[{\"type\":\"text\",\"value\":\"2.4 性能分析\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.4.1 Explain\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是什么(查看执行计划)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用EXPLAIN关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是 如何处理你的SQL语句的。分析你的查询语句或是表结构的性能瓶颈\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"官网介绍\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://dev.mysql.com/doc/refman/5.5/en/explain-output.html\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://dev.mysql.com/doc/refman/5.5/en/explain-output.html\"}]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-21-52.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"能干嘛\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表的读取顺序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"哪些索引可以使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据读取操作的操作类型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"哪些索引被实际使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表之间的引用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每张表有多少行被物理查询\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"怎么玩\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Explain + SQL语句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行计划包含的信息\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-23-00.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建表脚本\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE t1(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t2(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t3(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t4(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\n\\r\\nINSERT INTO t1(content) VALUES(CONCAT('t1_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t2(content) VALUES(CONCAT('t2_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t3(content) VALUES(CONCAT('t3_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t4(content) VALUES(CONCAT('t4_',FLOOR(1+RAND()*1000)));\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE t1(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t2(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t3(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t4(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\n\\r\\nINSERT INTO t1(content) VALUES(CONCAT('t1_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t2(content) VALUES(CONCAT('t2_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t3(content) VALUES(CONCAT('t3_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t4(content) VALUES(CONCAT('t4_',FLOOR(1+RAND()*1000)));\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"各字段解释\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select查询的序列号,包含一组数字，表示查询中执行select子句或操作表的顺序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三种情况\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id相同，执行顺序由上至下\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-26.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id不同，如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-38.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id相同和不同，同时存在\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-46.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id如果相同，可以认为是一组，从上往下顺序执行；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在所有组中，id值越大，优先级越高，越先执行\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"衍生 = DERIVED\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关注点\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id号每个号码，表示一趟独立的查询。一个sql 的查询趟数越少越好。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select_type\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有哪些\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-31-05.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询的类型，主要是用于区别 普通查询、联合查询、子查询等的复杂查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SIMPLE\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"简单的 select 查询,查询中不包含子查询或者UNION\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-34-48.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"PRIMARY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中若包含任何复杂的子部分，最外层查询则被标记为Primary\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-34-58.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DERIVED\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在FROM列表中包含的子查询被标记为DERIVED(衍生) MySQL会递归执行这些子查询, 把结果放在临时表里。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-06.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SUBQUERY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在SELECT或WHERE列表中包含了子查询\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-13.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DEPENDENT SUBQUERY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在SELECT或WHERE列表中包含了子查询,子查询基于外层\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-22.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNCACHEABLE SUBQUREY\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-35.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE '%lower_case_table_names%';\\r\\nSELECT @@lower_case_table_names FROM DUAL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE '%lower_case_table_names%';\\r\\nSELECT @@lower_case_table_names FROM DUAL;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-46.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNION\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"若第二个SELECT出现在UNION之后，则被标记为UNION； 若UNION包含在FROM子句的子查询中,外层SELECT将被标记为：DERIVED\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-38-00.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNION RESULT\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从UNION表获取结果的SELECT\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-38-18.png\"},\"children\":[]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"table\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示这一行的数据是关于哪张表的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"partitions\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"代表分区表中的命中情况，非分区表，该项为null\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"type\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-39-58.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"访问类型排列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"type显示的是访问类型，是较为重要的一个指标，结果值从最好到最坏依次是：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system > const > eq_ref > ref > fulltext > ref_or_null > index_merge > unique_subquery > index_subquery > range > index > ALL\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示查询使用了何种类型， 从最好到最差依次是：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system > const > eq_ref > ref > range > index > ALL\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表只有一行记录（等于系统表），这是const类型的特列，平时不会出现，这个也可以忽略不计\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示通过索引一次就找到了,const用于比较primary key或者unique索引。因为只匹配一行数据，所以很快 如将主键置于where列表中，MySQL就能将该查询转换为一个常量\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-45-26.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"eq_ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-45-56.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非唯一性索引扫描，返回匹配某个单独值的所有行. 本质上也是一种索引访问，它返回所有匹配某个单独值的行，然而， 它可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-04.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-20.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"range\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只检索给定范围的行,使用一个索引来选择行。key 列显示使用了哪个索引 一般就是在你的where语句中出现了between、<、>、in等的查询 这种范围扫描索引扫描比全表扫描要好，因为它只需要开始于索引的某一点，而结束语另一点，不用扫描全部索引。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-42.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-49.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现index是sql使用了索引但是没用通过索引进行过滤，一般是使用了覆盖索引或者是利用索引进行了排序分组\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"all\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Full Table Scan，将遍历全表以找到匹配的行\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-58.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index_merge\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在查询过程中需要多个索引组合使用，通常出现在有 or 的关键字的sql中\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-15.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref_or_null\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于某个字段既需要关联条件，也需要null值得情况下。查询优化器会选择用ref_or_null连接查询。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-22.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index_subquery\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用索引来关联子查询，不再全表扫描。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-29.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-36.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-42.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"unique_subquery\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"该联接类型类似于index_subquery。 子查询中的唯一索引\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-49.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"备注：一般来说，得保证查询至少达到range级别，最好能达到ref。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"possible_keys\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示可能应用在这张表中的索引，一个或多个。 查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际使用的索引。如果为NULL，则没有使用索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中若使用了覆盖索引，则该索引和查询的select字段重叠\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-53-08.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name LIKE 'ab%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name LIKE 'ab%';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len字段能够帮你检查是否充分的利用上了索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如何计算\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、先看索引上字段的类型+长度比如 int=4 ;  varchar(20) =20 ; char(20) =20\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、如果是varchar或者char这种字符串字段，视字符集要乘不同的值，比如utf-8  要乘 3,GBK要乘2，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、varchar这种动态字符串要加2个字节\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4、允许为空的字段要加1个字节\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-54-48.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一组\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len=age的字节长度+name的字节长度=4+1  + ( 20*3+2)=5+62=67\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二组\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len=age的字节长度=4+1=5\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-55-41.png\"},\"children\":[]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示索引的哪一列被使用了，如果可能的话，是一个常数。哪些列或常量被用于查找索引列上的值\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-57-05.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rows\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rows列显示MySQL认为它执行查询时必须检查的行数。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"越少越好\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-57-55.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"filtered\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个字段表示存储引擎返回的数据在server层过滤后，剩下多少满足查询的记录数量的比例，注意是百分比，不是具体记录数\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Extra\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"包含不适合在其他列中显示但十分重要的额外信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using filesort\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现filesort的情况：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-00-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化后，不再出现filesort的情况：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-00-25.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明mysql会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取。 MySQL中无法利用索引完成的排序操作称为“文件排序”\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using temporary\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化前存在 using  temporary 和 using  filesort\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-02-18.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化前存在 using  temporary 和 using  filesort 不在，性能发生明显变化：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-02-29.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使了用临时表保存中间结果,MySQL在对查询结果排序时使用临时表。常见于排序 order by 和分组查询 group by。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"USING index\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示相应的select操作中使用了覆盖索引(Covering Index)，避免访问了表的数据行，效率不错！ 如果同时出现using where，表明索引被用来执行索引键值的查找; 如果没有同时出现using where，表明索引只是用来读取数据而非利用索引执行查找。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用索引进行了排序或分组\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using where\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表明使用了where过滤\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"using join buffer\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用了连接缓存：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-03-56.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"impossible where\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"where子句的值总是false，不能用来获取任何元组（说明语句可能存在语法错误，这是一个错误的语句）\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-04-19.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select tables optimized away\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在没有GROUPBY子句的情况下，基于索引优化MIN/MAX操作或者 对于MyISAM存储引擎优化COUNT(*)操作，不必等到执行阶段再进行计算， 查询执行计划生成的阶段即完成优化。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在innodb中：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-05-56.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在Myisam中：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-06-06.png\"},\"children\":[]}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"25-查询优化\"},\"children\":[{\"type\":\"text\",\"value\":\"2.5 查询优化\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.2 单表使用索引及常见索引失效\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全值匹配我最爱\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"系统中经常出现的sql语句如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30  \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4 AND emp.name = 'abcd'  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30  \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4 AND emp.name = 'abcd'  \\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引应该如何建立 ？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立索引\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_deptid_name ON emp(age,deptid,NAME)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_deptid_name ON emp(age,deptid,NAME)\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立索引前\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-11-24.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引后\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-11-44.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"最佳左前缀法则\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果系统经常出现的sql如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\r\\n# 或者\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.deptid=1 AND emp.name = 'abcd';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\r\\n# 或者\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.deptid=1 AND emp.name = 'abcd';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那原来的idx_age_deptid_name 还能否正常使用？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"虽然可以正常使用，但是只有部分被使用到了。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-18-31.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"完全没有使用上索引。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-18-46.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论：过滤条件要使用索引必须按照索引建立时的顺序，依次满足，一旦跳过某个字段，索引后面的字段都无法被使用。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不在索引列上做任何操作（计算、函数、(自动or手动)类型转换），会导致索引失效而转向全表扫描\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这两条sql哪种写法更好\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name LIKE 'abc%' \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE LEFT(emp.name,3) = 'abc'\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name LIKE 'abc%' \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE LEFT(emp.name,3) = 'abc'\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一种\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-21-33.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二种\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-21-43.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存储引擎不能使用索引中范围条件右边的列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果系统经常出现的sql如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.deptId>20 AND emp.name = 'abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.deptId>20 AND emp.name = 'abc';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那么索引 idx_age_deptid_name这个索引还能正常使用么？\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-24-08.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果这种 sql 出现较多应该建立：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create index idx_age_name_deptid on emp(age,name,deptid)\\r\\n# drop index idx_age_name_deptid on emp\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"create index idx_age_name_deptid on emp(age,name,deptid)\\r\\n# drop index idx_age_name_deptid on emp\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"效果\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-24-18.png\"},\"children\":[]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql 在使用不等于(!= 或者<>)的时候无法使用索引会导致全表扫描\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_name ON emp(NAME)\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name <> 'abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_name ON emp(NAME)\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name <> 'abc';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-26-50.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"is not null 也无法使用索引,但是is null是可以使用索引的\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"UPDATE emp SET age =NULL WHERE id=123456;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"UPDATE emp SET age =NULL WHERE id=123456;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下列哪个sql语句可以用到索引\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT * FROM emp WHERE age IS NULL;\\r\\nEXPLAIN SELECT * FROM emp WHERE age IS NOT NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT * FROM emp WHERE age IS NULL;\\r\\nEXPLAIN SELECT * FROM emp WHERE age IS NOT NULL;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-04.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"like以通配符开头('%abc...')mysql索引失效会变成全表扫描的操作\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串不加单引号索引失效\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-24.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小结：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"假设index(a,b,c)\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"table\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"thead\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Where语句\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"索引是否被使用\"}]}]}]},{\"type\":\"element\",\"tag\":\"tbody\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a，b\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b = 5 and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where b = 3 或者 where b = 3 and c = 4  或者 where c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"N\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and c = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用到a， 但是c不可以，b中间断了\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b > 4 and c = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用到a和b，c不能用在范围之后，b断了\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a is null and b is not null\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"is null 支持索引 但是is not null 不支持,所以 a 可以使用索引,但是  b不可以使用\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a <> 3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"不能使用索引\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where abs(a) =3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"不能使用 索引\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like 'kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like '%kk' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,只用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like '%kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,只用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like 'k%kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般性建议\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于单键索引，尽量选择针对当前query过滤性更好的索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，当前Query中过滤性最好的字段在索引字段顺序中，位置越靠前越好。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，尽量选择可以能够包含当前query中的where字句中更多字段的索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，如果某个字段可能出现范围查询时，尽量把这个字段放在索引次序的最后面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"书写sql语句时，尽量避免造成索引失效的情况\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.5 排序分组优化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建了索引\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create index idx_age_deptid_name on emp (age,deptid,name)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"create index idx_age_deptid_name on emp (age,deptid,name)\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"排序的条件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"无过滤 不索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"顺序错 必排序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方向反 必排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以下  是否能使用到索引，能否去掉using filesort\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"explain select SQL_NO_CACHE * from emp order by age,deptid; \\r\\nexplain select SQL_NO_CACHE * from emp order by age,deptid limit 10; \\r\\nexplain select * from emp where age=45 order by deptid;\\r\\nexplain select * from emp where age=45 order by deptid,name; \\r\\nexplain select * from emp where age=45 order by deptid,empno;\\r\\nexplain select * from emp where age=45 order by name,deptid;\\r\\nexplain select * from emp where deptid=45 order by age;\\r\\nexplain select * from emp where age=45 order by deptid desc, name desc;\\r\\nexplain select * from emp where age=45 order by deptid asc, name desc;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"explain select SQL_NO_CACHE * from emp order by age,deptid; \\r\\nexplain select SQL_NO_CACHE * from emp order by age,deptid limit 10; \\r\\nexplain select * from emp where age=45 order by deptid;\\r\\nexplain select * from emp where age=45 order by deptid,name; \\r\\nexplain select * from emp where age=45 order by deptid,empno;\\r\\nexplain select * from emp where age=45 order by name,deptid;\\r\\nexplain select * from emp where deptid=45 order by age;\\r\\nexplain select * from emp where age=45 order by deptid desc, name desc;\\r\\nexplain select * from emp where age=45 order by deptid asc, name desc;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ORDER BY子句，尽量使用Index方式排序,避免使用FileSort方式排序\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引的选择\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行案例前先清除emp上的索引，只留主键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询 年龄为30岁的，且员工编号小于101000的用户，按用户名称排序\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SELECT SQL_NO_CACHE * FROM emp WHERE age =30 AND empno <101000 ORDER BY NAME;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SELECT SQL_NO_CACHE * FROM emp WHERE age =30 AND empno <101000 ORDER BY NAME;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-33.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-42.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-50.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论：很显然,type 是 ALL,即最坏的情况。Extra 里还出现了 Using filesort,也是最坏的情况。优化是必须的。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开始优化：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"思路：尽量让where的过滤条件和排序使用上索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是一共两个字段(deptno,empno)上有过滤条件，一个字段(ename)有索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、我们建一个三个字段的组合索引可否？\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-43-53.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_empno_name ON emp(age,empno,NAME);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_empno_name ON emp(age,empno,NAME);\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我们发现using filesort 依然存在，所以name 并没有用到索引。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原因是因为empno是一个范围过滤，所以索引后面的字段不会再使用索引了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以我们建一个3值索引是没有意义的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、那么我们先删掉这个索引，DROP INDEX idx_age_empno_name ON emp\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了去掉filesort我们可以把索引建成\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_name ON emp(age,NAME);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_name ON emp(age,NAME);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也就是说empno 和name这个两个字段我只能二选其一。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这样我们优化掉了 using filesort。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行一下sql\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-46-14.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-46-20.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"速度果然提高了4倍。\\r\\n.......\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、但是\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果我们选择那个范围过滤，而放弃排序上的索引呢\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_age_name ON emp\\r\\ncreate index idx_age_eno on emp(age,empno); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_age_name ON emp\\r\\ncreate index idx_age_eno on emp(age,empno); \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"果然出现了filesort，而且type还是range光看字面其实并不美好。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我们来执行以下sql\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果竟然有 filesort的 sql 运行速度，超过了已经优化掉 filesort的 sql ，而且快了好多倍。何故？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原因是所有的排序都是在条件过滤之后才执行的，所以如果条件过滤了大部分数据的话，几百几千条数据进行排序其实并不是很消耗性能，即使索引优化了排序但实际提升性能很有限。相对的 empno<101000 这个条件如果没有用到索引的话，要对几万条的数据进行扫描，这是非常消耗性能的，所以索引放在这个字段上性价比最高，是最优选择。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论： 当范围条件和group by 或者 order by 的字段出现二选一时，优先观察条件字段的过滤数量，如果过滤的数据足够多，而需要排序的数据并不多时，优先把索引放在范围字段上。反之，亦然。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果不在索引列上，filesort有两种算法： mysql就要启动双路排序和单路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 4.1之前是使用双路排序,字面意思就是两次扫描磁盘，最终得到数据， 读取行指针和orderby列，对他们进行排序，然后扫描已经排序好的列表，按照列表中的值重新从列表中读取对应的数据输出\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从磁盘取排序字段，在buffer进行排序，再从磁盘取其他字段。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"取一批数据，要对磁盘进行了两次扫描，众所周知，I\\\\O是很耗时的，所以在mysql4.1之后，出现了第二种改进的算法，就是单路排序。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从磁盘读取查询需要的所有列，按照order by列在buffer对它们进行排序，然后扫描排序后的列表进行输出， 它的效率更快一些，避免了第二次读取数据。并且把随机IO变成了顺序IO,但是它会使用更多的空间， 因为它把每一行都保存在内存中了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论及引申出的问题\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于单路是后出的，总体而言好过双路\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是用单路有问题\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在sort_buffer中，方法B比方法A要多占用很多空间，因为方法B是把所有字段都取出, 所以有可能取出的数据的总大小超出了sort_buffer的容量，导致每次只能取sort_buffer容量大小的数据，进行排序（创建tmp文件，多路合并），排完再取取sort_buffer容量大小，再排……从而多次I/O。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"本来想省一次I/O操作，反而导致了大量的I/O操作，反而得不偿失。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化策略\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"增大sort_buffer_size参数的设置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"增大max_length_for_sort_data参数的设置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"减少select 后面的查询的字段。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Why\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"提高Order By的速度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Order by时select * 是一个大忌。只Query需要的字段，这点非常重要。在这里的影响是：\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.1 当Query的字段大小总和小于max_length_for_sort_data 而且排序字段不是 TEXT|BLOB 类型时，会用改进后的算法——单路排序， 否则用老算法——多路排序。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.2 两种算法的数据都有可能超出sort_buffer的容量，超出之后，会创建tmp文件进行合并排序，导致多次I/O，但是用单路排序算法的风险会更大一些,所以要提高sort_buffer_size。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"尝试提高 sort_buffer_size\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不管用哪种算法，提高这个参数都会提高效率，当然，要根据系统的能力去提高，因为这个参数是针对每个进程的  1M-8M之间调整\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"尝试提高 max_length_for_sort_data\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"提高这个参数， 会增加用改进算法的概率。但是如果设的太高，数据总容量超出sort_buffer_size的概率就增大，明显症状是高的磁盘I/O活动和低的处理器使用率.       1024-8192之间调整\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"GROUP BY关键字优化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"group by 使用索引的原则几乎跟order by一致 ，唯一区别是groupby 即使没有过滤条件用到索引，也可以直接使用索引。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.6 最后使用索引的手段：覆盖索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"什么是覆盖索引？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"简单说就是，select 到 from 之间查询的列 <=使用的索引列+主键\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-53-41.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"explain select * from emp where name like '%abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"explain select * from emp where name like '%abc';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-53-51.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用覆盖索引前\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-57-56.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用覆盖索引后\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-58-06.png\"},\"children\":[]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"三查询截取分析\"},\"children\":[{\"type\":\"text\",\"value\":\"三、查询截取分析\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"31-慢查询日志\"},\"children\":[{\"type\":\"text\",\"value\":\"3.1 慢查询日志\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL的慢查询日志是MySQL提供的一种日志记录，它用来记录在MySQL中响应时间超过阀值的语句，具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。long_query_time的默认值为10，意思是运行10秒以上的语句。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由他来查看哪些SQL超出了我们的最大忍耐时间值，比如一条sql执行超过5秒钟，我们就算慢SQL，希望能收集超过5秒的sql，结合之前explain进行全面分析。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.2 怎么玩\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下，MySQL数据库没有开启慢查询日志，需要我们手动来设置这个参数。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"当然，如果不是调优需要的话，一般不建议启动该参数，因为开启慢查询日志会或多或少带来一定的性能影响。慢查询日志支持将日志记录写入文件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看是否开启及如何开启\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下slow_query_log的值为OFF，表示慢查询日志是禁用的，可以通过设置slow_query_log的值来开启\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE '%slow_query_log%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE '%slow_query_log%';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-26-39.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开启\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"set global slow_query_log=1;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"set global slow_query_log=1;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用set global slow_query_log=1;开启了慢查询日志只对当前数据库生效，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果MySQL重启后则会失效。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-33.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-41.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局变量设置，对当前连接不影响\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-48.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对当前连接立刻生效\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-55.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要永久生效，就必须修改配置文件my.cnf（其它系统变量也是如此）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改my.cnf文件，\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"下增加或修改参数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log 和slow_query_log_file后，然后重启MySQL服务器。也即将如下两行配置进my.cnf文件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log =1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log_file=/var/lib/mysql/atguigu-slow.log\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关于慢查询的参数slow_query_log_file ，它指定慢查询日志文件的存放路径，系统默认会给一个缺省的文host_name-slow.log（如果没有指定参数slow_query_log_file的话）\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那么开启了慢查询日志后，什么样的SQL才会记录到慢查询日志里面呢？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个是由参数long_query_time控制，默认情况下long_query_time的值为10秒，\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-32-41.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以使用命令修改，也可以在my.cnf参数里面修改。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"假如运行时间正好等于long_query_time的情况，并不会被记录下来。也就是说，\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在mysql源码里是判断大于long_query_time，而非大于等于。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看当前多少秒算慢\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设置慢的阙值时间\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"set long_query_time=1\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"set long_query_time=1\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改为阙值到1秒钟的就是慢sql\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"记录慢SQL并后续分析\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实验一条慢sql\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-37-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"跟踪日志信息\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-36-06.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询当前系统中有多少条慢查询记录\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show global status like '%Slow_queries%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"show global status like '%Slow_queries%';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-38-09.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"配置版 my.cnf\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"[mysqld]\\r\\nslow_query_log=1\\r\\nslow_query_log_file=/var/lib/mysql/atguigu-slow.log\\r\\nlong_query_time=3\\r\\nlog_output=FILE\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"[mysqld]\\r\\nslow_query_log=1\\r\\nslow_query_log_file=/var/lib/mysql/atguigu-slow.log\\r\\nlong_query_time=3\\r\\nlog_output=FILE\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.3 日志分析工具mysqldumpslow\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在生产环境中，如果要手工分析日志，查找、分析SQL，显然是个体力活，MySQL提供了日志分析工具mysqldumpslow。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看mysqldumpslow的帮助信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow --help\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-39-43.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"-a: 不将数字抽象成N，字符串抽象成S\\r\\n-s: 是表示按照何种方式排序；\\r\\nc: 访问次数\\r\\nl: 锁定时间\\r\\nr: 返回记录\\r\\nt: 查询时间\\r\\nal:平均锁定时间\\r\\nar:平均返回记录数\\r\\nat:平均查询时间\\r\\n-t:即为返回前面多少条的数据；\\r\\n-g:后边搭配一个正则匹配模式，大小写不敏感的；\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"-a: 不将数字抽象成N，字符串抽象成S\\r\\n-s: 是表示按照何种方式排序；\\r\\nc: 访问次数\\r\\nl: 锁定时间\\r\\nr: 返回记录\\r\\nt: 查询时间\\r\\nal:平均锁定时间\\r\\nar:平均返回记录数\\r\\nat:平均查询时间\\r\\n-t:即为返回前面多少条的数据；\\r\\n-g:后边搭配一个正则匹配模式，大小写不敏感的；\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"工作常用参考\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到返回记录集最多的10个SQL\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到访问次数最多的10个SQL\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s c -t 10 /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s c -t 10 /var/lib/mysql/atguigu-slow.log\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到按照时间排序的前10条里面含有左连接的查询语句\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s t -t 10 -g \\\"left join\\\" /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s t -t 10 -g \\\"left join\\\" /var/lib/mysql/atguigu-slow.log\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"另外建议在使用这些命令时结合 | 和more 使用 ，否则有可能出现爆屏情况\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log | more\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log | more\\n\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"32-show-processlist\"},\"children\":[{\"type\":\"text\",\"value\":\"3.2 SHOW PROCESSLIST\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.2.1 能干什么：查询所有用户正在干什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果出现不顺眼的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"kill \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"四工具和技巧拾遗\"},\"children\":[{\"type\":\"text\",\"value\":\"四、工具和技巧拾遗\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"41-视图-view\"},\"children\":[{\"type\":\"text\",\"value\":\"4.1 视图   VIEW\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"将一段查询sql封装为一个虚拟的表。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个虚拟表只保存了sql逻辑，不会保存任何查询结果。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.2 作用\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、封装复杂sql语句，提高复用性\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、逻辑放在数据库上面，更新不需要发布程序，面对频繁的需求变更更灵活\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.3 适用场景\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"很多地方可以共用的一组查询结果\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"报表\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.4 语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用 -> 查询：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select * from view_name \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select * from view_name \\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用 -> 更新：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE OR REPLACE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE OR REPLACE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.5 注意事项(适用5.5)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql的视图中不允许有from 后面的子查询，但oracle可以\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"五主从复制\"},\"children\":[{\"type\":\"text\",\"value\":\"五、主从复制\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"51-复制的基本原理\"},\"children\":[{\"type\":\"text\",\"value\":\"5.1 复制的基本原理\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.1.1 slave会从master读取binlog来进行数据同步\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.1.2 三步骤+原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-47-06.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL复制过程分成三步：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1 master将改变记录到二进制日志（binary log）。这些记录过程叫做二进制日志事件，binary log events；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2 slave将master的binary log events拷贝到它的中继日志（relay log）；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3 slave重做中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4 master将改变记录到二进制日志（binary log）。这些记录过程叫做二进制日志事件，binary log events\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5 slave将master的binary log events拷贝到它的中继日志（relay log）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6 slave重做中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"52-复制的基本原则\"},\"children\":[{\"type\":\"text\",\"value\":\"5.2 复制的基本原则\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.1 每个slave只有一个master\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.2 每个slave只能有一个唯一的服务器ID\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.3 每个master可以有多个salve\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"53-复制的最大问题\"},\"children\":[{\"type\":\"text\",\"value\":\"5.3 复制的最大问题\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.3.1 延时\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"54-一主一从常见配置\"},\"children\":[{\"type\":\"text\",\"value\":\"5.4 一主一从常见配置\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.1 mysql版本一致且后台以服务运行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.2 主从都配置在\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"结点下，都是小写\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.3 主机修改my.ini配置文件\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-49-11.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 主服务器唯一ID\\r\\nserver-id=1\\r\\n# 启用二进制日志\\r\\n# log-bin=自己本地的路径/data/mysqlbin\\r\\nlog-bin=D:/devSoft/MySQLServer5.5/data/mysqlbin\\r\\n# 设置不要复制的数据库\\r\\nbinlog-ignore-db=mysql\\r\\n# 设置需要复制的数据库\\r\\nbinlog-do-db=需要复制的主数据库名字\\r\\n# 设置logbin格式\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=ROW\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"# 主服务器唯一ID\\r\\nserver-id=1\\r\\n# 启用二进制日志\\r\\n# log-bin=自己本地的路径/data/mysqlbin\\r\\nlog-bin=D:/devSoft/MySQLServer5.5/data/mysqlbin\\r\\n# 设置不要复制的数据库\\r\\nbinlog-ignore-db=mysql\\r\\n# 设置需要复制的数据库\\r\\nbinlog-do-db=需要复制的主数据库名字\\r\\n# 设置logbin格式\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=ROW\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-50-40.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.4 mysql主从复制起始时，从机不继承主机数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.5 从机配置文件修改my.cnf的\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"栏位下\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"server-id = 2\\r\\n# 注意 my.cnf 中有server-id = 1\\r\\nrelay-log=mysql-relay\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"server-id = 2\\r\\n# 注意 my.cnf 中有server-id = 1\\r\\nrelay-log=mysql-relay\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.6 因修改过配置文件，请主机+从机都重启后台mysql服务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.7 主机从机都关闭防火墙\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"windows手动关闭\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"安全工具关上：腾讯管家\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"360不影响\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关闭虚拟机linux防火墙 systemctl stop firewalld\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.8 在Windows主机上建立帐户并授权slave\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"GRANT REPLICATION SLAVE ON *.* TO 'zhangsan'@'从机器数据库IP' IDENTIFIED BY '123456';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"GRANT REPLICATION SLAVE ON *.* TO 'zhangsan'@'从机器数据库IP' IDENTIFIED BY '123456';\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-53-37.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询master的状态\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show master status;\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"show master status;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-54-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"记录下File和Position的值\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.9 在Linux从机上配置需要复制的主机\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CHANGE MASTER TO MASTER_HOST='主机IP',MASTER_USER='zhangsan',MASTER_PASSWORD='123456',MASTER_LOG_FILE='File名字',MASTER_LOG_POS=Position数字;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CHANGE MASTER TO MASTER_HOST='主机IP',MASTER_USER='zhangsan',MASTER_PASSWORD='123456',MASTER_LOG_FILE='File名字',MASTER_LOG_POS=Position数字;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CHANGE MASTER TO MASTER_HOST='192.168.124.3',\\r\\nMASTER_USER='zhangsan',\\r\\nMASTER_PASSWORD='123456',\\r\\nMASTER_LOG_FILE='mysqlbin.具体数字',MASTER_LOG_POS=具体值;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CHANGE MASTER TO MASTER_HOST='192.168.124.3',\\r\\nMASTER_USER='zhangsan',\\r\\nMASTER_PASSWORD='123456',\\r\\nMASTER_LOG_FILE='mysqlbin.具体数字',MASTER_LOG_POS=具体值;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"启动从服务器复制功能\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"start slave;\\r\\nshow slave status\\\\G;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"start slave;\\r\\nshow slave status\\\\G;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-56-27.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下面两个参数都是Yes，则说明主从配置成功！\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"Slave_IO_Running: Yes\\r\\nSlave_SQL_Running: Yes\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"Slave_IO_Running: Yes\\r\\nSlave_SQL_Running: Yes\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.10 主机新建库、新建表、insert记录，从机复制\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.11 如何停止从服务复制功能\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"stop slave;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"stop slave;\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.12 如何重新配置主从\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"stop slave;\\r\\nreset master;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"stop slave;\\r\\nreset master;\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"六mycat\"},\"children\":[{\"type\":\"text\",\"value\":\"六、mycat\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"61-mycat介绍\"},\"children\":[{\"type\":\"text\",\"value\":\"6.1 Mycat介绍\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据库中间件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前身是阿里的cobar\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.2 干什么的\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、读写分离\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、数据分片\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"垂直拆分\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"水平拆分\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"垂直+水平拆分\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-40-36.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、多数据源整合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.3 原理\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"“拦截”\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Mycat 的原理中最重要的一个动词是“拦截”，它拦截了用户发送过来的 SQL 语句，首先对 SQL 语句做了一些特定的分析：如分片分析、路由分析、读写分离分析、缓存分析等，然后将此 SQL 发往后端的真实数据库，并将返回的结果做适当的处理，最终再返回给用户\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-42-06.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这种方式把数据库的分布式从代码中解耦出来，程序员察觉不出来后台使用mycat还是mysql。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"62-安装启动\"},\"children\":[{\"type\":\"text\",\"value\":\"6.2 安装启动\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.1 解压缩文件拷贝到linux下 /usr/local/\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.2 三个文件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义逻辑库，表、分片节点等内容\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rule.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义分片规则\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"server.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义用户以及系统相关变量，如端口等.\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.3 启动前先修改schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <!--逻辑库    name名称,   checkSQLschema         sqlMaxLimit 末尾是否要加 limit xxx-->\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <!--逻辑库    name名称,   dataHost 引用的哪个dataHost      database:对应mysql的database-->\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"localhost1\\\" database=\\\"db1\\\" />\\r\\n  <dataHost name=\\\"localhost1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <!-- can have multi write hosts -->\\r\\n    <writeHost host=\\\"hostM1\\\" url=\\\"localhost:3306\\\" user=\\\"root\\\" password=\\\"123456\\\"></writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <!--逻辑库    name名称,   checkSQLschema         sqlMaxLimit 末尾是否要加 limit xxx-->\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <!--逻辑库    name名称,   dataHost 引用的哪个dataHost      database:对应mysql的database-->\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"localhost1\\\" database=\\\"db1\\\" />\\r\\n  <dataHost name=\\\"localhost1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <!-- can have multi write hosts -->\\r\\n    <writeHost host=\\\"hostM1\\\" url=\\\"localhost:3306\\\" user=\\\"root\\\" password=\\\"123456\\\"></writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.4 再修改server.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<user name=\\\"root\\\">\\r\\n  <property name=\\\"password\\\">654321</property>\\r\\n  <property name=\\\"schemas\\\">TESTDB</property>\\r\\n</user>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<user name=\\\"root\\\">\\r\\n  <property name=\\\"password\\\">654321</property>\\r\\n  <property name=\\\"schemas\\\">TESTDB</property>\\r\\n</user>\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.5 验证数据库访问情况\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p123123 -h 192.168.154.1 -P 3306\\r\\nmysql -uroot -p123123 -h 192.168.154.154 -P 3306\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p123123 -h 192.168.154.1 -P 3306\\r\\nmysql -uroot -p123123 -h 192.168.154.154 -P 3306\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如本机远程访问报错，请建对应用户\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"grant all privileges on *.* to root@'缺少的host'  identified by '123123';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"grant all privileges on *.* to root@'缺少的host'  identified by '123123';\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.6 启动程序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制台启动 ：去mycat/bin 目录下 mycat console\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后台启动 ：去mycat/bin 目录下 mycat start\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.7 启动时可能出现报错\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"域名解析失败\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-50-50.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、用vim 修改 /etc/hosts 文件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 127.0.0.1 后面增加你的机器名\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-50-59.png.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、修改后重新启动网络服务\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-51-05.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.8 登录\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后台管理窗口\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p654321 -P9066 -h192.168.67.131\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p654321 -P9066 -h192.168.67.131\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"命令\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show database\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"show database\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-52-35.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show @@help\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-52-44.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据窗口\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p654321 -P8066 -h192.168.67.131\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p654321 -P8066 -h192.168.67.131\\n\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"63-读写分离\"},\"children\":[{\"type\":\"text\",\"value\":\"6.3 读写分离\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.3.1 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!--读库（从库）的配置 -->\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\"></readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!--读库（从库）的配置 -->\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\"></readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"负载均衡类型，目前的取值有4 种：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"0\\\", 不开启读写分离机制，所有读操作都发送到当前可用的 writeHost 上。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"1\\\"，全部的 readHost 与 stand by writeHost 参与 select 语句的负载均衡，简单的说，当双主双从模式(M1->S1，M2->S2，并且 M1 与 M2 互为主备)，正常情况下，M2,S1,S2 都参与 select 语句的负载均衡。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"2\\\"，所有读操作都随机的在 writeHost、readhost 上分发。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"3\\\"，所有读请求随机的分发到 readhost 执行，writerHost 不负担读压力\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.3.2 读写分离\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建表\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create table t_replica \\r\\n(id int auto_increment , \\r\\n  name varchar(200) \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"create table t_replica \\r\\n(id int auto_increment , \\r\\n  name varchar(200) \\r\\n);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分别在两个库下插入：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into t_replica(name) values (@@hostname)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"insert into t_replica(name) values (@@hostname)\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"然后再mycat下执行select * from t_replica能够\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"64-分库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.4 分库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.4.1 如何选择分库表\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#客户表  rows:20万 \\r\\nCREATE TABLE customer(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    NAME VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"#客户表  rows:20万 \\r\\nCREATE TABLE customer(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    NAME VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单表   rows:600万\\r\\nCREATE TABLE orders(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type INT,\\r\\n    customer_id INT,\\r\\n    amount DECIMAL(10,2),\\r\\n    PRIMARY KEY(id)  \\r\\n); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"#订单表   rows:600万\\r\\nCREATE TABLE orders(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type INT,\\r\\n    customer_id INT,\\r\\n    amount DECIMAL(10,2),\\r\\n    PRIMARY KEY(id)  \\r\\n); \\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单详细表     rows:600万\\r\\nCREATE TABLE orders_detail(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    detail VARCHAR(2000),\\r\\n    order_id INT,\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"#订单详细表     rows:600万\\r\\nCREATE TABLE orders_detail(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    detail VARCHAR(2000),\\r\\n    order_id INT,\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单状态字典表   rows:20\\r\\nCREATE TABLE dict_order_type(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"#订单状态字典表   rows:20\\r\\nCREATE TABLE dict_order_type(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select o.*,od.detail,d.order_type \\r\\nfrom orders  o \\r\\ninner join orders_detail  od on o.id =od.order_id  \\r\\ninner join dict_order_type d on o.order_type=d.id  \\r\\nwhere o.customer_id=xxxx\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"select o.*,od.detail,d.order_type \\r\\nfrom orders  o \\r\\ninner join orders_detail  od on o.id =od.order_id  \\r\\ninner join dict_order_type d on o.order_type=d.id  \\r\\nwhere o.customer_id=xxxx\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.4.2 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"65-水平分表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.5 水平分表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.1 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.2 rule.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<tableRule name=\\\"mod_rule\\\">\\r\\n  <rule>\\r\\n    <columns>customer_id</columns>\\r\\n    <algorithm>mod-long</algorithm>\\r\\n  </rule>\\r\\n</tableRule>\\r\\n\\r\\n<function name=\\\"mod-long\\\" class=\\\"io.mycat.route.function.PartitionByMod\\\">\\r\\n  <!-- how many data nodes -->\\r\\n  <property name=\\\"count\\\">2</property>\\r\\n</function>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<tableRule name=\\\"mod_rule\\\">\\r\\n  <rule>\\r\\n    <columns>customer_id</columns>\\r\\n    <algorithm>mod-long</algorithm>\\r\\n  </rule>\\r\\n</tableRule>\\r\\n\\r\\n<function name=\\\"mod-long\\\" class=\\\"io.mycat.route.function.PartitionByMod\\\">\\r\\n  <!-- how many data nodes -->\\r\\n  <property name=\\\"count\\\">2</property>\\r\\n</function>\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.3 跨库join\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ER表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了相关联的表的行尽量分在一个库下\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schma name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\">\\r\\n      <childTable name=\\\"orders_detail\\\" primaryKey=\\\"id\\\" joinKey=\\\"order_id\\\" parentKey=\\\"id\\\" />\\r\\n    </table>\\r\\n    <table name=\\\"dict_status\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n    </schema>\\r\\n    <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n    <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n    <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        </readHost> -->\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n    <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schma name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\">\\r\\n      <childTable name=\\\"orders_detail\\\" primaryKey=\\\"id\\\" joinKey=\\\"order_id\\\" parentKey=\\\"id\\\" />\\r\\n    </table>\\r\\n    <table name=\\\"dict_status\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n    </schema>\\r\\n    <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n    <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n    <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        </readHost> -->\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n    <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n</mycat:schema>\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建相关表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设定为全局的表，会直接复制给每个数据库一份，所有写操作也会同步给多个库。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以全局表一般不能是大数据表或者更新频繁的表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般是字典表或者系统表为宜。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n    <table name=\\\"dict_order_type\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n    <table name=\\\"dict_order_type\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\n\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.4 全局序列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三种方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.本地文件【不推荐】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.数据库方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据库序列方式原理\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用数据库一个表 来进行计数累加。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是并不是每次生成序列都读写数据库，这样效率太低\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mycat会预加载一部分号段到mycat的内存中，这样大部分读写序列都是在内存中完成的。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果内存中的号段用完了 mycat会再向数据库要一次。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"问：那如果mycat崩溃了 ，那内存中的序列岂不是都没了？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是的。如果是这样，那么mycat启动后会向数据库申请新的号段，原有号段会弃用。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也就是说如果mycat重启，那么损失是当前的号段没用完的号码，但是不会因此出现主键重复。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建库序列脚本\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"win10\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE MYCAT_SEQUENCE (NAME VARCHAR(50) NOT NULL,current_value INT NOT NULL,  increment INT NOT NULL DEFAULT 100, PRIMARY KEY(NAME)) ENGINE=INNODB;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE MYCAT_SEQUENCE (NAME VARCHAR(50) NOT NULL,current_value INT NOT NULL,  increment INT NOT NULL DEFAULT 100, PRIMARY KEY(NAME)) ENGINE=INNODB;\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_currval(seq_name VARCHAR(50)) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC  \\r\\nBEGIN\\r\\nDECLARE retval VARCHAR(64);\\r\\nSET retval=\\\"-999999999,null\\\";\\r\\nSELECT CONCAT(CAST(current_value AS CHAR),\\\",\\\",CAST(increment AS CHAR)) INTO retval FROM\\r\\nMYCAT_SEQUENCE WHERE NAME = seq_name;\\r\\nRETURN retval;\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_setval(seq_name VARCHAR(50),VALUE INTEGER) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = VALUE\\r\\nWHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER ;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_nextval(seq_name VARCHAR(50)) RETURNS VARCHAR(64) \\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = current_value + increment WHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nSELECT * FROM MYCAT_SEQUENCE\\r\\n\\r\\nTRUNCATE TABLE MYCAT_SEQUENCE\\r\\n\\r\\n##增加要用的序列\\r\\nINSERT INTO MYCAT_SEQUENCE(NAME,current_value,increment) VALUES ('ORDERS', 400000,\\r\\n100);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"DELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_currval(seq_name VARCHAR(50)) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC  \\r\\nBEGIN\\r\\nDECLARE retval VARCHAR(64);\\r\\nSET retval=\\\"-999999999,null\\\";\\r\\nSELECT CONCAT(CAST(current_value AS CHAR),\\\",\\\",CAST(increment AS CHAR)) INTO retval FROM\\r\\nMYCAT_SEQUENCE WHERE NAME = seq_name;\\r\\nRETURN retval;\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_setval(seq_name VARCHAR(50),VALUE INTEGER) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = VALUE\\r\\nWHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER ;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_nextval(seq_name VARCHAR(50)) RETURNS VARCHAR(64) \\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = current_value + increment WHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nSELECT * FROM MYCAT_SEQUENCE\\r\\n\\r\\nTRUNCATE TABLE MYCAT_SEQUENCE\\r\\n\\r\\n##增加要用的序列\\r\\nINSERT INTO MYCAT_SEQUENCE(NAME,current_value,increment) VALUES ('ORDERS', 400000,\\r\\n100);\\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.修改mycat配置\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"sequence_db_conf.properties \\r\\nvim sequence_db_conf.properties\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"sequence_db_conf.properties \\r\\nvim sequence_db_conf.properties\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"意思是 ORDERS这个序列在dn1这个节点上，具体dn1节点是哪台机子，请参考schema.xml\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"server.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"vim server.xml\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_15-08-30.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"然后重启\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入语句\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into `orders`(id,amount,customer_id,order_type) values(next value for MYCATSEQ_ORDERS,1000,101,102);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"insert into `orders`(id,amount,customer_id,order_type) values(next value for MYCATSEQ_ORDERS,1000,101,102);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"时间戳方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"18位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较长\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自主生成\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"根据业务逻辑组合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以利用 redis的单线程原子性 incr来生成序列\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"sql-语句\"},\"children\":[{\"type\":\"text\",\"value\":\"sql 语句\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<<< @/program/learnMySql.sql\"}]}]},\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"mysql基础\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL基础\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"一为什么要学习数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"一、为什么要学习数据库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"持久化数据\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方便检索\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存储大量数据\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"共享、安全\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过组合分析，获取新的数据\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"二数据库的相关概念\"},\"children\":[{\"type\":\"text\",\"value\":\"二、数据库的相关概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类：\"},{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DBMS、DB、SQL\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DB:database数据库，存储一系列有组织数据的容器\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DBMS：Database Management System数据库管理系统，使用DBMS管理和维护DB\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL：StructureQueryLanguage结构化查询语言，程序员用于和DBMS通信的语言\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"三数据库存储数据的特点\"},\"children\":[{\"type\":\"text\",\"value\":\"三、数据库存储数据的特点\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据先放在表中，表再放在库中\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一个库可以有多张表，每张表都有自己的唯一标识名\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一张表的设计，类似于java中”类\\\"的设计\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的字段的设计，类似于属性的设计\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的单条记录，类似于一个对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表中的所有的记录，类似于对象的集合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"orm ：object relation mapping 对象关系映射\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"四初始mysql\"},\"children\":[{\"type\":\"text\",\"value\":\"四、初始MySQL\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql产品的介绍\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL产品的介绍\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 前身属于瑞典的一家公司AB，2008年被sun公司收购，2009年sun被oracle公司收购。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①体积小、安装较方便\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②开源、免费\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"③性能高、稳定性好\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"④兼容性好\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql产品的安装\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL产品的安装          ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基于C/S架构的DBMS，需要安装服务端和客户端\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.oracle.com\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"www.oracle.com\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL5.5\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql服务的启动和停止\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL服务的启动和停止     ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式一：图形化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右击——计算机管理——服务——MySQL服务\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式二：通过管理员身份运行dos\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"net start 服务名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"net stop 服务名\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"mysql服务的登录和退出\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL服务的登录和退出     ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式一：通过dos命令\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql -h主机名 -P端口号 -u用户名 -p密码\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"注意:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果是本机，则-h主机名  可以省略\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果端口号是3306，则-P端口号可以省略\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方式二：通过图形化界面客户端\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过SQLyog/Navicat，直接输入用户名、密码等连接进去即可\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"###　MySQL的常见命令和语法规范\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①常见命令\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show databases             显示当前连接下所有数据库\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show tables                    显示当前库中所有表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show tables from 库名  显示指定库中所有表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show  columns from 表名    显示指定表中所有列\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"use 库名                             打开/使用指定库\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②语法规范\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不区分大小写\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每条命令结尾建议用分号\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"注释：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#单行注释\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"-- 单行注释\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/\"},{\"type\":\"element\",\"tag\":\"em\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行注释\"}]},{\"type\":\"text\",\"value\":\"/\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"五dql语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"五、DQL语言的学习```````````★````````````\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念：DQL:Data Query Language  数据查询语言\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"51-基础查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.1 基础查询        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 from 表名;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 from 表名;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①查询结果集是一个虚拟表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②查询列表可以是单个字段、多个字段、常量、表达式、函数，可以是以上的组合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申1：起别名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 字段名  as  \\\"别名\\\" from 表名;\\r\\nselect 字段名 \\\"别名\\\" from 表名;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 字段名  as  \\\"别名\\\" from 表名;\\r\\nselect 字段名 \\\"别名\\\" from 表名;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申2：+的作用\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"作用：加法运算\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果两个操作数都是数值型，则直接做加法运算\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果其中一个为非数值型，则将强值转换成数值型，如果转换失败，则当做0\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"'123'+4 => 127\\r\\n'abc'+4 => 4\\r\\nnull+4 =>4\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"'123'+4 => 127\\r\\n'abc'+4 => 4\\r\\nnull+4 =>4\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果其中一个为null，则结果直接为null\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申3：去重\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select distinct department_id from employees;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select distinct department_id from employees;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引申4：补充函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select version();\\r\\nselect database();\\r\\nselect user();\\r\\nselect ifnull(字段名,表达式);\\r\\nselect concat(字符1，字符2,字符3);\\r\\nselect length(字符/字段);获取字节长度\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select version();\\r\\nselect database();\\r\\nselect user();\\r\\nselect ifnull(字段名,表达式);\\r\\nselect concat(字符1，字符2,字符3);\\r\\nselect length(字符/字段);获取字节长度\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"52-条件查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.2 条件查询  \\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 \\r\\nfrom 表名\\r\\nwhere 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 \\r\\nfrom 表名\\r\\nwhere 筛选条件;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"筛选条件的分类：：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①按条件表达式筛选\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关系运算符：>=   <   <=   >    <>   =\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②按逻辑表达式筛选\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"逻辑运算符：and   or   not\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"③模糊查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"like:一般和通配符搭配使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"_:任意单个字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"%:任意多个字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"between and:一般用于判断某字段是否在指定的区间\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a between 10 and 100\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"in：一般用于判断某字段是否在指定的列表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a in(10,30,50)\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"is null:判断null值\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"​\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"53-排序查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.3 排序查询  \\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select  查询列表\\r\\nfrom 表名\\r\\nwhere 筛选条件\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select  查询列表\\r\\nfrom 表名\\r\\nwhere 筛选条件\\r\\norder by 排序列表;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①排序列表可以是 单个字段、多个字段、函数、表达式、别名、列的索引，以及以上的组合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②升序:asc  降序:desc\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"54-常见函数\"},\"children\":[{\"type\":\"text\",\"value\":\"5.4 常见函数        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概述\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：sql中的函数分为单行函数和分组函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用语法：select 函数名(实参列表);\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"concat(str1,str2,..)    # 拼接字符\\r\\nsubstr(str,pos)   # 截取从pos开始的所有字符，   起始索引从1开始\\r\\nsubstr(str,pos,len)   # 截取len个从pos开始的字符，起始索引从1开始\\r\\nlength(str)   # 获取字节个数\\r\\nchar_length(str)    # 获取字符个数\\r\\nupper(str)    # 变大写\\r\\nlower(str)    # 变小写\\r\\ntrim(【substr from】str)    # 去前后指定字符，默认是去空格\\r\\nleft(str,len)   # 从左边截取指定len个数的 字符\\r\\nright(str,len)    # 从右边截取指定len个数的 字符\\r\\nlpad(str,substr,len)    # 左填充\\r\\nrpad(str,substr,len)：右填充\\r\\nstrcmp(str1,str2)   # 比较两个字符的大小\\r\\ninstr(str,substr)   # 获取substr在str中第一次出现的索引\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"concat(str1,str2,..)    # 拼接字符\\r\\nsubstr(str,pos)   # 截取从pos开始的所有字符，   起始索引从1开始\\r\\nsubstr(str,pos,len)   # 截取len个从pos开始的字符，起始索引从1开始\\r\\nlength(str)   # 获取字节个数\\r\\nchar_length(str)    # 获取字符个数\\r\\nupper(str)    # 变大写\\r\\nlower(str)    # 变小写\\r\\ntrim(【substr from】str)    # 去前后指定字符，默认是去空格\\r\\nleft(str,len)   # 从左边截取指定len个数的 字符\\r\\nright(str,len)    # 从右边截取指定len个数的 字符\\r\\nlpad(str,substr,len)    # 左填充\\r\\nrpad(str,substr,len)：右填充\\r\\nstrcmp(str1,str2)   # 比较两个字符的大小\\r\\ninstr(str,substr)   # 获取substr在str中第一次出现的索引\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数学函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ceil(x)   # 向上取整\\r\\nfloor(x)    # 向下取整\\r\\nround(x,d)    # 四舍五入\\r\\nmod(x,y)    # 取模/取余\\r\\ntruncate(x,d)   # 截断，保留小数点后d位\\r\\nabs(x)    # 求绝对值\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ceil(x)   # 向上取整\\r\\nfloor(x)    # 向下取整\\r\\nround(x,d)    # 四舍五入\\r\\nmod(x,y)    # 取模/取余\\r\\ntruncate(x,d)   # 截断，保留小数点后d位\\r\\nabs(x)    # 求绝对值\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"日期函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"now():获取当前日期——时间\\r\\ncurtime():只有时间\\r\\ncurdate():只有日期\\r\\ndate_format(date,格式):格式日期为字符\\r\\nstr_to_date(str,格式):将字符转换成日期\\r\\ndatediff(date1,date2):获取两个日期之间的天数差\\r\\nyear(date)\\r\\nmonth(date)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"now():获取当前日期——时间\\r\\ncurtime():只有时间\\r\\ncurdate():只有日期\\r\\ndate_format(date,格式):格式日期为字符\\r\\nstr_to_date(str,格式):将字符转换成日期\\r\\ndatediff(date1,date2):获取两个日期之间的天数差\\r\\nyear(date)\\r\\nmonth(date)\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4 流程控制函数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"①if(条件，表达式1，表达式2)：如果条件成立，返回表达式1，否则返回表达式2\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①if(条件，表达式1，表达式2)：如果条件成立，返回表达式1，否则返回表达式2\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"case 表达式\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"②case 表达式\\r\\nwhen 值1 then 结果1\\r\\nwhen 值2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②case 表达式\\r\\nwhen 值1 then 结果1\\r\\nwhen 值2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"case\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"③case\\r\\nwhen 条件1 then 结果1\\r\\nwhen 条件2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"③case\\r\\nwhen 条件1 then 结果1\\r\\nwhen 条件2 then 结果2\\r\\n...\\r\\nelse 结果n\\r\\nend\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"55-分组函数\"},\"children\":[{\"type\":\"text\",\"value\":\"5.5 分组函数        ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：分组函数往往用于实现将一组数据进行统计计算，最终得到一个值，又称为聚合函数或统计函数\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"sum:求和\\r\\navg:平均\\r\\nmax:最大\\r\\nmin:最小\\r\\ncount:个数\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sum:求和\\r\\navg:平均\\r\\nmax:最大\\r\\nmin:最小\\r\\ncount:个数\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"接收参数特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实参的字段的类型，sum和avg只支持数值型，其他三个可以支持任意类型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这五个函数都忽略null值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count可以支持以下参数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(字段)：查询该字段非空值 的个数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(*) ：查询结果集的行数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"count(1)：查询结果集的行数\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分组函数可以和distinct搭配使用，实现去重的统计\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select count(distinct 字段) from 表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select count(distinct 字段) from 表;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 5.5 分组函数        ★    \\r\\nSELECT SUM(salary),AVG(salary),MIN(salary),MAX(salary),COUNT(salary) FROM   employees;\\r\\n\\r\\nSELECT COUNT(employee_id) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees WHERE salary > 2500;\\r\\n\\r\\nSELECT COUNT(manager_id) FROM employees;\\r\\n\\r\\n# 5.1 统计结果集的行数，推荐使用count(*)\\r\\nSELECT COUNT(*) FROM employees;\\r\\n\\r\\nSELECT COUNT(*) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT COUNT(1) FROM employees;\\r\\n\\r\\nSELECT COUNT(1) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT * FROM employees;\\r\\n\\r\\n#5.2 搭配distinct实现去重统计\\r\\n# 需求，查询部门个数\\r\\nSELECT COUNT(DISTINCT department_id) FROM employees;\\r\\n\\r\\n#5.3 思考：每个部门的总工资、平均工资？需要用到分组查询，只用分组函数无法实现\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 30;\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 35;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"## 5.5 分组函数        ★    \\r\\nSELECT SUM(salary),AVG(salary),MIN(salary),MAX(salary),COUNT(salary) FROM   employees;\\r\\n\\r\\nSELECT COUNT(employee_id) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees;\\r\\n\\r\\nSELECT COUNT(salary) FROM employees WHERE salary > 2500;\\r\\n\\r\\nSELECT COUNT(manager_id) FROM employees;\\r\\n\\r\\n# 5.1 统计结果集的行数，推荐使用count(*)\\r\\nSELECT COUNT(*) FROM employees;\\r\\n\\r\\nSELECT COUNT(*) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT COUNT(1) FROM employees;\\r\\n\\r\\nSELECT COUNT(1) FROM employees WHERE department_id=30;\\r\\n\\r\\nSELECT * FROM employees;\\r\\n\\r\\n#5.2 搭配distinct实现去重统计\\r\\n# 需求，查询部门个数\\r\\nSELECT COUNT(DISTINCT department_id) FROM employees;\\r\\n\\r\\n#5.3 思考：每个部门的总工资、平均工资？需要用到分组查询，只用分组函数无法实现\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 30;\\r\\nSELECT SUM(salary) FROM employees WHERE department_id = 35;\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"56-分组查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.6 分组查询\\t\\t   ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 分组函数,分组的字段\\r\\nfrom 表名\\r\\nwhere 分组前的筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选条件\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 分组函数,分组的字段\\r\\nfrom 表名\\r\\nwhere 分组前的筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选条件\\r\\norder by 排序列表;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分组列表可以是单个字段、多个字段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"筛选条件分为两类\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"table\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"thead\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"筛选方式\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"筛选的基表\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用的关键字\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"位置\"}]}]}]},{\"type\":\"element\",\"tag\":\"tbody\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组前筛选\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"原始表\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"group by前面\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组后筛选\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"分组后的结果集\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"having\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"group by后面\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 6、分组查询          ★    \\r\\nSELECT SUM(salary),AVG(salary),department_id FROM employees GROUP BY  department_id;    \\r\\n\\r\\n# 查询每个工种的平均工资\\r\\nSELECT AVG(salary),job_id FROM employees GROUP BY job_id;\\r\\n\\r\\n# 查询每个领导的手下人数（有的部门没有领导，需要过滤下）\\r\\nSELECT COUNT(*),manager_id FROM employees WHERE manager_id IS NOT NULL GROUP BY   manager_id;\\r\\n\\r\\n# 查询邮箱中包含a字符的 每个部门的最高工资\\r\\nSELECT MAX(salary) 最高工资 ,department_id FROM employees WHERE email LIKE '%a%'  GROUP BY department_id;\\r\\n\\r\\n# 查询每个领导手下有奖金的员工的平均工资\\r\\nSELECT AVG(salary) 平均工资,manager_id FROM employees WHERE commission_pct IS NOT   NULL GROUP BY manager_id;\\r\\n\\r\\n# 查询哪个部门的员工个数>5\\r\\n# 需要使用分组后筛选having\\r\\nSELECT COUNT(*),department_id FROM employees GROUP BY department_id HAVING COUNT(*) >5;\\r\\n\\r\\n# 分组函数做条件只可能放在having后面\\r\\n\\r\\n# 求每个工种没有奖金的员工的最高工资>12000的工种编号和最高工资\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>12000;\\r\\n\\r\\n# 领导编号>102的每个领导手下的最低工资大于5000的领导编号和最低工资\\r\\nSELECT MIN(salary) 最低工资,manager_id FROM employees WHERE manager_id > 102 GROUP  BY manager_id HAVING MIN(salary)>5000;\\r\\n\\r\\n# 可以实现排序\\r\\n# 查询每个工种没有奖金的员工的最高工资>6000的工种编号和最高工资，按最高工资升序\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>6000 ORDER BY MAX(salary) ASC;\\r\\n\\r\\n# 按多个字段分组\\r\\n# 查询每个工种每个部门的最低工资，并按先按工种升序再最低工资降序\\r\\nSELECT MIN(salary),job_id,department_id FROM employees GROUP BY job_id, department_id ORDER BY job_id ASC,MIN(salary) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"## 6、分组查询          ★    \\r\\nSELECT SUM(salary),AVG(salary),department_id FROM employees GROUP BY  department_id;    \\r\\n\\r\\n# 查询每个工种的平均工资\\r\\nSELECT AVG(salary),job_id FROM employees GROUP BY job_id;\\r\\n\\r\\n# 查询每个领导的手下人数（有的部门没有领导，需要过滤下）\\r\\nSELECT COUNT(*),manager_id FROM employees WHERE manager_id IS NOT NULL GROUP BY   manager_id;\\r\\n\\r\\n# 查询邮箱中包含a字符的 每个部门的最高工资\\r\\nSELECT MAX(salary) 最高工资 ,department_id FROM employees WHERE email LIKE '%a%'  GROUP BY department_id;\\r\\n\\r\\n# 查询每个领导手下有奖金的员工的平均工资\\r\\nSELECT AVG(salary) 平均工资,manager_id FROM employees WHERE commission_pct IS NOT   NULL GROUP BY manager_id;\\r\\n\\r\\n# 查询哪个部门的员工个数>5\\r\\n# 需要使用分组后筛选having\\r\\nSELECT COUNT(*),department_id FROM employees GROUP BY department_id HAVING COUNT(*) >5;\\r\\n\\r\\n# 分组函数做条件只可能放在having后面\\r\\n\\r\\n# 求每个工种没有奖金的员工的最高工资>12000的工种编号和最高工资\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>12000;\\r\\n\\r\\n# 领导编号>102的每个领导手下的最低工资大于5000的领导编号和最低工资\\r\\nSELECT MIN(salary) 最低工资,manager_id FROM employees WHERE manager_id > 102 GROUP  BY manager_id HAVING MIN(salary)>5000;\\r\\n\\r\\n# 可以实现排序\\r\\n# 查询每个工种没有奖金的员工的最高工资>6000的工种编号和最高工资，按最高工资升序\\r\\nSELECT MAX(salary),job_id FROM employees WHERE commission_pct IS NULL GROUP BY  job_id HAVING MAX(salary)>6000 ORDER BY MAX(salary) ASC;\\r\\n\\r\\n# 按多个字段分组\\r\\n# 查询每个工种每个部门的最低工资，并按先按工种升序再最低工资降序\\r\\nSELECT MIN(salary),job_id,department_id FROM employees GROUP BY job_id, department_id ORDER BY job_id ASC,MIN(salary) DESC;\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"57-连接查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.7 连接查询\\t \\t★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：当查询中涉及到了多个字段，则需要通过多表连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"笛卡尔乘积：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现原因：没有有效的连接条件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"解决办法：添加有效的连接条件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类（MySql）：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按年代分类：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92标准：仅仅支持内连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99标准【推荐】支持内连接+外连接+交叉连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92和SQL99的区别\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99使用JOIN关键字代替了之前的逗号，并且将连接条件和筛选条件进行了分离，提高阅读性！！\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按功能分类：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"等值连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非等值连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自连接\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左外连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右外连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全外连接\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"交叉连接\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表\\r\\nfrom 表1 别名,表2 别名,...\\r\\nwhere 连接条件\\r\\nand 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后筛选\\r\\norder by 排序列表;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表\\r\\nfrom 表1 别名,表2 别名,...\\r\\nwhere 连接条件\\r\\nand 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后筛选\\r\\norder by 排序列表;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL92语法内连接示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"## 7、连接查询       ★\\r\\nUSE girls;\\r\\n\\r\\n# 笛卡尔乘积（错误实例）\\r\\n# beauty 12行，boys4行，最终输出了12*4=48行。\\r\\nSELECT `name`,`boyname` FROM beauty,boys;\\r\\n\\r\\n# 正确查询\\r\\nSELECT `name`,`boyname` FROM beauty,boys WHERE beauty.boyfriend_id = boys.id;\\r\\n\\r\\n\\r\\n# 简单的两表连接\\r\\nUSE myemployees;\\r\\n# 查询员工名和部门名\\r\\nSELECT * FROM employees;\\r\\nSELECT * FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\nSELECT last_name,department_name FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\n\\r\\n# 查询部门编号>100的部门名称和所在的城市名\\r\\nSELECT department_id,department_name,city FROM departments d,locations l WHERE d.location_id = l.`location_id` AND d.`department_id`>100;\\r\\n\\r\\n# 查询有奖金的员工名、部门名\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询城市名中第二个字符为o的部门名和城市名\\r\\nSELECT `department_name`,`city`  FROM `departments` d,`locations` l WHERE d.`location_id`=l.`location_id` AND l.`city` LIKE '_o%';\\r\\n\\r\\n# 查询每个城市的部门个数\\r\\nSELECT COUNT(*),l.city FROM `departments` d,`locations` l  WHERE d.`location_id` = l.`location_id` GROUP BY l.`city`;\\r\\n\\r\\n# 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资\\r\\nSELECT d.`department_name`,d.`manager_id`,MIN(salary) FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_id`;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"## 7、连接查询       ★\\r\\nUSE girls;\\r\\n\\r\\n# 笛卡尔乘积（错误实例）\\r\\n# beauty 12行，boys4行，最终输出了12*4=48行。\\r\\nSELECT `name`,`boyname` FROM beauty,boys;\\r\\n\\r\\n# 正确查询\\r\\nSELECT `name`,`boyname` FROM beauty,boys WHERE beauty.boyfriend_id = boys.id;\\r\\n\\r\\n\\r\\n# 简单的两表连接\\r\\nUSE myemployees;\\r\\n# 查询员工名和部门名\\r\\nSELECT * FROM employees;\\r\\nSELECT * FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\nSELECT last_name,department_name FROM employees e,departments d WHERE e.department_id = d.department_id;\\r\\n\\r\\n# 查询部门编号>100的部门名称和所在的城市名\\r\\nSELECT department_id,department_name,city FROM departments d,locations l WHERE d.location_id = l.`location_id` AND d.`department_id`>100;\\r\\n\\r\\n# 查询有奖金的员工名、部门名\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询城市名中第二个字符为o的部门名和城市名\\r\\nSELECT `department_name`,`city`  FROM `departments` d,`locations` l WHERE d.`location_id`=l.`location_id` AND l.`city` LIKE '_o%';\\r\\n\\r\\n# 查询每个城市的部门个数\\r\\nSELECT COUNT(*),l.city FROM `departments` d,`locations` l  WHERE d.`location_id` = l.`location_id` GROUP BY l.`city`;\\r\\n\\r\\n# 查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资\\r\\nSELECT d.`department_name`,d.`manager_id`,MIN(salary) FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_id`;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99语法\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# [inner] 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\n[inner] join 表2 别名 on 连接条件\\r\\n[inner] join 表3 别名 on 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选\\r\\norder by 排序列表\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# [inner] 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\n[inner] join 表2 别名 on 连接条件\\r\\n[inner] join 表3 别名 on 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组列表\\r\\nhaving 分组后的筛选\\r\\norder by 排序列表\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\\r\\n① from子句\\r\\n② where子句\\r\\n③ group by子句\\r\\n④ having 子句\\r\\n⑤ select子句\\r\\n⑥ order by子句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SQL99语法示例：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 等值连接（与SQL92语法对比）\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 等值连接：SQL99 与 SQL92语法 查询对比\\r\\n# 查询有奖金的员工名、部门名（SQL92语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询有奖金的员工名、部门名（SQL99语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id` = d.`department_id` WHERE e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL92语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL99语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 等值连接：SQL99 与 SQL92语法 查询对比\\r\\n# 查询有奖金的员工名、部门名（SQL92语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e,`departments` d WHERE e.`department_id` = d.`department_id` AND e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询有奖金的员工名、部门名（SQL99语法）\\r\\nSELECT `first_name`,`last_name`,`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id` = d.`department_id` WHERE e.`commission_pct` IS NOT NULL;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL92语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e,`departments` d WHERE e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\\r\\n\\r\\n# 查询哪个部门的员工个数>5，并按员工个数进行降序（SQL99语法）\\r\\nSELECT COUNT(*),d.`department_name` FROM `employees` e JOIN `departments` d ON e.`department_id`=d.`department_id` GROUP BY d.`department_name` HAVING COUNT(*) >5 ORDER BY COUNT(*) DESC;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 非等值连接\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 非等值连接（SQL99语法）\\r\\n# 查询部门编号在10-90之间的员工的工资级别，并按级别进行分组\\r\\nSELECT COUNT(*),`grade` FROM `employees` e JOIN `sal_grade` g ON e.`salary` WHERE e.`salary` BETWEEN g.`min_salary` AND g.`max_salary` GROUP BY g.`grade`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 非等值连接（SQL99语法）\\r\\n# 查询部门编号在10-90之间的员工的工资级别，并按级别进行分组\\r\\nSELECT COUNT(*),`grade` FROM `employees` e JOIN `sal_grade` g ON e.`salary` WHERE e.`salary` BETWEEN g.`min_salary` AND g.`max_salary` GROUP BY g.`grade`;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"内连接 -> 自连接\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 内连接 -> 自连接（SQL99语法）\\r\\n# 查询员工名和对应的领导名\\r\\nSELECT e.`last_name`,m.`last_name` FROM `employees` e JOIN `employees` m ON e.`manager_id` = m.`employee_id`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 内连接 -> 自连接（SQL99语法）\\r\\n# 查询员工名和对应的领导名\\r\\nSELECT e.`last_name`,m.`last_name` FROM `employees` e JOIN `employees` m ON e.`manager_id` = m.`employee_id`;\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql仅支持左连接、右连接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询结果为主表中所有的记录，如果从表有匹配项，则显示匹配项，如果从表没有匹配项，则显示null\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"应用场景：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般用于查询主标中有但从表中没有的记录\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"外连接分主从表，两表的顺序不能任意调换。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左连接的话，左边为主表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"右连接的话，右边为主表\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# outer 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\nleft|right [outer] join 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# outer 可省略\\r\\nselect 查询列表\\r\\nfrom 表1 别名\\r\\nleft|right [outer] join 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE girls;\\r\\n# 查询所有女神的记录，以及对应的男神名，如果没有对应的男神，则显示为null\\r\\n# 左连接\\r\\nSELECT * FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询所有男神的记录，以及对应的女神名\\r\\n# 左连接\\r\\nSELECT * FROM  boys bo LEFT JOIN beauty b ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 右连接\\r\\nSELECT * FROM beauty b RIGHT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询哪个女神没有男朋友，则显示为null\\r\\n# 左连接\\r\\nSELECT b.`name` FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\r\\n\\r\\n# 右连接\\r\\nSELECT b.`name` FROM boys bo RIGHT JOIN beauty b ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"USE girls;\\r\\n# 查询所有女神的记录，以及对应的男神名，如果没有对应的男神，则显示为null\\r\\n# 左连接\\r\\nSELECT * FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询所有男神的记录，以及对应的女神名\\r\\n# 左连接\\r\\nSELECT * FROM  boys bo LEFT JOIN beauty b ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 右连接\\r\\nSELECT * FROM beauty b RIGHT JOIN boys bo ON b.`boyfriend_id` = bo.`id`;\\r\\n\\r\\n# 查询哪个女神没有男朋友，则显示为null\\r\\n# 左连接\\r\\nSELECT b.`name` FROM beauty b LEFT JOIN boys bo ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\\r\\n\\r\\n# 右连接\\r\\nSELECT b.`name` FROM boys bo RIGHT JOIN beauty b ON b.`boyfriend_id` = bo.`id` WHERE bo.`id` IS NULL;\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"总结join连接\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"join连接总结\",\"src\":\"./assets/Snipaste_2022-09-16_18-50-39.png\"},\"children\":[]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"58-子查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.8 子查询       √\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"含义：\\r\\n一条查询语句中又嵌套了另一条完整的select语句，其中被嵌套的select语句，称为子查询或内查询,\\t在外面的查询语句，称为主查询或外查询.\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分类:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select后面（标量子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结果为单行单列\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"from后面（表子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结构可以为多行多列\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"where或having后面 ☆【最常用】\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求：子查询的结构必须为单列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单行子查询\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行子查询\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"exists后面（相关子查询）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求:子查询结构必须为单列\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询都放在小括号内\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询放在条件中，要求必须放在条件的右侧\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询优先于主查询执行，主查询使用了子查询的执行结果\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"子查询根据查询结果的行数不同分为以下两类：\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"① 单行子查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果集只有一行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般搭配单行操作符使用：> < = <> >= <=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非法使用子查询的情况：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"a、子查询的结果为一组值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"b、子查询的结果为空\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"② 多行子查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果集有多行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般搭配多行操作符使用：any、all、in、not in、min、max\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"in： 属于子查询结果中的任意一个就行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"any和all往往可以用其他查询代替\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"x > any(10,30,50)\\r\\nx > min(10,30,50)\\r\\n\\r\\nx = any(10,30,50)\\r\\nx in (10,30,50)\\r\\n\\r\\nx > all(10,30,50)\\r\\nx > max(10,30,50)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"x > any(10,30,50)\\r\\nx > min(10,30,50)\\r\\n\\r\\nx = any(10,30,50)\\r\\nx in (10,30,50)\\r\\n\\r\\nx > all(10,30,50)\\r\\nx > max(10,30,50)\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到where后面）：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单行子查询\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 单行子查询\\r\\n# 查询和 Zlotkey 相同部门的员工姓名和工资\\r\\nSELECT `last_name`,`salary` FROM `employees` WHERE `department_id` = (\\r\\n SELECT `department_id` FROM `employees` WHERE `last_name` = 'Zlotkey'\\r\\n);\\r\\n\\r\\n# 查询工资比公司平均工资高的员工的员工号，姓名和工资。\\r\\nSELECT `employee_id`,`last_name`,`salary` FROM `employees` WHERE `salary`>(\\r\\n SELECT AVG(`salary`) FROM `employees`\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 单行子查询\\r\\n# 查询和 Zlotkey 相同部门的员工姓名和工资\\r\\nSELECT `last_name`,`salary` FROM `employees` WHERE `department_id` = (\\r\\n SELECT `department_id` FROM `employees` WHERE `last_name` = 'Zlotkey'\\r\\n);\\r\\n\\r\\n# 查询工资比公司平均工资高的员工的员工号，姓名和工资。\\r\\nSELECT `employee_id`,`last_name`,`salary` FROM `employees` WHERE `salary`>(\\r\\n SELECT AVG(`salary`) FROM `employees`\\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多行子查询\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 多行子查询\\r\\n# 返回location_id 是1400 或 1700 的部门中的所有员工姓名\\r\\nSELECT `last_name` FROM `employees` WHERE `department_id` IN (\\r\\n SELECT `department_id` FROM `departments` WHERE `location_id` IN (1400,1700)\\r\\n);\\r\\n\\r\\n# 返回其他部门中比job_id为'IT_PROG'部门所有工资都低的员工的员工号、姓名、job_id 以及 salary\\r\\nSELECT `employee_id`,`job_id`,`salary` FROM `employees` WHERE `salary` < ANY(\\r\\n SELECT DISTINCT `salary` FROM `employees` WHERE `job_id` = 'IT_PROG'\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 多行子查询\\r\\n# 返回location_id 是1400 或 1700 的部门中的所有员工姓名\\r\\nSELECT `last_name` FROM `employees` WHERE `department_id` IN (\\r\\n SELECT `department_id` FROM `departments` WHERE `location_id` IN (1400,1700)\\r\\n);\\r\\n\\r\\n# 返回其他部门中比job_id为'IT_PROG'部门所有工资都低的员工的员工号、姓名、job_id 以及 salary\\r\\nSELECT `employee_id`,`job_id`,`salary` FROM `employees` WHERE `salary` < ANY(\\r\\n SELECT DISTINCT `salary` FROM `employees` WHERE `job_id` = 'IT_PROG'\\r\\n);\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到select后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 放在select后面\\r\\nSELECT (\\r\\n SELECT COUNT(*) FROM `employees` WHERE `department_id` = 50\\r\\n) 个数;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 放在select后面\\r\\nSELECT (\\r\\n SELECT COUNT(*) FROM `employees` WHERE `department_id` = 50\\r\\n) 个数;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放到from后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 放在from后面\\r\\n# 查询每个部门的平均工资的工资级别\\r\\nSELECT dep_ag.`department_id`,dep_ag.ag,`grade` FROM `sal_grade` g JOIN(\\r\\n SELECT AVG(`salary`) ag,`department_id` FROM `employees` GROUP BY `department_id`\\r\\n) dep_ag ON dep_ag.ag BETWEEN g.`min_salary` AND g.`max_salary`;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 放在from后面\\r\\n# 查询每个部门的平均工资的工资级别\\r\\nSELECT dep_ag.`department_id`,dep_ag.ag,`grade` FROM `sal_grade` g JOIN(\\r\\n SELECT AVG(`salary`) ag,`department_id` FROM `employees` GROUP BY `department_id`\\r\\n) dep_ag ON dep_ag.ag BETWEEN g.`min_salary` AND g.`max_salary`;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例（放在exists后面）：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 查询有无名字叫\\\"张三丰\\\"的员工信息\\r\\nSELECT EXISTS(\\r\\n SELECT * FROM `employees` WHERE `last_name` = 'Abel'\\r\\n) 有无Abel;\\r\\n\\r\\n# 查询没有女朋友的男神信息\\r\\nUSE girls;\\r\\nSELECT bo.* FROM boys bo WHERE bo.id NOT IN(\\r\\n SELECT `boyfriend_id` FROM `beauty` b\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"# 查询有无名字叫\\\"张三丰\\\"的员工信息\\r\\nSELECT EXISTS(\\r\\n SELECT * FROM `employees` WHERE `last_name` = 'Abel'\\r\\n) 有无Abel;\\r\\n\\r\\n# 查询没有女朋友的男神信息\\r\\nUSE girls;\\r\\nSELECT bo.* FROM boys bo WHERE bo.id NOT IN(\\r\\n SELECT `boyfriend_id` FROM `beauty` b\\r\\n);\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"59-分页查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.9 分页查询       ★\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"应用场景：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际的web项目中需要根据用户的需求提交对应的分页查询的sql语句\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表\\r\\nfrom 表1 别名\\r\\njoin 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组字段\\r\\nhaving 分组后筛选\\r\\norder by 排序的字段\\r\\nlimit 起始的条目索引，显示的条目数;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表\\r\\nfrom 表1 别名\\r\\njoin 表2 别名\\r\\non 连接条件\\r\\nwhere 筛选条件\\r\\ngroup by 分组字段\\r\\nhaving 分组后筛选\\r\\norder by 排序的字段\\r\\nlimit 起始的条目索引，显示的条目数;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. from 子句\\r\\n2. join 子句\\r\\n3. on 子句\\r\\n4. where 子句\\r\\n5. group by 子句\\r\\n6. having 子句\\r\\n7. select 子句\\r\\n8. order by 子句\\r\\n9. limit 子句\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1. from 子句\\r\\n2. join 子句\\r\\n3. on 子句\\r\\n4. where 子句\\r\\n5. group by 子句\\r\\n6. having 子句\\r\\n7. select 子句\\r\\n8. order by 子句\\r\\n9. limit 子句\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"起始条目索引从0开始，如果不写，则就是从0开始显示\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"limit子句放在查询语句的最后\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"公式：select * from  表 limit （page-1）*sizePerPage,sizePerPage\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每页显示条目数sizePerPage\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要显示的页数 page\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE myemployees; \\r\\n# 查询员工信息表的前5条\\r\\nSELECT  * FROM employees LIMIT 5;\\r\\nSELECT  * FROM employees LIMIT 0,5;\\r\\nSELECT  * FROM employees LIMIT 5,5;\\r\\n\\r\\n# 查询有奖金的，且工资较高的第11名到第20名\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC;\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC LIMIT 10,20;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"USE myemployees; \\r\\n# 查询员工信息表的前5条\\r\\nSELECT  * FROM employees LIMIT 5;\\r\\nSELECT  * FROM employees LIMIT 0,5;\\r\\nSELECT  * FROM employees LIMIT 5,5;\\r\\n\\r\\n# 查询有奖金的，且工资较高的第11名到第20名\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC;\\r\\nSELECT * FROM `employees` WHERE  `commission_pct` IS NOT NULL ORDER BY `salary` DESC LIMIT 10,20;\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"510-union联合查询\"},\"children\":[{\"type\":\"text\",\"value\":\"5.10 union联合查询\\t√\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明\\r\\n当查询结果来自多张表，但多张表之间没有关联，这个时候往往使用联查查询，也称为union查询\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"引入：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"union 联合、合并\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select 查询列表 from 表1 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表2 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表3 where 筛选条件 union [all]\\r\\n  ...\\r\\nselect 查询列表 from 表n where 筛选条件;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select 查询列表 from 表1 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表2 where 筛选条件 union [all]\\r\\nselect 查询列表 from 表3 where 筛选条件 union [all]\\r\\n  ...\\r\\nselect 查询列表 from 表n where 筛选条件;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多条查询语句的查询的列数必须是一致的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多条查询语句的查询类型、字段意义最好一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"union代表去重，union all代表不去重\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"示例：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SELECT * FROM `jobs` UNION\\r\\nSELECT * FROM `china` UNION\\r\\nSELECT * FROM `departments`;\\r\\n\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 2,'test' UNION\\r\\nSELECT 2,'test';\\r\\n\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 2,'test' UNION ALL\\r\\nSELECT 2,'test';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SELECT * FROM `jobs` UNION\\r\\nSELECT * FROM `china` UNION\\r\\nSELECT * FROM `departments`;\\r\\n\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 1,'test' UNION\\r\\nSELECT 2,'test' UNION\\r\\nSELECT 2,'test';\\r\\n\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 1,'test' UNION ALL\\r\\nSELECT 2,'test' UNION ALL\\r\\nSELECT 2,'test';\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"六ddl语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"六、DDL语言的学习```````````★````````````\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Data Define Language\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"61-创建数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.1 创建数据库\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE DATABASE stuDB2;\\r\\nCREATE DATABASE IF NOT EXISTS stuDB2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE DATABASE stuDB2;\\r\\nCREATE DATABASE IF NOT EXISTS stuDB2;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"62-删除数据库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.2 删除数据库\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP DATABASE stuDB2;\\r\\nDROP DATABASE IF EXISTS stuDB2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP DATABASE stuDB2;\\r\\nDROP DATABASE IF EXISTS stuDB2;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"63-创建表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.3 创建表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"列类型：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、整型：tinyint/smallint/int/bigint\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、浮点型：float(m，n)/double(m，n)/decimal(m，n);m,n可选\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、字符型：char(n)/varchar(n)/text   n表示最多字符数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4、日期型：datet/time/datetime/timestamp\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5、二进制型\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"blob存储图片数据\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"USE studb;\\r\\nCREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT ,\\r\\n    stuname VARCHAR(20),\\r\\n    stugender CHAR,\\r\\n    email VARCHAR(20),\\r\\n    borndate DATETIME\\r\\n);\\r\\nDESC stuinfo;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"USE studb;\\r\\nCREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT ,\\r\\n    stuname VARCHAR(20),\\r\\n    stugender CHAR,\\r\\n    email VARCHAR(20),\\r\\n    borndate DATETIME\\r\\n);\\r\\nDESC stuinfo;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"六大约束：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"NOT NULL    非空：用于限制该字段为必填项\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DEFAULT     默认：用于限制该字段没有显式插入值，直接显示默认值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"PRIMARY KEY 主键：用于限制该字段的值不能重复，设置我诶主键列的字段默认不能为空，一个表只能有一个主键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNIQUE      唯一：用于限制该字段值不能重复，可为空，一个表可以有n个唯一\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CHECK       检查：用于限制该字段值必须满足指定条件。CHECK(age BETWEEN 1 AND 100)（mysql不支持）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"FOREIGN KEY 外键：用于限制两个表的关系，要求外键列的值必须来自于主表的关联列。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"①主表的关联列和从表的关联列的类型必须一致，意思一样，名称无要求\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"②主表的关联列要求必须是主键（mysql中也可以是唯一）。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT PRIMARY KEY,  #添加了主键\\r\\n    stuname VARCHAR(20) UNIQUE NOT NULL,#添加了唯一约束+非空 #\\r\\n    stugender CHAR DEFAULT '男',#添加了默认约束\\r\\n    email VARCHAR(20) NOT NULL,\\r\\n    age INT CHECK (age BETWEEN 0 AND 100),  #添加了检查越是，mysql不支持，但不报错\\r\\n    majorid INT,\\r\\n    borndate DATETIME,\\r\\n    CONSTRAINT fk_stuinfo_major FOREIGN KEY (major_id) REFERENCES major(major_id)#外键要放到最后   \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE IF NOT EXISTS stuinfo(\\r\\n    stuid INT PRIMARY KEY,  #添加了主键\\r\\n    stuname VARCHAR(20) UNIQUE NOT NULL,#添加了唯一约束+非空 #\\r\\n    stugender CHAR DEFAULT '男',#添加了默认约束\\r\\n    email VARCHAR(20) NOT NULL,\\r\\n    age INT CHECK (age BETWEEN 0 AND 100),  #添加了检查越是，mysql不支持，但不报错\\r\\n    majorid INT,\\r\\n    borndate DATETIME,\\r\\n    CONSTRAINT fk_stuinfo_major FOREIGN KEY (major_id) REFERENCES major(major_id)#外键要放到最后   \\r\\n);\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"64-修改表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.4 修改表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改表名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE stuinfo RENAME TO students;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE stuinfo RENAME TO students;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"添加字段\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students ADD COLUMN borndate2 TIMESTAMP NOT NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students ADD COLUMN borndate2 TIMESTAMP NOT NULL;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改字段名\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students CHANGE COLUMN borndate birthday TIMESTAMP;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students CHANGE COLUMN borndate birthday TIMESTAMP;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改字段类型\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students MODIFY COLUMN birthday TIMESTAMP;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students MODIFY COLUMN birthday TIMESTAMP;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除字段\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE students DROP COLUMN borndate2;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE students DROP COLUMN borndate2;\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"65-删除表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.5 删除表\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP TABLE IF EXISTS students;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP TABLE IF EXISTS students;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"66-复制表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.6 复制表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"仅复制表的结构：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE newtable LIKE stuinfo;\\r\\nCREATE TABLE newtable2 LIKE major;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE newtable LIKE stuinfo;\\r\\nCREATE TABLE newtable2 LIKE major;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"复制表的结构+数据：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE newtable3 SELECT * FROM girls.beauty;\\r\\nCREATE TABLE studb.newtable3 SELECT * FROM girls.beauty; \\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees; #复制指定列+数据\\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees WHERE 1 = 2; #复制指定列（无数据）          \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE newtable3 SELECT * FROM girls.beauty;\\r\\nCREATE TABLE studb.newtable3 SELECT * FROM girls.beauty; \\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees; #复制指定列+数据\\r\\nCREATE TABLE emp SELECT last_name,department_id,salary FROM myemployees.employees WHERE 1 = 2; #复制指定列（无数据）          \"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"七dml语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"七、DML语言的学习\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Data Manipulation Language:insert update delete\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"71-数据的插入\"},\"children\":[{\"type\":\"text\",\"value\":\"7.1 数据的插入：\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特点：\\r\\n①字段和值列表一一对应，包含类型、约束等必须匹配\\r\\n②数值型的值，不用单引号号；非数值型的值，必须是用单引号。\\r\\n③字段顺序无要求\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入单行：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)    \\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(1,'huangweijie','男','1091088708@qq.com',30,1);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(2,'zhangwenli','女','1091088708@qq.com',30,2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(3,'choudan','599499789@qq.com',2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(4,'dandan','599499789@qq.com',100);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...)    \\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(1,'huangweijie','男','1091088708@qq.com',30,1);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,stugender,email,age,major_id)\\r\\nVALUES(2,'zhangwenli','女','1091088708@qq.com',30,2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(3,'choudan','599499789@qq.com',2);\\r\\n\\r\\nINSERT INTO stuinfo(stuid,stuname,email,age)\\r\\nVALUES(4,'dandan','599499789@qq.com',100);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入多行：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...),(值1，值 2，...) ,(值1，值 2，...);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"insert into 表名（字段名1，字段名2，...）values (值1，值 2，...),(值1，值 2，...) ,(值1，值 2，...);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自增长列特点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、自增长列要求必须设置在一个键上，比如主键或者唯一键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、自增长列要求数据类型为数值型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、一个表至多有一个\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"72-数据的删除\"},\"children\":[{\"type\":\"text\",\"value\":\"7.2 数据的删除\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"delete语句：删除指定数据。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DELETE FROM stuinfo WHERE stuname LIKE 'xiao%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DELETE FROM stuinfo WHERE stuname LIKE 'xiao%';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"truncate语句：删除所有数据，但不影响表的结构\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"TRUNCATE TABLE stuinfo;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"TRUNCATE TABLE stuinfo;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"delete和truncate区别：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1）delete可以添加where条件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2）truncate不能添加where条件，一次性清除所有数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3）如果删除带自增长列的表，\\r\\n使用delete删除后，重新插入数据，记录从断点处开始\\r\\n使用truncate删除后，重新插入数据，记录从1开始。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4）delete删除数据，可以支持事务回滚\\r\\ntruncate删除数据，不支持事务回滚。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"八tcl语言的学习\"},\"children\":[{\"type\":\"text\",\"value\":\"八、TCL语言的学习\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"81-什么事事务为什么要用事务\"},\"children\":[{\"type\":\"text\",\"value\":\"8.1 什么事事务？为什么要用事务？\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一个事务是由一条或者多条sql语句构成，这一条或者多条sql语句要么全部执行成功，要么全部执行失败！\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下，每条单独的sql语句就是一个单独的事务。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"82-事务的四大特性acid\"},\"children\":[{\"type\":\"text\",\"value\":\"8.2 事务的四大特性（ACID）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原子性：要么都执行，要么都回滚\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一致性：保证数据的状态操作前和操作后保持一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"隔离性：多个事务同时操作相同数据库的同一个数据时，一个事务的执行不受另外一个事务的干扰\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"持久性：一个事务一旦提交，则数据将持久化到本地，除非其他事务对其进行修改\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"83-分类\"},\"children\":[{\"type\":\"text\",\"value\":\"8.3 分类：\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"隐式事务：没有明细的开启和结束标记\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比如dml语句的insert、update、delete语句本身就是一条事务\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"INSERT INTO gradeinfo VALUES(NULL,'一年级'),(NULL,'二年级'),(NULL,'三年级')\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"INSERT INTO gradeinfo VALUES(NULL,'一年级'),(NULL,'二年级'),(NULL,'三年级')\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示事务：具有明显的开启和结束标记\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般由多条sql语句组成，必须具有明显的开启和结束标记\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"步骤：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"0、取消隐式事务自动开启的功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、开启事务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、编写事务需要的sql语句（1条或多条）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、结束事务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"演示：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SET autocommit = 0;\\r\\nSTART TRANSACTION;\\r\\nUPDATE stuinfo SET age = age + 5 WHERE stuname = 'huangweijie';\\r\\nUPDATE stuinfo SET age = age - 5 WHERE stuname = 'zhangwenli';\\r\\nCOMMIT;     # 提交\\r\\nROLLBACK;   # 回滚\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SET autocommit = 0;\\r\\nSTART TRANSACTION;\\r\\nUPDATE stuinfo SET age = age + 5 WHERE stuname = 'huangweijie';\\r\\nUPDATE stuinfo SET age = age - 5 WHERE stuname = 'zhangwenli';\\r\\nCOMMIT;     # 提交\\r\\nROLLBACK;   # 回滚\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"84-事务和事务处理\"},\"children\":[{\"type\":\"text\",\"value\":\"8.4 事务和事务处理\"}]},{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"mysql-高级\"},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 高级\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"二索引优化分析\"},\"children\":[{\"type\":\"text\",\"value\":\"二、索引优化分析\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"23-索引简介\"},\"children\":[{\"type\":\"text\",\"value\":\"2.3 索引简介\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.1 索引是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL官方对索引的定义为：索引（Index）是帮助MySQL高效获取数据的数据结构。 可以得到索引的本质：索引是数据结构。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引的目的在于提高查询效率，可以类比字典，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要查“mysql”这个单词，我们肯定需要定位到m字母，然后从下往下找到y字母，再找到剩下的sql。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果没有索引，那么你可能需要a----z，如果我想找到Java开头的单词呢？或者Oracle开头的单词呢？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是不是觉得如果没有索引，这个事情根本无法完成？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"你可以简单理解为“排好序的快速查找数据结构”。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"详解(重要)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。下图就是一种可能的索引方式示例：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-01-08.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了加快Col2的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找在一定的复杂度内获取到相应数据，从而快速的检索出符合条件的记录。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据本身之外，数据库还维护着一个满足特定查找算法的数据结构，这些数据结构以某种方式指向数据，这样就可以在这些数据结构的基础上实现高级查找算法，这种数据结构就是索引。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般来说索引本身也很大，不可能全部存储在内存中，因此索引往往以索引文件的形式存储的磁盘上。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.2 优势\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"类似大学图书馆建书目索引，提高数据检索的效率，降低数据库的IO成本\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.3 劣势\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。 因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件每次更新添加了索引列的字段， 都会调整因为更新所带来的键值变化后的索引信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际上索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录，所以索引列也是要占用空间的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.4 mysql索引结构\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BTree索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-03-20.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"指针（黄色所示），\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如磁盘块1包含数据项17和35，包含指针P1、P2、P3，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"P1表示小于17的磁盘块，P2表示在17和35之间的磁盘块，P3表示大于35的磁盘块。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"真实的数据存在于叶子节点即3、5、9、10、13、15、28、29、36、60、75、79、90、99。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非叶子节点只不存储真实的数据，只存储指引搜索方向的数据项，如17、35并不真实存在于数据表中。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"【查找过程】\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要查找数据项29，那么首先会把磁盘块1由磁盘加载到内存，此时发生一次IO，在内存中用二分查找确定29在17和35之间，锁定磁盘块1的P2指针，内存时间因为非常短（相比磁盘的IO）可以忽略不计，通过磁盘块1的P2指针的磁盘地址把磁盘块3由磁盘加载到内存，发生第二次IO，29在26和30之间，锁定磁盘块3的P2指针，通过指针加载磁盘块8到内存，发生第三次IO，同时内存中做二分查找找到29，结束查询，总计三次IO。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"真实的情况是，3层的b+树可以表示上百万的数据，如果上百万的数据查找只需要三次IO，性能提高将是巨大的，如果没有索引，每个数据项都要发生一次IO，那么总共需要百万次的IO，显然成本非常非常高。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关于时间复杂度\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同一问题可用不同算法解决，而一个算法的质量优劣将影响到算法乃至程序的效率。算法分析的目的在于选择合适算法和改进算法。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-05-03.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-05-11.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+Tree索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-06-06.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B树和B+树的区别（B+Tree与B-Tree 的区别）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1）B-树的关键字和记录是放在一起的，叶子节点可以看作外部节点，不包含任何信息；B+树的非叶子节点中只有关键字和指向下一个节点的索引，记录只放在叶子节点中。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2）在B-树中，越靠近根节点的记录查找时间越快，只要找到关键字即可确定记录的存在；而B+树中每个记录的查找时间基本是一样的，都需要从根节点走到叶子节点，而且在叶子节点中还要再比较关键字。从这个角度看B-树的性能好像要比B+树好，而在实际应用中却是B+树的性能要好些。因为B+树的非叶子节点不存放实际的数据，这样每个节点可容纳的元素个数比B-树多，树高比B-树小，这样带来的好处是减少磁盘访问次数。尽管B+树找到一个记录所需的比较次数要比B-树多，但是一次磁盘访问的时间相当于成百上千次内存比较的时间，因此实际中B+树的性能可能还会好些，而且B+树的叶子节点使用指针连接在一起，方便顺序遍历（例如查看一个目录下的所有文件，一个表中的所有记录等），这也是很多数据库和文件系统使用B+树的缘故。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"思考：为什么说B+树比B-树更适合实际应用中操作系统的文件索引和数据库索引？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的磁盘读写代价更低\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的内部结点并没有指向关键字具体信息的指针。因此其内部结点相对B 树更小。如果把所有同一内部结点的关键字存放在同一盘块中，那么盘块所能容纳的关键字数量也越多。一次性读入内存中的需要查找的关键字也就越多。相对来说IO读写次数也就降低了。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"B+树的查询效率更加稳定\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于非终结点并不是最终指向文件内容的结点，而只是叶子结点中关键字的索引。所以任何关键字的查找必须走一条从根结点到叶子结点的路。所有关键字查询的路径长度相同，导致每一个数据的查询效率相当。\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引与非聚簇索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引并不是一种单独的索引类型，而是一种数据存储方式。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"术语‘聚簇’表示数据行和相邻的键值聚簇的存储在一起。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如下图，左侧的索引就是聚簇索引，因为数据行在磁盘的排列和索引排序保持一致。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-08-20.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引的好处：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按照聚簇索引排列顺序，查询显示一定范围数据的时候，由于数据都是紧密相连，数据库不不用从多个数据块中提取数据，所以节省了大量的io操作。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"聚簇索引的限制：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于mysql数据库目前只有innodb数据引擎支持聚簇索引，而Myisam并不支持聚簇索引。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于数据物理存储排序方式只能有一种，所以每个Mysql的表只能有一个聚簇索引。一般情况下就是该表的主键。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了充分利用聚簇索引的聚簇的特性，所以innodb表的主键列尽量选用有序的顺序id，而不建议用无序的id，比如uuid这种。\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.5 mysql索引分类\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单值索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"即一个索引只包含单个列，一个表可以有多个单列索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name)\\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建单值索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  INDEX idx_customer_name ON customer(customer_name); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  INDEX idx_customer_name ON customer(customer_name); \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_customer_name  on customer;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_customer_name  on customer;\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"唯一索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引列的值必须唯一，但允许有空值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_no)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_no)\\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建唯一索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE UNIQUE INDEX idx_customer_no ON customer(customer_no); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE UNIQUE INDEX idx_customer_no ON customer(customer_no); \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_customer_no on customer;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_customer_no on customer;\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"主键索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设定为主键后数据库会自动建立索引，innodb为聚簇索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\r\\n  \\r\\nCREATE TABLE customer2 (id INT(10) UNSIGNED   ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\\r\\n  \\r\\nCREATE TABLE customer2 (id INT(10) UNSIGNED   ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id) \\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建主键索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE customer \\r\\nadd PRIMARY KEY customer(customer_no);  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE customer \\r\\nadd PRIMARY KEY customer(customer_no);  \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除建主键索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE customer \\r\\ndrop PRIMARY KEY;  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE customer \\r\\ndrop PRIMARY KEY;  \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改建主键索引：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"必须先删除掉(drop)原索引，再新建(add)索引\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"复合索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"即一个索引包含多个列\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随表一起建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_name),\\r\\n  KEY (customer_no,customer_name)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE customer (id INT(10) UNSIGNED  AUTO_INCREMENT ,customer_no VARCHAR(200),customer_name VARCHAR(200),\\r\\n  PRIMARY KEY(id),\\r\\n  KEY (customer_name),\\r\\n  UNIQUE (customer_name),\\r\\n  KEY (customer_no,customer_name)\\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独建索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  INDEX idx_no_name ON customer(customer_no,customer_name); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  INDEX idx_no_name ON customer(customer_no,customer_name); \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除索引：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_no_name  on customer ;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_no_name  on customer ;\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基本语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE  [UNIQUE ]  INDEX [indexName] ON table_name(column)) \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE  [UNIQUE ]  INDEX [indexName] ON table_name(column)) \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"删除\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX [indexName] ON mytable; \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX [indexName] ON mytable; \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW INDEX FROM table_name\\\\G\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SHOW INDEX FROM table_name\\\\G\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用ALTER命令\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有四种方式来添加数据表的索引：\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。\\r\\n\\r\\nALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。\\r\\n\\r\\nALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。\\r\\n\\r\\nALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。\\r\\n\\r\\nALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。\\r\\n\\r\\nALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。\\r\\n\\r\\nALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.6 哪些情况需要创建索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"主键自动建立唯一索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"频繁作为查询条件的字段应该创建索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中与其它表关联的字段，外键关系建立索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单键/组合索引的选择问题， 组合索引性价比更高\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中统计或者分组字段\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.3.7 哪些情况不要创建索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表记录太少\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"经常增删改的表或者字段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Why:提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。 因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Where条件里用不到的字段不创建索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"过滤性不好的不适合建索引\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"24-性能分析\"},\"children\":[{\"type\":\"text\",\"value\":\"2.4 性能分析\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.4.1 Explain\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是什么(查看执行计划)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用EXPLAIN关键字可以模拟优化器执行SQL查询语句，从而知道MySQL是 如何处理你的SQL语句的。分析你的查询语句或是表结构的性能瓶颈\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"官网介绍\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://dev.mysql.com/doc/refman/5.5/en/explain-output.html\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://dev.mysql.com/doc/refman/5.5/en/explain-output.html\"}]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-21-52.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"能干嘛\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表的读取顺序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"哪些索引可以使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据读取操作的操作类型\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"哪些索引被实际使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表之间的引用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"每张表有多少行被物理查询\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"怎么玩\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Explain + SQL语句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行计划包含的信息\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-23-00.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建表脚本\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE t1(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t2(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t3(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t4(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\n\\r\\nINSERT INTO t1(content) VALUES(CONCAT('t1_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t2(content) VALUES(CONCAT('t2_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t3(content) VALUES(CONCAT('t3_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t4(content) VALUES(CONCAT('t4_',FLOOR(1+RAND()*1000)));\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE t1(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t2(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t3(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\nCREATE TABLE t4(id INT(10) AUTO_INCREMENT,content  VARCHAR(100) NULL ,  PRIMARY KEY (id));\\r\\n\\r\\nINSERT INTO t1(content) VALUES(CONCAT('t1_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t2(content) VALUES(CONCAT('t2_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t3(content) VALUES(CONCAT('t3_',FLOOR(1+RAND()*1000)));\\r\\nINSERT INTO t4(content) VALUES(CONCAT('t4_',FLOOR(1+RAND()*1000)));\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"各字段解释\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select查询的序列号,包含一组数字，表示查询中执行select子句或操作表的顺序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三种情况\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id相同，执行顺序由上至下\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-26.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id不同，如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-38.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id相同和不同，同时存在\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-29-46.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行顺序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id如果相同，可以认为是一组，从上往下顺序执行；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在所有组中，id值越大，优先级越高，越先执行\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"衍生 = DERIVED\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关注点\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id号每个号码，表示一趟独立的查询。一个sql 的查询趟数越少越好。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select_type\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有哪些\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-31-05.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询的类型，主要是用于区别 普通查询、联合查询、子查询等的复杂查询\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SIMPLE\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"简单的 select 查询,查询中不包含子查询或者UNION\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-34-48.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"PRIMARY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中若包含任何复杂的子部分，最外层查询则被标记为Primary\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-34-58.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DERIVED\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在FROM列表中包含的子查询被标记为DERIVED(衍生) MySQL会递归执行这些子查询, 把结果放在临时表里。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-06.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SUBQUERY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在SELECT或WHERE列表中包含了子查询\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-13.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DEPENDENT SUBQUERY\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在SELECT或WHERE列表中包含了子查询,子查询基于外层\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-22.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNCACHEABLE SUBQUREY\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-35.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE '%lower_case_table_names%';\\r\\nSELECT @@lower_case_table_names FROM DUAL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE '%lower_case_table_names%';\\r\\nSELECT @@lower_case_table_names FROM DUAL;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-35-46.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNION\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"若第二个SELECT出现在UNION之后，则被标记为UNION； 若UNION包含在FROM子句的子查询中,外层SELECT将被标记为：DERIVED\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-38-00.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UNION RESULT\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从UNION表获取结果的SELECT\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-38-18.png\"},\"children\":[]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"table\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示这一行的数据是关于哪张表的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"partitions\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"代表分区表中的命中情况，非分区表，该项为null\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"type\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-39-58.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"访问类型排列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"type显示的是访问类型，是较为重要的一个指标，结果值从最好到最坏依次是：\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system > const > eq_ref > ref > fulltext > ref_or_null > index_merge > unique_subquery > index_subquery > range > index > ALL\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示查询使用了何种类型， 从最好到最差依次是：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system > const > eq_ref > ref > range > index > ALL\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"system\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表只有一行记录（等于系统表），这是const类型的特列，平时不会出现，这个也可以忽略不计\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示通过索引一次就找到了,const用于比较primary key或者unique索引。因为只匹配一行数据，所以很快 如将主键置于where列表中，MySQL就能将该查询转换为一个常量\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-45-26.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"eq_ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-45-56.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非唯一性索引扫描，返回匹配某个单独值的所有行. 本质上也是一种索引访问，它返回所有匹配某个单独值的行，然而， 它可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-04.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-20.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"range\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只检索给定范围的行,使用一个索引来选择行。key 列显示使用了哪个索引 一般就是在你的where语句中出现了between、<、>、in等的查询 这种范围扫描索引扫描比全表扫描要好，因为它只需要开始于索引的某一点，而结束语另一点，不用扫描全部索引。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-42.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-49.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现index是sql使用了索引但是没用通过索引进行过滤，一般是使用了覆盖索引或者是利用索引进行了排序分组\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"all\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Full Table Scan，将遍历全表以找到匹配的行\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-46-58.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index_merge\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在查询过程中需要多个索引组合使用，通常出现在有 or 的关键字的sql中\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-15.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref_or_null\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于某个字段既需要关联条件，也需要null值得情况下。查询优化器会选择用ref_or_null连接查询。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-22.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index_subquery\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用索引来关联子查询，不再全表扫描。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-29.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-36.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-42.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"unique_subquery\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"该联接类型类似于index_subquery。 子查询中的唯一索引\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-47-49.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"备注：一般来说，得保证查询至少达到range级别，最好能达到ref。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"possible_keys\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示可能应用在这张表中的索引，一个或多个。 查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实际使用的索引。如果为NULL，则没有使用索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中若使用了覆盖索引，则该索引和查询的select字段重叠\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-53-08.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name LIKE 'ab%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name LIKE 'ab%';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len字段能够帮你检查是否充分的利用上了索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如何计算\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、先看索引上字段的类型+长度比如 int=4 ;  varchar(20) =20 ; char(20) =20\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、如果是varchar或者char这种字符串字段，视字符集要乘不同的值，比如utf-8  要乘 3,GBK要乘2，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、varchar这种动态字符串要加2个字节\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4、允许为空的字段要加1个字节\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-54-48.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一组\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len=age的字节长度+name的字节长度=4+1  + ( 20*3+2)=5+62=67\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二组\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"key_len=age的字节长度=4+1=5\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-55-41.png\"},\"children\":[]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ref\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"显示索引的哪一列被使用了，如果可能的话，是一个常数。哪些列或常量被用于查找索引列上的值\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-57-05.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rows\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rows列显示MySQL认为它执行查询时必须检查的行数。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"越少越好\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_00-57-55.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"filtered\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个字段表示存储引擎返回的数据在server层过滤后，剩下多少满足查询的记录数量的比例，注意是百分比，不是具体记录数\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Extra\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"包含不适合在其他列中显示但十分重要的额外信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using filesort\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"出现filesort的情况：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-00-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化后，不再出现filesort的情况：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-00-25.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明mysql会对数据使用一个外部的索引排序，而不是按照表内的索引顺序进行读取。 MySQL中无法利用索引完成的排序操作称为“文件排序”\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using temporary\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化前存在 using  temporary 和 using  filesort\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-02-18.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化前存在 using  temporary 和 using  filesort 不在，性能发生明显变化：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-02-29.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使了用临时表保存中间结果,MySQL在对查询结果排序时使用临时表。常见于排序 order by 和分组查询 group by。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"USING index\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表示相应的select操作中使用了覆盖索引(Covering Index)，避免访问了表的数据行，效率不错！ 如果同时出现using where，表明索引被用来执行索引键值的查找; 如果没有同时出现using where，表明索引只是用来读取数据而非利用索引执行查找。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用索引进行了排序或分组\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Using where\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表明使用了where过滤\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"using join buffer\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用了连接缓存：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-03-56.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"impossible where\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"where子句的值总是false，不能用来获取任何元组（说明语句可能存在语法错误，这是一个错误的语句）\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-04-19.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select tables optimized away\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在没有GROUPBY子句的情况下，基于索引优化MIN/MAX操作或者 对于MyISAM存储引擎优化COUNT(*)操作，不必等到执行阶段再进行计算， 查询执行计划生成的阶段即完成优化。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在innodb中：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-05-56.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在Myisam中：\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_01-06-06.png\"},\"children\":[]}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"25-查询优化\"},\"children\":[{\"type\":\"text\",\"value\":\"2.5 查询优化\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.2 单表使用索引及常见索引失效\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全值匹配我最爱\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"系统中经常出现的sql语句如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30  \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4 AND emp.name = 'abcd'  \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30  \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 and deptid=4 AND emp.name = 'abcd'  \"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引应该如何建立 ？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立索引\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_deptid_name ON emp(age,deptid,NAME)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_deptid_name ON emp(age,deptid,NAME)\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立索引前\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-11-24.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引后\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-11-44.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"最佳左前缀法则\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果系统经常出现的sql如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\r\\n# 或者\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.deptid=1 AND emp.name = 'abcd';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\r\\n# 或者\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.deptid=1 AND emp.name = 'abcd';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那原来的idx_age_deptid_name 还能否正常使用？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果索引了多列，要遵守最左前缀法则。指的是查询从索引的最左前列开始并且不跳过索引中的列。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.name = 'abcd';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"虽然可以正常使用，但是只有部分被使用到了。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-18-31.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"完全没有使用上索引。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-18-46.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论：过滤条件要使用索引必须按照索引建立时的顺序，依次满足，一旦跳过某个字段，索引后面的字段都无法被使用。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不在索引列上做任何操作（计算、函数、(自动or手动)类型转换），会导致索引失效而转向全表扫描\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这两条sql哪种写法更好\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name LIKE 'abc%' \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE LEFT(emp.name,3) = 'abc'\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name LIKE 'abc%' \\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE LEFT(emp.name,3) = 'abc'\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第一种\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-21-33.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"第二种\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-21-43.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存储引擎不能使用索引中范围条件右边的列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果系统经常出现的sql如下：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.deptId>20 AND emp.name = 'abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.age=30 AND emp.deptId>20 AND emp.name = 'abc';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那么索引 idx_age_deptid_name这个索引还能正常使用么？\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-24-08.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果这种 sql 出现较多应该建立：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create index idx_age_name_deptid on emp(age,name,deptid)\\r\\n# drop index idx_age_name_deptid on emp\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"create index idx_age_name_deptid on emp(age,name,deptid)\\r\\n# drop index idx_age_name_deptid on emp\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"效果\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-24-18.png\"},\"children\":[]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql 在使用不等于(!= 或者<>)的时候无法使用索引会导致全表扫描\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_name ON emp(NAME)\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name <> 'abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_name ON emp(NAME)\\r\\nEXPLAIN SELECT SQL_NO_CACHE * FROM emp WHERE emp.name <> 'abc';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-26-50.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"is not null 也无法使用索引,但是is null是可以使用索引的\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"UPDATE emp SET age =NULL WHERE id=123456;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"UPDATE emp SET age =NULL WHERE id=123456;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下列哪个sql语句可以用到索引\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"EXPLAIN SELECT * FROM emp WHERE age IS NULL;\\r\\nEXPLAIN SELECT * FROM emp WHERE age IS NOT NULL;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"EXPLAIN SELECT * FROM emp WHERE age IS NULL;\\r\\nEXPLAIN SELECT * FROM emp WHERE age IS NOT NULL;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-04.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"like以通配符开头('%abc...')mysql索引失效会变成全表扫描的操作\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串不加单引号索引失效\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_14-28-24.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小结：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"假设index(a,b,c)\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"table\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"thead\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Where语句\"}]},{\"type\":\"element\",\"tag\":\"th\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"索引是否被使用\"}]}]}]},{\"type\":\"element\",\"tag\":\"tbody\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a，b\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b = 5 and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where b = 3 或者 where b = 3 and c = 4  或者 where c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"N\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and c = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用到a， 但是c不可以，b中间断了\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b > 4 and c = 5\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"使用到a和b，c不能用在范围之后，b断了\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a is null and b is not null\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"is null 支持索引 但是is not null 不支持,所以 a 可以使用索引,但是  b不可以使用\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a <> 3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"不能使用索引\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where abs(a) =3\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"不能使用 索引\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like 'kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like '%kk' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,只用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like '%kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,只用到a\"}]}]},{\"type\":\"element\",\"tag\":\"tr\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"where a = 3 and b like 'k%kk%' and c = 4\"}]},{\"type\":\"element\",\"tag\":\"td\",\"props\":{\"align\":null},\"children\":[{\"type\":\"text\",\"value\":\"Y,使用到a,b,c\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般性建议\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对于单键索引，尽量选择针对当前query过滤性更好的索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，当前Query中过滤性最好的字段在索引字段顺序中，位置越靠前越好。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，尽量选择可以能够包含当前query中的where字句中更多字段的索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在选择组合索引的时候，如果某个字段可能出现范围查询时，尽量把这个字段放在索引次序的最后面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"书写sql语句时，尽量避免造成索引失效的情况\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.5 排序分组优化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建了索引\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create index idx_age_deptid_name on emp (age,deptid,name)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"create index idx_age_deptid_name on emp (age,deptid,name)\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"排序的条件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"无过滤 不索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"顺序错 必排序\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方向反 必排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以下  是否能使用到索引，能否去掉using filesort\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"explain select SQL_NO_CACHE * from emp order by age,deptid; \\r\\nexplain select SQL_NO_CACHE * from emp order by age,deptid limit 10; \\r\\nexplain select * from emp where age=45 order by deptid;\\r\\nexplain select * from emp where age=45 order by deptid,name; \\r\\nexplain select * from emp where age=45 order by deptid,empno;\\r\\nexplain select * from emp where age=45 order by name,deptid;\\r\\nexplain select * from emp where deptid=45 order by age;\\r\\nexplain select * from emp where age=45 order by deptid desc, name desc;\\r\\nexplain select * from emp where age=45 order by deptid asc, name desc;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"explain select SQL_NO_CACHE * from emp order by age,deptid; \\r\\nexplain select SQL_NO_CACHE * from emp order by age,deptid limit 10; \\r\\nexplain select * from emp where age=45 order by deptid;\\r\\nexplain select * from emp where age=45 order by deptid,name; \\r\\nexplain select * from emp where age=45 order by deptid,empno;\\r\\nexplain select * from emp where age=45 order by name,deptid;\\r\\nexplain select * from emp where deptid=45 order by age;\\r\\nexplain select * from emp where age=45 order by deptid desc, name desc;\\r\\nexplain select * from emp where age=45 order by deptid asc, name desc;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ORDER BY子句，尽量使用Index方式排序,避免使用FileSort方式排序\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"索引的选择\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行案例前先清除emp上的索引，只留主键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询 年龄为30岁的，且员工编号小于101000的用户，按用户名称排序\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SELECT SQL_NO_CACHE * FROM emp WHERE age =30 AND empno <101000 ORDER BY NAME;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SELECT SQL_NO_CACHE * FROM emp WHERE age =30 AND empno <101000 ORDER BY NAME;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-33.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-42.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-41-50.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论：很显然,type 是 ALL,即最坏的情况。Extra 里还出现了 Using filesort,也是最坏的情况。优化是必须的。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开始优化：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"思路：尽量让where的过滤条件和排序使用上索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是一共两个字段(deptno,empno)上有过滤条件，一个字段(ename)有索引\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、我们建一个三个字段的组合索引可否？\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-43-53.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_empno_name ON emp(age,empno,NAME);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_empno_name ON emp(age,empno,NAME);\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我们发现using filesort 依然存在，所以name 并没有用到索引。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原因是因为empno是一个范围过滤，所以索引后面的字段不会再使用索引了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以我们建一个3值索引是没有意义的\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、那么我们先删掉这个索引，DROP INDEX idx_age_empno_name ON emp\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了去掉filesort我们可以把索引建成\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE INDEX idx_age_name ON emp(age,NAME);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE INDEX idx_age_name ON emp(age,NAME);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也就是说empno 和name这个两个字段我只能二选其一。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这样我们优化掉了 using filesort。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行一下sql\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-46-14.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-46-20.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"速度果然提高了4倍。\\r\\n.......\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、但是\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果我们选择那个范围过滤，而放弃排序上的索引呢\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建立\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DROP INDEX idx_age_name ON emp\\r\\ncreate index idx_age_eno on emp(age,empno); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DROP INDEX idx_age_name ON emp\\r\\ncreate index idx_age_eno on emp(age,empno); \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"果然出现了filesort，而且type还是range光看字面其实并不美好。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我们来执行以下sql\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结果竟然有 filesort的 sql 运行速度，超过了已经优化掉 filesort的 sql ，而且快了好多倍。何故？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"原因是所有的排序都是在条件过滤之后才执行的，所以如果条件过滤了大部分数据的话，几百几千条数据进行排序其实并不是很消耗性能，即使索引优化了排序但实际提升性能很有限。相对的 empno<101000 这个条件如果没有用到索引的话，要对几万条的数据进行扫描，这是非常消耗性能的，所以索引放在这个字段上性价比最高，是最优选择。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论： 当范围条件和group by 或者 order by 的字段出现二选一时，优先观察条件字段的过滤数量，如果过滤的数据足够多，而需要排序的数据并不多时，优先把索引放在范围字段上。反之，亦然。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果不在索引列上，filesort有两种算法： mysql就要启动双路排序和单路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL 4.1之前是使用双路排序,字面意思就是两次扫描磁盘，最终得到数据， 读取行指针和orderby列，对他们进行排序，然后扫描已经排序好的列表，按照列表中的值重新从列表中读取对应的数据输出\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从磁盘取排序字段，在buffer进行排序，再从磁盘取其他字段。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"取一批数据，要对磁盘进行了两次扫描，众所周知，I\\\\O是很耗时的，所以在mysql4.1之后，出现了第二种改进的算法，就是单路排序。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单路排序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"从磁盘读取查询需要的所有列，按照order by列在buffer对它们进行排序，然后扫描排序后的列表进行输出， 它的效率更快一些，避免了第二次读取数据。并且把随机IO变成了顺序IO,但是它会使用更多的空间， 因为它把每一行都保存在内存中了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"结论及引申出的问题\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由于单路是后出的，总体而言好过双路\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是用单路有问题\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在sort_buffer中，方法B比方法A要多占用很多空间，因为方法B是把所有字段都取出, 所以有可能取出的数据的总大小超出了sort_buffer的容量，导致每次只能取sort_buffer容量大小的数据，进行排序（创建tmp文件，多路合并），排完再取取sort_buffer容量大小，再排……从而多次I/O。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"本来想省一次I/O操作，反而导致了大量的I/O操作，反而得不偿失。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优化策略\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"增大sort_buffer_size参数的设置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"增大max_length_for_sort_data参数的设置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"减少select 后面的查询的字段。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Why\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"提高Order By的速度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Order by时select * 是一个大忌。只Query需要的字段，这点非常重要。在这里的影响是：\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.1 当Query的字段大小总和小于max_length_for_sort_data 而且排序字段不是 TEXT|BLOB 类型时，会用改进后的算法——单路排序， 否则用老算法——多路排序。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.2 两种算法的数据都有可能超出sort_buffer的容量，超出之后，会创建tmp文件进行合并排序，导致多次I/O，但是用单路排序算法的风险会更大一些,所以要提高sort_buffer_size。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"尝试提高 sort_buffer_size\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不管用哪种算法，提高这个参数都会提高效率，当然，要根据系统的能力去提高，因为这个参数是针对每个进程的  1M-8M之间调整\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"尝试提高 max_length_for_sort_data\"}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"提高这个参数， 会增加用改进算法的概率。但是如果设的太高，数据总容量超出sort_buffer_size的概率就增大，明显症状是高的磁盘I/O活动和低的处理器使用率.       1024-8192之间调整\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"GROUP BY关键字优化\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"group by 使用索引的原则几乎跟order by一致 ，唯一区别是groupby 即使没有过滤条件用到索引，也可以直接使用索引。\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.5.6 最后使用索引的手段：覆盖索引\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"什么是覆盖索引？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"简单说就是，select 到 from 之间查询的列 <=使用的索引列+主键\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-53-41.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"explain select * from emp where name like '%abc';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"explain select * from emp where name like '%abc';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-53-51.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用覆盖索引前\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-57-56.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用覆盖索引后\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-18_16-58-06.png\"},\"children\":[]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"三查询截取分析\"},\"children\":[{\"type\":\"text\",\"value\":\"三、查询截取分析\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"31-慢查询日志\"},\"children\":[{\"type\":\"text\",\"value\":\"3.1 慢查询日志\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL的慢查询日志是MySQL提供的一种日志记录，它用来记录在MySQL中响应时间超过阀值的语句，具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。long_query_time的默认值为10，意思是运行10秒以上的语句。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"由他来查看哪些SQL超出了我们的最大忍耐时间值，比如一条sql执行超过5秒钟，我们就算慢SQL，希望能收集超过5秒的sql，结合之前explain进行全面分析。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.2 怎么玩\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"说明\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下，MySQL数据库没有开启慢查询日志，需要我们手动来设置这个参数。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"当然，如果不是调优需要的话，一般不建议启动该参数，因为开启慢查询日志会或多或少带来一定的性能影响。慢查询日志支持将日志记录写入文件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看是否开启及如何开启\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"默认情况下slow_query_log的值为OFF，表示慢查询日志是禁用的，可以通过设置slow_query_log的值来开启\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE '%slow_query_log%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE '%slow_query_log%';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-26-39.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开启\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"set global slow_query_log=1;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"set global slow_query_log=1;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用set global slow_query_log=1;开启了慢查询日志只对当前数据库生效，\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果MySQL重启后则会失效。\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-33.png\"},\"children\":[]},{\"type\":\"text\",\"value\":\"\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-41.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局变量设置，对当前连接不影响\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-48.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对当前连接立刻生效\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-28-55.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果要永久生效，就必须修改配置文件my.cnf（其它系统变量也是如此）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改my.cnf文件，\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"下增加或修改参数\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log 和slow_query_log_file后，然后重启MySQL服务器。也即将如下两行配置进my.cnf文件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log =1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log_file=/var/lib/mysql/atguigu-slow.log\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关于慢查询的参数slow_query_log_file ，它指定慢查询日志文件的存放路径，系统默认会给一个缺省的文host_name-slow.log（如果没有指定参数slow_query_log_file的话）\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"那么开启了慢查询日志后，什么样的SQL才会记录到慢查询日志里面呢？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个是由参数long_query_time控制，默认情况下long_query_time的值为10秒，\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE 'long_query_time%';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-32-41.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以使用命令修改，也可以在my.cnf参数里面修改。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"假如运行时间正好等于long_query_time的情况，并不会被记录下来。也就是说，\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在mysql源码里是判断大于long_query_time，而非大于等于。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看当前多少秒算慢\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"SHOW VARIABLES LIKE 'long_query_time%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"SHOW VARIABLES LIKE 'long_query_time%';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设置慢的阙值时间\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"set long_query_time=1\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"set long_query_time=1\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改为阙值到1秒钟的就是慢sql\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"记录慢SQL并后续分析\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实验一条慢sql\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-37-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"跟踪日志信息\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-36-06.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询当前系统中有多少条慢查询记录\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show global status like '%Slow_queries%';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show global status like '%Slow_queries%';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-38-09.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"配置版 my.cnf\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"[mysqld]\\r\\nslow_query_log=1\\r\\nslow_query_log_file=/var/lib/mysql/atguigu-slow.log\\r\\nlong_query_time=3\\r\\nlog_output=FILE\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b1d5c6\"},\"children\":[{\"type\":\"text\",\"value\":\"[mysqld]\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=1\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"slow_query_log_file\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=/var/lib/mysql/atguigu-slow.log\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"long_query_time\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=3\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"log_output\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=FILE\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.1.3 日志分析工具mysqldumpslow\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在生产环境中，如果要手工分析日志，查找、分析SQL，显然是个体力活，MySQL提供了日志分析工具mysqldumpslow。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查看mysqldumpslow的帮助信息\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow --help\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-39-43.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"-a: 不将数字抽象成N，字符串抽象成S\\r\\n-s: 是表示按照何种方式排序；\\r\\nc: 访问次数\\r\\nl: 锁定时间\\r\\nr: 返回记录\\r\\nt: 查询时间\\r\\nal:平均锁定时间\\r\\nar:平均返回记录数\\r\\nat:平均查询时间\\r\\n-t:即为返回前面多少条的数据；\\r\\n-g:后边搭配一个正则匹配模式，大小写不敏感的；\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"-a: 不将数字抽象成N，字符串抽象成S\\r\\n-s: 是表示按照何种方式排序；\\r\\nc: 访问次数\\r\\nl: 锁定时间\\r\\nr: 返回记录\\r\\nt: 查询时间\\r\\nal:平均锁定时间\\r\\nar:平均返回记录数\\r\\nat:平均查询时间\\r\\n-t:即为返回前面多少条的数据；\\r\\n-g:后边搭配一个正则匹配模式，大小写不敏感的；\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"工作常用参考\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到返回记录集最多的10个SQL\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到访问次数最多的10个SQL\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s c -t 10 /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s c -t 10 /var/lib/mysql/atguigu-slow.log\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"得到按照时间排序的前10条里面含有左连接的查询语句\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s t -t 10 -g \\\"left join\\\" /var/lib/mysql/atguigu-slow.log\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s t -t 10 -g \\\"left join\\\" /var/lib/mysql/atguigu-slow.log\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"另外建议在使用这些命令时结合 | 和more 使用 ，否则有可能出现爆屏情况\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log | more\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqldumpslow -s r -t 10 /var/lib/mysql/atguigu-slow.log | more\"}]}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"32-show-processlist\"},\"children\":[{\"type\":\"text\",\"value\":\"3.2 SHOW PROCESSLIST\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.2.1 能干什么：查询所有用户正在干什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果出现不顺眼的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"kill \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"id\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"四工具和技巧拾遗\"},\"children\":[{\"type\":\"text\",\"value\":\"四、工具和技巧拾遗\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"41-视图-view\"},\"children\":[{\"type\":\"text\",\"value\":\"4.1 视图   VIEW\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"将一段查询sql封装为一个虚拟的表。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这个虚拟表只保存了sql逻辑，不会保存任何查询结果。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.2 作用\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、封装复杂sql语句，提高复用性\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、逻辑放在数据库上面，更新不需要发布程序，面对频繁的需求变更更灵活\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.3 适用场景\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"很多地方可以共用的一组查询结果\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"报表\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.4 语法\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用 -> 查询：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select * from view_name \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select * from view_name \"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"使用 -> 更新：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE OR REPLACE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE OR REPLACE VIEW view_name \\r\\nAS\\r\\nSELECT column_name(s)\\r\\nFROM table_name\\r\\nWHERE condition\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4.1.5 注意事项(适用5.5)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql的视图中不允许有from 后面的子查询，但oracle可以\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"五主从复制\"},\"children\":[{\"type\":\"text\",\"value\":\"五、主从复制\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"51-复制的基本原理\"},\"children\":[{\"type\":\"text\",\"value\":\"5.1 复制的基本原理\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.1.1 slave会从master读取binlog来进行数据同步\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.1.2 三步骤+原理图\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-47-06.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MySQL复制过程分成三步：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1 master将改变记录到二进制日志（binary log）。这些记录过程叫做二进制日志事件，binary log events；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2 slave将master的binary log events拷贝到它的中继日志（relay log）；\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3 slave重做中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"4 master将改变记录到二进制日志（binary log）。这些记录过程叫做二进制日志事件，binary log events\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5 slave将master的binary log events拷贝到它的中继日志（relay log）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6 slave重做中继日志中的事件，将改变应用到自己的数据库中。 MySQL复制是异步的且串行化的\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"52-复制的基本原则\"},\"children\":[{\"type\":\"text\",\"value\":\"5.2 复制的基本原则\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.1 每个slave只有一个master\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.2 每个slave只能有一个唯一的服务器ID\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.2.3 每个master可以有多个salve\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"53-复制的最大问题\"},\"children\":[{\"type\":\"text\",\"value\":\"5.3 复制的最大问题\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.3.1 延时\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"54-一主一从常见配置\"},\"children\":[{\"type\":\"text\",\"value\":\"5.4 一主一从常见配置\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.1 mysql版本一致且后台以服务运行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.2 主从都配置在\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"结点下，都是小写\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.3 主机修改my.ini配置文件\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-49-11.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"# 主服务器唯一ID\\r\\nserver-id=1\\r\\n# 启用二进制日志\\r\\n# log-bin=自己本地的路径/data/mysqlbin\\r\\nlog-bin=D:/devSoft/MySQLServer5.5/data/mysqlbin\\r\\n# 设置不要复制的数据库\\r\\nbinlog-ignore-db=mysql\\r\\n# 设置需要复制的数据库\\r\\nbinlog-do-db=需要复制的主数据库名字\\r\\n# 设置logbin格式\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=STATEMENT（默认）\\r\\nbinlog_format=ROW\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 主服务器唯一ID\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"server-id\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=1\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 启用二进制日志\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# log-bin=自己本地的路径/data/mysqlbin\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"log-bin\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=D:/devSoft/MySQLServer5.5/data/mysqlbin\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 设置不要复制的数据库\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"binlog-ignore-db\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=mysql\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 设置需要复制的数据库\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"binlog-do-db\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=需要复制的主数据库名字\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 设置logbin格式\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"binlog_format\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=STATEMENT（默认）\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"binlog_format\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=STATEMENT（默认）\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"binlog_format\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=ROW\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-50-40.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.4 mysql主从复制起始时，从机不继承主机数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.5 从机配置文件修改my.cnf的\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysqld\"}]},{\"type\":\"text\",\"value\":\"栏位下\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"server-id = 2\\r\\n# 注意 my.cnf 中有server-id = 1\\r\\nrelay-log=mysql-relay\\n\",\"language\":\"ini\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"server-id\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\" = 2\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-f742ab\"},\"children\":[{\"type\":\"text\",\"value\":\"# 注意 my.cnf 中有server-id = 1\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c99c73\"},\"children\":[{\"type\":\"text\",\"value\":\"relay-log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-b3daed\"},\"children\":[{\"type\":\"text\",\"value\":\"=mysql-relay\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.6 因修改过配置文件，请主机+从机都重启后台mysql服务\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.7 主机从机都关闭防火墙\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"windows手动关闭\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"安全工具关上：腾讯管家\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"360不影响\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"关闭虚拟机linux防火墙 systemctl stop firewalld\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.8 在Windows主机上建立帐户并授权slave\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"GRANT REPLICATION SLAVE ON *.* TO 'zhangsan'@'从机器数据库IP' IDENTIFIED BY '123456';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"GRANT REPLICATION SLAVE ON *.* TO 'zhangsan'@'从机器数据库IP' IDENTIFIED BY '123456';\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-53-37.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查询master的状态\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show master status;\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show master status;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-54-16.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"记录下File和Position的值\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行完此步骤后不要再操作主服务器MYSQL，防止主服务器状态值变化\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.9 在Linux从机上配置需要复制的主机\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CHANGE MASTER TO MASTER_HOST='主机IP',MASTER_USER='zhangsan',MASTER_PASSWORD='123456',MASTER_LOG_FILE='File名字',MASTER_LOG_POS=Position数字;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CHANGE MASTER TO MASTER_HOST='主机IP',MASTER_USER='zhangsan',MASTER_PASSWORD='123456',MASTER_LOG_FILE='File名字',MASTER_LOG_POS=Position数字;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CHANGE MASTER TO MASTER_HOST='192.168.124.3',\\r\\nMASTER_USER='zhangsan',\\r\\nMASTER_PASSWORD='123456',\\r\\nMASTER_LOG_FILE='mysqlbin.具体数字',MASTER_LOG_POS=具体值;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CHANGE MASTER TO MASTER_HOST='192.168.124.3',\\r\\nMASTER_USER='zhangsan',\\r\\nMASTER_PASSWORD='123456',\\r\\nMASTER_LOG_FILE='mysqlbin.具体数字',MASTER_LOG_POS=具体值;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"启动从服务器复制功能\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"start slave;\\r\\nshow slave status\\\\G;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"start slave;\\r\\nshow slave status\\\\G;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_12-56-27.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下面两个参数都是Yes，则说明主从配置成功！\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"Slave_IO_Running: Yes\\r\\nSlave_SQL_Running: Yes\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Slave_IO_Running: Yes\\r\\nSlave_SQL_Running: Yes\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.10 主机新建库、新建表、insert记录，从机复制\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.11 如何停止从服务复制功能\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"stop slave;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"stop slave;\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"5.4.12 如何重新配置主从\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"stop slave;\\r\\nreset master;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"stop slave;\\r\\nreset master;\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"六mycat\"},\"children\":[{\"type\":\"text\",\"value\":\"六、mycat\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"61-mycat介绍\"},\"children\":[{\"type\":\"text\",\"value\":\"6.1 Mycat介绍\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.1 是什么\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据库中间件\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前身是阿里的cobar\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.2 干什么的\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、读写分离\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、数据分片\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"垂直拆分\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"水平拆分\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"垂直+水平拆分\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-40-36.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3、多数据源整合\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.1.3 原理\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"“拦截”\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Mycat 的原理中最重要的一个动词是“拦截”，它拦截了用户发送过来的 SQL 语句，首先对 SQL 语句做了一些特定的分析：如分片分析、路由分析、读写分离分析、缓存分析等，然后将此 SQL 发往后端的真实数据库，并将返回的结果做适当的处理，最终再返回给用户\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-42-06.png\"},\"children\":[]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"这种方式把数据库的分布式从代码中解耦出来，程序员察觉不出来后台使用mycat还是mysql。\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"62-安装启动\"},\"children\":[{\"type\":\"text\",\"value\":\"6.2 安装启动\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.1 解压缩文件拷贝到linux下 /usr/local/\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.2 三个文件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义逻辑库，表、分片节点等内容\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"rule.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义分片规则\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"server.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定义用户以及系统相关变量，如端口等.\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.3 启动前先修改schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <!--逻辑库    name名称,   checkSQLschema         sqlMaxLimit 末尾是否要加 limit xxx-->\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <!--逻辑库    name名称,   dataHost 引用的哪个dataHost      database:对应mysql的database-->\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"localhost1\\\" database=\\\"db1\\\" />\\r\\n  <dataHost name=\\\"localhost1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <!-- can have multi write hosts -->\\r\\n    <writeHost host=\\\"hostM1\\\" url=\\\"localhost:3306\\\" user=\\\"root\\\" password=\\\"123456\\\"></writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <!--逻辑库    name名称,   checkSQLschema         sqlMaxLimit 末尾是否要加 limit xxx-->\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <!--逻辑库    name名称,   dataHost 引用的哪个dataHost      database:对应mysql的database-->\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"localhost1\\\" database=\\\"db1\\\" />\\r\\n  <dataHost name=\\\"localhost1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <!-- can have multi write hosts -->\\r\\n    <writeHost host=\\\"hostM1\\\" url=\\\"localhost:3306\\\" user=\\\"root\\\" password=\\\"123456\\\"></writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.4 再修改server.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<user name=\\\"root\\\">\\r\\n  <property name=\\\"password\\\">654321</property>\\r\\n  <property name=\\\"schemas\\\">TESTDB</property>\\r\\n</user>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<user name=\\\"root\\\">\\r\\n  <property name=\\\"password\\\">654321</property>\\r\\n  <property name=\\\"schemas\\\">TESTDB</property>\\r\\n</user>\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.5 验证数据库访问情况\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p123123 -h 192.168.154.1 -P 3306\\r\\nmysql -uroot -p123123 -h 192.168.154.154 -P 3306\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p123123 -h 192.168.154.1 -P 3306\\r\\nmysql -uroot -p123123 -h 192.168.154.154 -P 3306\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如本机远程访问报错，请建对应用户\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"grant all privileges on *.* to root@'缺少的host'  identified by '123123';\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"grant all privileges on *.* to root@'缺少的host'  identified by '123123';\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.6 启动程序\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制台启动 ：去mycat/bin 目录下 mycat console\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后台启动 ：去mycat/bin 目录下 mycat start\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.7 启动时可能出现报错\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"域名解析失败\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-50-50.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1、用vim 修改 /etc/hosts 文件\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在 127.0.0.1 后面增加你的机器名\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-50-59.png.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2、修改后重新启动网络服务\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-51-05.png\"},\"children\":[]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.2.8 登录\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后台管理窗口\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p654321 -P9066 -h192.168.67.131\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p654321 -P9066 -h192.168.67.131\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"命令\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"show database\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show database\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-52-35.png\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"show @@help\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_14-52-44.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据窗口\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"mysql -uroot -p654321 -P8066 -h192.168.67.131\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mysql -uroot -p654321 -P8066 -h192.168.67.131\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"63-读写分离\"},\"children\":[{\"type\":\"text\",\"value\":\"6.3 读写分离\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.3.1 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!--读库（从库）的配置 -->\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\"></readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\"></schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\" switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!--读库（从库）的配置 -->\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\"></readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"负载均衡类型，目前的取值有4 种：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"0\\\", 不开启读写分离机制，所有读操作都发送到当前可用的 writeHost 上。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"1\\\"，全部的 readHost 与 stand by writeHost 参与 select 语句的负载均衡，简单的说，当双主双从模式(M1->S1，M2->S2，并且 M1 与 M2 互为主备)，正常情况下，M2,S1,S2 都参与 select 语句的负载均衡。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"2\\\"，所有读操作都随机的在 writeHost、readhost 上分发。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"balance=\\\"3\\\"，所有读请求随机的分发到 readhost 执行，writerHost 不负担读压力\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.3.2 读写分离\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"创建表\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"create table t_replica \\r\\n(id int auto_increment , \\r\\n  name varchar(200) \\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"create table t_replica \\r\\n(id int auto_increment , \\r\\n  name varchar(200) \\r\\n);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分别在两个库下插入：\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into t_replica(name) values (@@hostname)\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"insert into t_replica(name) values (@@hostname)\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"然后再mycat下执行select * from t_replica能够\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"64-分库\"},\"children\":[{\"type\":\"text\",\"value\":\"6.4 分库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.4.1 如何选择分库表\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#客户表  rows:20万 \\r\\nCREATE TABLE customer(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    NAME VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#客户表  rows:20万 \\r\\nCREATE TABLE customer(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    NAME VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单表   rows:600万\\r\\nCREATE TABLE orders(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type INT,\\r\\n    customer_id INT,\\r\\n    amount DECIMAL(10,2),\\r\\n    PRIMARY KEY(id)  \\r\\n); \\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#订单表   rows:600万\\r\\nCREATE TABLE orders(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type INT,\\r\\n    customer_id INT,\\r\\n    amount DECIMAL(10,2),\\r\\n    PRIMARY KEY(id)  \\r\\n); \"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单详细表     rows:600万\\r\\nCREATE TABLE orders_detail(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    detail VARCHAR(2000),\\r\\n    order_id INT,\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#订单详细表     rows:600万\\r\\nCREATE TABLE orders_detail(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    detail VARCHAR(2000),\\r\\n    order_id INT,\\r\\n    PRIMARY KEY(id)\\r\\n);\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"#订单状态字典表   rows:20\\r\\nCREATE TABLE dict_order_type(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"#订单状态字典表   rows:20\\r\\nCREATE TABLE dict_order_type(\\r\\n    id INT AUTO_INCREMENT,\\r\\n    order_type VARCHAR(200),\\r\\n    PRIMARY KEY(id)\\r\\n);\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"select o.*,od.detail,d.order_type \\r\\nfrom orders  o \\r\\ninner join orders_detail  od on o.id =od.order_id  \\r\\ninner join dict_order_type d on o.order_type=d.id  \\r\\nwhere o.customer_id=xxxx\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"select o.*,od.detail,d.order_type \\r\\nfrom orders  o \\r\\ninner join orders_detail  od on o.id =od.order_id  \\r\\ninner join dict_order_type d on o.order_type=d.id  \\r\\nwhere o.customer_id=xxxx\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.4.2 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost>\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"65-水平分表\"},\"children\":[{\"type\":\"text\",\"value\":\"6.5 水平分表\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.1 schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n</mycat:schema>\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.2 rule.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<tableRule name=\\\"mod_rule\\\">\\r\\n  <rule>\\r\\n    <columns>customer_id</columns>\\r\\n    <algorithm>mod-long</algorithm>\\r\\n  </rule>\\r\\n</tableRule>\\r\\n\\r\\n<function name=\\\"mod-long\\\" class=\\\"io.mycat.route.function.PartitionByMod\\\">\\r\\n  <!-- how many data nodes -->\\r\\n  <property name=\\\"count\\\">2</property>\\r\\n</function>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<tableRule name=\\\"mod_rule\\\">\\r\\n  <rule>\\r\\n    <columns>customer_id</columns>\\r\\n    <algorithm>mod-long</algorithm>\\r\\n  </rule>\\r\\n</tableRule>\\r\\n\\r\\n<function name=\\\"mod-long\\\" class=\\\"io.mycat.route.function.PartitionByMod\\\">\\r\\n  <!-- how many data nodes -->\\r\\n  <property name=\\\"count\\\">2</property>\\r\\n</function>\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.3 跨库join\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ER表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为了相关联的表的行尽量分在一个库下\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schma name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\">\\r\\n      <childTable name=\\\"orders_detail\\\" primaryKey=\\\"id\\\" joinKey=\\\"order_id\\\" parentKey=\\\"id\\\" />\\r\\n    </table>\\r\\n    <table name=\\\"dict_status\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n    </schema>\\r\\n    <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n    <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n    <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        </readHost> -->\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n    <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n</mycat:schema>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n  <schma name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\">\\r\\n      <childTable name=\\\"orders_detail\\\" primaryKey=\\\"id\\\" joinKey=\\\"order_id\\\" parentKey=\\\"id\\\" />\\r\\n    </table>\\r\\n    <table name=\\\"dict_status\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n    </schema>\\r\\n    <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n    <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n    <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n        </readHost> -->\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n    <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n      switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n      <heartbeat>select user()</heartbeat>\\r\\n      <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </writeHost>\\r\\n    </dataHost>\\r\\n</mycat:schema>\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建相关表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局表\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"设定为全局的表，会直接复制给每个数据库一份，所有写操作也会同步给多个库。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"所以全局表一般不能是大数据表或者更新频繁的表\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一般是字典表或者系统表为宜。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"schema.xml\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n    <table name=\\\"dict_order_type\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\\n\",\"language\":\"xml\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<?xml version=\\\"1.0\\\"?>\\r\\n<!DOCTYPE mycat:schema SYSTEM \\\"schema.dtd\\\">\\r\\n<mycat:schema xmlns:mycat=\\\"http://io.mycat/\\\">\\r\\n\\r\\n  <schema name=\\\"TESTDB\\\" checkSQLschema=\\\"false\\\" sqlMaxLimit=\\\"100\\\" dataNode=\\\"dn1\\\">\\r\\n    <table name=\\\"customer\\\" dataNode=\\\"dn2\\\"></table>\\r\\n    <table name=\\\"orders\\\" dataNode=\\\"dn1,dn2\\\" rule=\\\"mod_rule\\\"></table>\\r\\n    <table name=\\\"dict_order_type\\\" dataNode=\\\"dn1,dn2\\\" type=\\\"global\\\"></table>\\r\\n  </schema>\\r\\n  <dataNode name=\\\"dn1\\\" dataHost=\\\"host1\\\" database=\\\"atguigu_mc\\\" />\\r\\n  <dataNode name=\\\"dn2\\\" dataHost=\\\"host2\\\" database=\\\"atguigu_sm\\\" />\\r\\n  <dataHost name=\\\"host1\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"2\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm1\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      <!-- <readHost host=\\\"hosts1\\\" url=\\\"192.168.67.131:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n      </readHost> -->\\r\\n    </writeHost>\\r\\n  </dataHost>\\r\\n  <dataHost name=\\\"host2\\\" maxCon=\\\"1000\\\" minCon=\\\"10\\\" balance=\\\"0\\\" writeType=\\\"0\\\" dbType=\\\"mysql\\\" dbDriver=\\\"native\\\"\\r\\n    switchType=\\\"1\\\" slaveThreshold=\\\"100\\\">\\r\\n    <heartbeat>select user()</heartbeat>\\r\\n    <writeHost host=\\\"hostm2\\\" url=\\\"192.168.67.1:3306\\\" user=\\\"root\\\" password=\\\"123123\\\">\\r\\n    </writeHost>\\r\\n  </dataHost>\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"6.5.4 全局序列\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三种方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1.本地文件【不推荐】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2.数据库方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数据库序列方式原理\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用数据库一个表 来进行计数累加。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"但是并不是每次生成序列都读写数据库，这样效率太低\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mycat会预加载一部分号段到mycat的内存中，这样大部分读写序列都是在内存中完成的。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果内存中的号段用完了 mycat会再向数据库要一次。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"问：那如果mycat崩溃了 ，那内存中的序列岂不是都没了？\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是的。如果是这样，那么mycat启动后会向数据库申请新的号段，原有号段会弃用。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也就是说如果mycat重启，那么损失是当前的号段没用完的号码，但是不会因此出现主键重复。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"建库序列脚本\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"win10\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"CREATE TABLE MYCAT_SEQUENCE (NAME VARCHAR(50) NOT NULL,current_value INT NOT NULL,  increment INT NOT NULL DEFAULT 100, PRIMARY KEY(NAME)) ENGINE=INNODB;\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CREATE TABLE MYCAT_SEQUENCE (NAME VARCHAR(50) NOT NULL,current_value INT NOT NULL,  increment INT NOT NULL DEFAULT 100, PRIMARY KEY(NAME)) ENGINE=INNODB;\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"DELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_currval(seq_name VARCHAR(50)) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC  \\r\\nBEGIN\\r\\nDECLARE retval VARCHAR(64);\\r\\nSET retval=\\\"-999999999,null\\\";\\r\\nSELECT CONCAT(CAST(current_value AS CHAR),\\\",\\\",CAST(increment AS CHAR)) INTO retval FROM\\r\\nMYCAT_SEQUENCE WHERE NAME = seq_name;\\r\\nRETURN retval;\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_setval(seq_name VARCHAR(50),VALUE INTEGER) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = VALUE\\r\\nWHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER ;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_nextval(seq_name VARCHAR(50)) RETURNS VARCHAR(64) \\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = current_value + increment WHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nSELECT * FROM MYCAT_SEQUENCE\\r\\n\\r\\nTRUNCATE TABLE MYCAT_SEQUENCE\\r\\n\\r\\n##增加要用的序列\\r\\nINSERT INTO MYCAT_SEQUENCE(NAME,current_value,increment) VALUES ('ORDERS', 400000,\\r\\n100);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_currval(seq_name VARCHAR(50)) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC  \\r\\nBEGIN\\r\\nDECLARE retval VARCHAR(64);\\r\\nSET retval=\\\"-999999999,null\\\";\\r\\nSELECT CONCAT(CAST(current_value AS CHAR),\\\",\\\",CAST(increment AS CHAR)) INTO retval FROM\\r\\nMYCAT_SEQUENCE WHERE NAME = seq_name;\\r\\nRETURN retval;\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_setval(seq_name VARCHAR(50),VALUE INTEGER) RETURNS VARCHAR(64)\\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = VALUE\\r\\nWHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER ;\\r\\n\\r\\nDELIMITER $$\\r\\nCREATE FUNCTION mycat_seq_nextval(seq_name VARCHAR(50)) RETURNS VARCHAR(64) \\r\\nDETERMINISTIC\\r\\nBEGIN\\r\\nUPDATE MYCAT_SEQUENCE\\r\\nSET current_value = current_value + increment WHERE NAME = seq_name;\\r\\nRETURN mycat_seq_currval(seq_name);\\r\\nEND $$\\r\\nDELIMITER;\\r\\n\\r\\nSELECT * FROM MYCAT_SEQUENCE\\r\\n\\r\\nTRUNCATE TABLE MYCAT_SEQUENCE\\r\\n\\r\\n##增加要用的序列\\r\\nINSERT INTO MYCAT_SEQUENCE(NAME,current_value,increment) VALUES ('ORDERS', 400000,\\r\\n100);\"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3.修改mycat配置\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"sequence_db_conf.properties \\r\\nvim sequence_db_conf.properties\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sequence_db_conf.properties \\r\\nvim sequence_db_conf.properties\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"意思是 ORDERS这个序列在dn1这个节点上，具体dn1节点是哪台机子，请参考schema.xml\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"server.xml\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"vim server.xml\\r\\n\"},{\"type\":\"element\",\"tag\":\"img\",\"props\":{\"alt\":\"\",\"src\":\"./assets/Snipaste_2022-09-19_15-08-30.png\"},\"children\":[]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"然后重启\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"插入语句\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"insert into `orders`(id,amount,customer_id,order_type) values(next value for MYCATSEQ_ORDERS,1000,101,102);\\n\",\"language\":\"sql\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"insert into `orders`(id,amount,customer_id,order_type) values(next value for MYCATSEQ_ORDERS,1000,101,102);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"时间戳方式\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"18位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较长\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自主生成\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"根据业务逻辑组合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以利用 redis的单线程原子性 incr来生成序列\"}]}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"sql-语句\"},\"children\":[{\"type\":\"text\",\"value\":\"sql 语句\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<<< @/program/learnMySql.sql\"}]},{\"type\":\"element\",\"tag\":\"style\",\"children\":[{\"type\":\"text\",\"value\":\".ct-f742ab{color:#6E7781}\\n.ct-b3daed{color:#24292F}\\n.ct-c99c73{color:#CF222E}\\n.ct-b1d5c6{color:#953800}\\n.dark .ct-b1d5c6{color:#FFA657}\\n.dark .ct-c99c73{color:#FF7B72}\\n.dark .ct-b3daed{color:#C9D1D9}\\n.dark .ct-f742ab{color:#8B949E}\"}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[{\"id\":\"一为什么要学习数据库\",\"depth\":2,\"text\":\"一、为什么要学习数据库\"},{\"id\":\"二数据库的相关概念\",\"depth\":2,\"text\":\"二、数据库的相关概念\"},{\"id\":\"三数据库存储数据的特点\",\"depth\":2,\"text\":\"三、数据库存储数据的特点\"},{\"id\":\"四初始mysql\",\"depth\":2,\"text\":\"四、初始MySQL\",\"children\":[{\"id\":\"mysql产品的介绍\",\"depth\":3,\"text\":\"MySQL产品的介绍\"},{\"id\":\"mysql产品的安装\",\"depth\":3,\"text\":\"MySQL产品的安装          ★\"},{\"id\":\"mysql服务的启动和停止\",\"depth\":3,\"text\":\"MySQL服务的启动和停止     ★\"},{\"id\":\"mysql服务的登录和退出\",\"depth\":3,\"text\":\"MySQL服务的登录和退出     ★\"}]},{\"id\":\"五dql语言的学习\",\"depth\":2,\"text\":\"五、DQL语言的学习```````````★````````````\",\"children\":[{\"id\":\"51-基础查询\",\"depth\":3,\"text\":\"5.1 基础查询        ★\"},{\"id\":\"52-条件查询\",\"depth\":3,\"text\":\"5.2 条件查询  \\t   ★\"},{\"id\":\"53-排序查询\",\"depth\":3,\"text\":\"5.3 排序查询  \\t   ★\"},{\"id\":\"54-常见函数\",\"depth\":3,\"text\":\"5.4 常见函数        ★\"},{\"id\":\"55-分组函数\",\"depth\":3,\"text\":\"5.5 分组函数        ★\"},{\"id\":\"56-分组查询\",\"depth\":3,\"text\":\"5.6 分组查询\\t\\t   ★\"},{\"id\":\"57-连接查询\",\"depth\":3,\"text\":\"5.7 连接查询\\t \\t★\"},{\"id\":\"58-子查询\",\"depth\":3,\"text\":\"5.8 子查询       √\"},{\"id\":\"59-分页查询\",\"depth\":3,\"text\":\"5.9 分页查询       ★\"},{\"id\":\"510-union联合查询\",\"depth\":3,\"text\":\"5.10 union联合查询\\t√\"}]},{\"id\":\"六ddl语言的学习\",\"depth\":2,\"text\":\"六、DDL语言的学习```````````★````````````\",\"children\":[{\"id\":\"61-创建数据库\",\"depth\":3,\"text\":\"6.1 创建数据库\"},{\"id\":\"62-删除数据库\",\"depth\":3,\"text\":\"6.2 删除数据库\"},{\"id\":\"63-创建表\",\"depth\":3,\"text\":\"6.3 创建表\"},{\"id\":\"64-修改表\",\"depth\":3,\"text\":\"6.4 修改表\"},{\"id\":\"65-删除表\",\"depth\":3,\"text\":\"6.5 删除表\"},{\"id\":\"66-复制表\",\"depth\":3,\"text\":\"6.6 复制表\"}]},{\"id\":\"七dml语言的学习\",\"depth\":2,\"text\":\"七、DML语言的学习\",\"children\":[{\"id\":\"71-数据的插入\",\"depth\":3,\"text\":\"7.1 数据的插入：\"},{\"id\":\"72-数据的删除\",\"depth\":3,\"text\":\"7.2 数据的删除\"}]},{\"id\":\"八tcl语言的学习\",\"depth\":2,\"text\":\"八、TCL语言的学习\",\"children\":[{\"id\":\"81-什么事事务为什么要用事务\",\"depth\":3,\"text\":\"8.1 什么事事务？为什么要用事务？\"},{\"id\":\"82-事务的四大特性acid\",\"depth\":3,\"text\":\"8.2 事务的四大特性（ACID）\"},{\"id\":\"83-分类\",\"depth\":3,\"text\":\"8.3 分类：\"},{\"id\":\"84-事务和事务处理\",\"depth\":3,\"text\":\"8.4 事务和事务处理\"}]},{\"id\":\"二索引优化分析\",\"depth\":2,\"text\":\"二、索引优化分析\",\"children\":[{\"id\":\"23-索引简介\",\"depth\":3,\"text\":\"2.3 索引简介\"},{\"id\":\"24-性能分析\",\"depth\":3,\"text\":\"2.4 性能分析\"},{\"id\":\"25-查询优化\",\"depth\":3,\"text\":\"2.5 查询优化\"}]},{\"id\":\"三查询截取分析\",\"depth\":2,\"text\":\"三、查询截取分析\",\"children\":[{\"id\":\"31-慢查询日志\",\"depth\":3,\"text\":\"3.1 慢查询日志\"},{\"id\":\"32-show-processlist\",\"depth\":3,\"text\":\"3.2 SHOW PROCESSLIST\"}]},{\"id\":\"四工具和技巧拾遗\",\"depth\":2,\"text\":\"四、工具和技巧拾遗\",\"children\":[{\"id\":\"41-视图-view\",\"depth\":3,\"text\":\"4.1 视图   VIEW\"}]},{\"id\":\"五主从复制\",\"depth\":2,\"text\":\"五、主从复制\",\"children\":[{\"id\":\"51-复制的基本原理\",\"depth\":3,\"text\":\"5.1 复制的基本原理\"},{\"id\":\"52-复制的基本原则\",\"depth\":3,\"text\":\"5.2 复制的基本原则\"},{\"id\":\"53-复制的最大问题\",\"depth\":3,\"text\":\"5.3 复制的最大问题\"},{\"id\":\"54-一主一从常见配置\",\"depth\":3,\"text\":\"5.4 一主一从常见配置\"}]},{\"id\":\"六mycat\",\"depth\":2,\"text\":\"六、mycat\",\"children\":[{\"id\":\"61-mycat介绍\",\"depth\":3,\"text\":\"6.1 Mycat介绍\"},{\"id\":\"62-安装启动\",\"depth\":3,\"text\":\"6.2 安装启动\"},{\"id\":\"63-读写分离\",\"depth\":3,\"text\":\"6.3 读写分离\"},{\"id\":\"64-分库\",\"depth\":3,\"text\":\"6.4 分库\"},{\"id\":\"65-水平分表\",\"depth\":3,\"text\":\"6.5 水平分表\"}]},{\"id\":\"sql-语句\",\"depth\":2,\"text\":\"sql 语句\"}]}},\"_type\":\"markdown\",\"_id\":\"content:3.Note:1.program:11.learnMySql.md\",\"_source\":\"content\",\"_file\":\"3.Note/1.program/11.learnMySql.md\",\"_extension\":\"md\"},\"hash\":\"D2m4XjG09J\"}";

export { _11_learnMySql as default };
//# sourceMappingURL=11.learnMySql.mjs.map
