// ROLLUP_NO_REPLACE 
 const _2_learnJavascript = "{\"parsed\":{\"_path\":\"/note/program/learnjavascript\",\"_dir\":\"program\",\"_draft\":false,\"_partial\":false,\"_locale\":\"en\",\"_empty\":false,\"title\":\"JavaScript & jQuery & ECharts\",\"description\":\"\",\"excerpt\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"javascript基础web-apisjqueryecharts\"},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript基础+Web APIs+jQuery+ECharts\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js的组成\"},\"children\":[{\"type\":\"text\",\"value\":\"JS的组成-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-ecmascript\"},\"children\":[{\"type\":\"text\",\"value\":\"1. ECMAScript\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript：网景公司\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jscript：微软\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-dom-文档对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"2. DOM - 文档对象模型\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Document ObjectModel\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-bom-浏览器对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"3. BOM - 浏览器对象模型\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Browser ObjectModel\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js初识\"},\"children\":[{\"type\":\"text\",\"value\":\"JS初识-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-行内式的js直接写到元素的内部\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 行内式的js，直接写到元素的内部\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<input type=\\\"button\\\" value=\\\"唐伯虎\\\" onclick=\\\"alert('秋香姐')\\\">\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-内嵌式的js\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 内嵌式的js\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<script>\\r\\n  alert(\\\"hello javascript!\\\")\\r\\n  alert(\\\"hello world!\\\")\\r\\n</script>\\r\\n```\\r\\n\\r\\n### 3. 外部js文件\\r\\n<!-- <script src=\\\"my.js\\\">此处不可写代码</script> -->\\r\\n\\r\\n### 4. JS属于解释型语言\\n\",\"language\":\"html\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"<script>\\r\\n  alert(\\\"hello javascript!\\\")\\r\\n  alert(\\\"hello world!\\\")\\r\\n</script>\\r\\n```\\r\\n\\r\\n### 3. 外部js文件\\r\\n<!-- <script src=\\\"my.js\\\">此处不可写代码</script> -->\\r\\n\\r\\n### 4. JS属于解释型语言\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"运行时及时解释，并立即执行\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-标识符\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 标识符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开发人员为变量、属性、函数、参数取的名字\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"命名要有意义\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量一般用名词\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数一般用动词\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-关键字\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 关键字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JS本身已经使用了的字，不能再用他们充当变量名、方法名。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-保留字\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 保留字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"预留的关键字，未来可能会成为关键字\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"注释\"},\"children\":[{\"type\":\"text\",\"value\":\"注释-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-单行注释\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 单行注释\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"// 注释内容\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-多行注释\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 多行注释\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/*  注释内容  */\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"输入输出语句\"},\"children\":[{\"type\":\"text\",\"value\":\"输入输出语句-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-prompt\"},\"children\":[{\"type\":\"text\",\"value\":\"1. prompt()\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"输入框\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"prompt('请输入您的年龄：')\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-alert\"},\"children\":[{\"type\":\"text\",\"value\":\"2. alert()\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"弹出警示框\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"alert(\\\"hello javascript!\\\")\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"alert(\\\"hello javascript!\\\")\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-console\"},\"children\":[{\"type\":\"text\",\"value\":\"3. console\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制台输出\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log('这是程序员能看到的')\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"console.log('这是程序员能看到的')\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"变量\"},\"children\":[{\"type\":\"text\",\"value\":\"变量-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概述\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存放数据的容器，通过变量名获取数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"本质是内存空间\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Diagram Designer\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-使用\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"先声明再使用【推荐】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不声明也可以直接赋值,但会变成全局变量\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-语法扩展\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 语法扩展\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-命名规范\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 命名规范\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"驼峰命名法，myFirstName\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"name可能在有的浏览器有特殊含义，尽量不要作为变量名\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-交换变量的案例\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 交换变量的案例\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-const-与-let\"},\"children\":[{\"type\":\"text\",\"value\":\"6. const 与 let\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6 新增加了两个重要的关键字: let 和 const。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"let 声明的变量只在 let 命令所在的代码块内有效。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 声明一个只读的常量，一旦声明，常量的值就不能改变。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用于声明一个或多个常量，声明时必须进行初始化，且初始化后值不可再修改\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 定义常量、let 定义的变量相同点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"二者都是块级作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"都不能和它所在作用域内的其他变量或函数拥有相同的名称(不能再其作用域内重复声明)\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"区别：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 声明的常量必须初始化，let声明的变量不用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 定义常量的值不能通过再赋值修改，也不能再次声明。而 let 定义的变量值可以修改。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  try {\\r\\n      const PI = 3.141592653589793;\\r\\n      PI = 3.14;\\r\\n  }\\r\\n  catch (err) {\\r\\n      console.log(err);\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  try {\\r\\n      const PI = 3.141592653589793;\\r\\n      PI = 3.14;\\r\\n  }\\r\\n  catch (err) {\\r\\n      console.log(err);\\r\\n  }\\n\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数据类型\"},\"children\":[{\"type\":\"text\",\"value\":\"数据类型-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-js是动态语言变量的数据类型是可以变化的\"},\"children\":[{\"type\":\"text\",\"value\":\"1. js是动态语言，变量的数据类型是可以变化的\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-简单数据类型也叫值类型放在栈立面\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 简单数据类型：也叫值类型；放在栈立面。\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number        默认：0\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"八进制   数字前面加0\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"十六进制 数字前面加0x\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数字型的最大值/最小值\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log(Number.MAX_VALUE);\\r\\nconsole.log(Number.MIN_VALUE);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"console.log(Number.MAX_VALUE);\\r\\nconsole.log(Number.MIN_VALUE);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Infinity/-Infinity 表示无穷大/无穷小\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log(Number.MAX_VALUE*2);\\r\\nconsole.log(-Number.MAX_VALUE*2);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"console.log(Number.MAX_VALUE*2);\\r\\nconsole.log(-Number.MAX_VALUE*2);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"NaN  非数字的\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log('huang'-100);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"console.log('huang'-100);\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"isNaN()\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是数字返回false\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不是数字返回true\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用方法\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"// amount 保留2位小数\\r\\namount.toFixed(2) \\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"// amount 保留2位小数\\r\\namount.toFixed(2) \\n\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"String        \\\"\\\"\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串嵌套，外单内双或外双内单\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转义字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串长度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串的拼接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双引号还是单引号？\\r\\n1）html中属性规范是用双引号，js中字符串规定是用单引号\\r\\n2）js中单引号区别和php很像：单引号快，双引号可转义字符，双引号可解析变量\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Boolean       false\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Undefined     undefined\\r\\n- 声明变量未赋值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Null          null\\r\\n- 也是object类型(特殊，设计js时的错误，没有改过来)\\r\\n- 如果有个变量以后打算存储为对象，暂时没想好放啥，可以先赋值null\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-typeof检测数据类型\"},\"children\":[{\"type\":\"text\",\"value\":\"3. typeof检测数据类型\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-数据类型的转换\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 数据类型的转换\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为字符串\\r\\n- toString\\r\\n- String()\\r\\n- 加号拼接字符串【常用】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为数值型\\r\\n- parseInt()【常用】\\r\\n- parseFloat() 【常用】\\r\\n- Number()\\r\\n- 利用算数运算进行隐式转换 - * /\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为布尔型\\r\\n- Boolean()，输出为false的5种情况，其他全是true\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js         console.log(Boolean(''));         console.log(Boolean(0));         console.log(Boolean(NaN));         console.log(Boolean(null));         console.log(Boolean(undefined));       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-复杂数据类型也叫引用类型放在堆立面\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 复杂数据类型：也叫引用类型；放在堆立面。\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"object\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"运算符-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也称为操作符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"运算符两侧有留一个空格，便于阅读代码\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-算数运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 算数运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"+：加\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"-：减\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"*：乘\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/：除\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"%：取余   用于判断是否能够整除\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"浮点数有精度问题，不要直接判断两个浮点数是否相等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表达式和返回值\\r\\n- 由数字、运算符、变量等组成的式子，我们成为表达式\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-递增递减运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 递增递减运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"递增++\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前置递增：前自加，后返回值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后置递增：前返回值，后自加\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"递减--\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特性同递增\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"必须和变量搭配使用，简化代码\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前置与后置区别\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独使用时，运行结果相同\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"与其他代码使用时，执行结构不同\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用后置，且代码最好单独放一行，便于阅读代码\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-比较运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 比较运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小于：<\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"大于：>\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"大于等于：>=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小于等于：<=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"等于：==  (默认有隐式数据类型转换)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log(18 == '18');  //true\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不等于：!=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全等：=== !-\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求值和数据类型都一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log(18 == '18');  //false\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-逻辑运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 逻辑运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"与：&&\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"或：||\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非：!\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"短路运算（逻辑中断）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"当有多个表达式（值）时，左边的值可以确定运算，右边的表达式（值）不再计算\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-赋值运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 赋值运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"+=    -=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"*=    /=  %=\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-运算符优先级\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 运算符优先级\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. ()\\r\\n2. 一元运算符：++   --  !\\r\\n3. 算数运算符：先*  /   % 后 + -\\r\\n4. 关系运算符：>    >=  <   <=\\r\\n5. 相等运算符：==   !=  === !-\\r\\n6. 逻辑运算符: 先&& 后||\\r\\n7. 赋值运算符：=\\r\\n8. 逗号运算符：,\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"1. ()\\r\\n2. 一元运算符：++   --  !\\r\\n3. 算数运算符：先*  /   % 后 + -\\r\\n4. 关系运算符：>    >=  <   <=\\r\\n5. 相等运算符：==   !=  === !-\\r\\n6. 逻辑运算符: 先&& 后||\\r\\n7. 赋值运算符：=\\r\\n8. 逗号运算符：,\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"流程控制-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 流程控制\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"顺序结构\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分支结构\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"循环结构\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-顺序流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 顺序流程控制\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-分支流程控制if语句\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 分支流程控制if语句\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if else\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if else if  else if   else    : 比较值和范围值匹配\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-三元表达式\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 三元表达式\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"条件表达式 ? 表达式1 : 表达式2\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-分支流程控制switch语句\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 分支流程控制switch语句\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较值和特定的值匹配\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较值和特定的值必须全等(===),才执行对应的语句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"break如果不写，后面的语句不再判读case而继续执行语句，直至执行完switch中的所有语句或遇见break后退出。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-循环\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 循环\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for：可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"forEach：不可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-in：不可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-of：可遍历元素\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  var arr1 = [1, 2, 3, 4, 'huang', true, 3.2];\\r\\n  for (var i = 0; i < arr1.length; i++) {\\r\\n      console.log('for ' + arr1[i]);\\r\\n  }\\r\\n\\r\\n  arr1.forEach(element => {\\r\\n      console.log('forEach ' + element);\\r\\n  });\\r\\n\\r\\n  for (const key in arr1) {\\r\\n      if (Object.hasOwnProperty.call(arr1, key)) {\\r\\n          const element = arr1[key];\\r\\n          console.log('for-in ' + element);\\r\\n      }\\r\\n  }\\r\\n\\r\\n  for (const iterator of arr1) {\\r\\n      console.log('for-of ' + iterator);\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  var arr1 = [1, 2, 3, 4, 'huang', true, 3.2];\\r\\n  for (var i = 0; i < arr1.length; i++) {\\r\\n      console.log('for ' + arr1[i]);\\r\\n  }\\r\\n\\r\\n  arr1.forEach(element => {\\r\\n      console.log('forEach ' + element);\\r\\n  });\\r\\n\\r\\n  for (const key in arr1) {\\r\\n      if (Object.hasOwnProperty.call(arr1, key)) {\\r\\n          const element = arr1[key];\\r\\n          console.log('for-in ' + element);\\r\\n      }\\r\\n  }\\r\\n\\r\\n  for (const iterator of arr1) {\\r\\n      console.log('for-of ' + iterator);\\r\\n  }\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双重for\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"while\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"do while\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"continue break\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数组\"},\"children\":[{\"type\":\"text\",\"value\":\"数组-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概念\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一组数据的集合存放在单个变量下\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-创建数组\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 创建数组\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr = new Array();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr = \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组里面的数据用逗号分隔\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组元组可以是各种数据类型\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-获取数组元素\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 获取数组元素\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-新增数组元素\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 新增数组元素\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改length长度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过修改索引号的方式增加\\r\\n- 已有索引号时  -- 修改\\r\\n- 原来没有索引号    -- 增加\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数组的方法\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数组的方法\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"过滤方法:Array.prototype.filter()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\\r\\nconst result = words.filter(word => word.length > 6);\\r\\nconsole.log(result);\\r\\n// expected output: Array [\\\"exuberant\\\", \\\"destruction\\\", \\\"present\\\"]\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\\r\\nconst result = words.filter(word => word.length > 6);\\r\\nconsole.log(result);\\r\\n// expected output: Array [\\\"exuberant\\\", \\\"destruction\\\", \\\"present\\\"]\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"拼接字符串:Array.prototype.join()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const elements = ['Fire', 'Air', 'Water'];\\r\\n\\r\\nconsole.log(elements.join());\\r\\n// expected output: \\\"Fire,Air,Water\\\"\\r\\n\\r\\nconsole.log(elements.join(''));\\r\\n// expected output: \\\"FireAirWater\\\"\\r\\n\\r\\nconsole.log(elements.join('-'));\\r\\n// expected output: \\\"Fire-Air-Water\\\"\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"const elements = ['Fire', 'Air', 'Water'];\\r\\n\\r\\nconsole.log(elements.join());\\r\\n// expected output: \\\"Fire,Air,Water\\\"\\r\\n\\r\\nconsole.log(elements.join(''));\\r\\n// expected output: \\\"FireAirWater\\\"\\r\\n\\r\\nconsole.log(elements.join('-'));\\r\\n// expected output: \\\"Fire-Air-Water\\\"\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查找是否包含某元素:Array.prototype.indexOf()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];\\r\\n\\r\\nconsole.log(beasts.indexOf('bison'));\\r\\n// expected output: 1\\r\\n\\r\\n// start from index 2\\r\\nconsole.log(beasts.indexOf('bison', 2));\\r\\n// expected output: 4\\r\\n\\r\\nconsole.log(beasts.indexOf('giraffe'));\\r\\n// expected output: -1\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];\\r\\n\\r\\nconsole.log(beasts.indexOf('bison'));\\r\\n// expected output: 1\\r\\n\\r\\n// start from index 2\\r\\nconsole.log(beasts.indexOf('bison', 2));\\r\\n// expected output: 4\\r\\n\\r\\nconsole.log(beasts.indexOf('giraffe'));\\r\\n// expected output: -1\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查找某个元素，并获取元素的代理内存地址，可以直接对元素进行修改：Array.prototype.find()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  const findResult = this.goodslist.find(x => x.id == id)\\r\\n  if (findResult) {\\r\\n    console.log(findResult)\\r\\n    console.log(checked)\\r\\n    findResult.goods_state = checked\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  const findResult = this.goodslist.find(x => x.id == id)\\r\\n  if (findResult) {\\r\\n    console.log(findResult)\\r\\n    console.log(checked)\\r\\n    findResult.goods_state = checked\\r\\n  }\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"函数\"},\"children\":[{\"type\":\"text\",\"value\":\"函数-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概念-1\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"封装了一段可被重复调用的代码块\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"目的：让大量代码重复使用\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-使用-1\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用函数的时候，函数名要加()  eg:  sayHi()   getSum()\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-参数\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 参数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定时函数时，函数可以带参数也可以不带参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"形参：形式上的 参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实参：实际的参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数调用的时候，实参传递给形参\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果实参的个数多于形参的个数，会取到形参的个数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果实参的个数少于形参的个数，多余的形参定义为undefined\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"【建议】尽量让形参的个数与实参的个数相匹配\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-返回值\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 返回值\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只要函数体内遇到return，就把后面的结果返回给函数的调用者\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return会终止函数的执行，return后面的代码不会被执行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return只会返回一个值，如果写了多个值，返回最后一个值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以使用数组返回一组值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数没有return，则返回的是undefined\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-声明的方式\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 声明的方式\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. function（命名函数）\\r\\n    - 声明函数的关键字：function\\r\\n    - 函数名一般是动词  eg：sayHi   getSum\\r\\n    - 函数不调用自己不执行\\r\\n\\r\\n2. 函数表达式(匿名函数)\\r\\n    - var fun = function ()\\r\\n    - fun是变量名，不是函数名\\r\\n    - 函数表达式声明方式跟声明变量差不多，只不过变量里存的是函数   \\r\\n\\r\\n3. => 函数\\r\\n```js\\r\\n    var elements = [\\r\\n        'Hydrogen',\\r\\n        'Helium',\\r\\n        'Lithium',\\r\\n        'Beryllium'\\r\\n    ];\\r\\n    \\r\\n    elements.map(function(element) { \\r\\n        return element.length; \\r\\n    }); // 返回数组：[8, 6, 7, 9]\\r\\n    \\r\\n    // 上面的普通函数可以改写成如下的箭头函数\\r\\n    elements.map((element) => {\\r\\n        return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数只有一个参数时，可以省略参数的圆括号\\r\\n    elements.map(element => {\\r\\n    return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\\r\\n    elements.map(element => element.length); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 在这个例子中，因为我们只需要 `length` 属性，所以可以使用参数解构\\r\\n    // 需要注意的是字符串 `\\\"length\\\"` 是我们想要获得的属性的名称，而 `lengthFooBArX` 则只是个变量名，\\r\\n    // 可以替换成任意合法的变量名\\r\\n    elements.map(({ \\\"length\\\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\\r\\n```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"1. function（命名函数）\\r\\n    - 声明函数的关键字：function\\r\\n    - 函数名一般是动词  eg：sayHi   getSum\\r\\n    - 函数不调用自己不执行\\r\\n\\r\\n2. 函数表达式(匿名函数)\\r\\n    - var fun = function ()\\r\\n    - fun是变量名，不是函数名\\r\\n    - 函数表达式声明方式跟声明变量差不多，只不过变量里存的是函数   \\r\\n\\r\\n3. => 函数\\r\\n```js\\r\\n    var elements = [\\r\\n        'Hydrogen',\\r\\n        'Helium',\\r\\n        'Lithium',\\r\\n        'Beryllium'\\r\\n    ];\\r\\n    \\r\\n    elements.map(function(element) { \\r\\n        return element.length; \\r\\n    }); // 返回数组：[8, 6, 7, 9]\\r\\n    \\r\\n    // 上面的普通函数可以改写成如下的箭头函数\\r\\n    elements.map((element) => {\\r\\n        return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数只有一个参数时，可以省略参数的圆括号\\r\\n    elements.map(element => {\\r\\n    return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\\r\\n    elements.map(element => element.length); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 在这个例子中，因为我们只需要 `length` 属性，所以可以使用参数解构\\r\\n    // 需要注意的是字符串 `\\\"length\\\"` 是我们想要获得的属性的名称，而 `lengthFooBArX` 则只是个变量名，\\r\\n    // 可以替换成任意合法的变量名\\r\\n    elements.map(({ \\\"length\\\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\\r\\n```\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-arguments\"},\"children\":[{\"type\":\"text\",\"value\":\"6. arguments\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只有函数才有arguments对象，而且是每个函数都内置好了这个对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"arguments中存储了传递的所有实参\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"展示形式是一个伪数组\\r\\n- 不是真正意义上的数组\\r\\n- 具有数组的length属性\\r\\n- 按照索引的方式进行存储\\r\\n- 它没有真正数组的一些方法pop() push()等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以按照数组的方式遍历arguments\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-函数可以调用另外一个函数\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 函数可以调用另外一个函数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"跟函数的书写顺序无关\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"作用域-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 作用域\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"就是代码名字在某个范围内起作用和效果\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"目的:提高程序的可靠性/减少命名冲突\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js的作用域(es6)之前:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局作用域:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"整个script标签\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独的js文件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"局部作用域\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在函数内部\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"代码的名字只在函数内部起作用\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"没有块级作用域\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js的作用域(es6)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有块级作用域\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-变量的作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 变量的作用域\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局变量\\r\\n- 在全局作用域下var声明的变量；在全局下都可以使用\\r\\n- 在函数内部没有声明直接使用的变量，也是全局变量\\r\\n- 只有浏览器关闭的时候才会销毁，比较占内存\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"局部变量\\r\\n- 在局部作用域下var声明的变量（在函数内部的变量）；仅在局部作用域下可以使用\\r\\n- 函数的形参也可以看做是局部变量\\r\\n- 程序执行完毕就会销毁，节约内存资源\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-现阶段js没有块级\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 现阶段，js没有块级\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-作用域链\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 作用域链\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只要是代码，就至少有一个作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"写在函数内部的是局部作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果函数中还有函数，那么在这个作用域中就可以诞生一个作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"根据内部函数可以访问外部函数变量的这种机制，用链式查找决定决定哪些数据能被内部函数访问，就称为作用域链。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"就近原则\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"预解析\"},\"children\":[{\"type\":\"text\",\"value\":\"预解析-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-js引擎运行js分为两步-预解析-代码执行\"},\"children\":[{\"type\":\"text\",\"value\":\"1. js引擎运行js分为两步：    预解析  代码执行\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js引擎把js里面所有的var还有function提升到当前作用域的最前面\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按照代码书写的顺序从上往下执行\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-变量预解析变量提升和函数预解析函数提升\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 变量预解析（变量提升）和函数预解析（函数提升）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量提升\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"把所有的变量声明提升到当前作用域最前面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只提升声明，不提升赋值\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数提升\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"把所有的命名函数声明提升到当前作用域最前面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只提升声明，不调用函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"匿名函数声明不提升\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"对象\"},\"children\":[{\"type\":\"text\",\"value\":\"对象-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概述-1\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对象是一组无序的相关属性和方法的集合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串、数值、数组、函数都是对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"属性：事物的特征，在对象中用属性来表示（常用名词）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方法：事物的行为，在对象中用方法来表示（常用动词）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为什么需要对象？\\r\\n- 保存一个值时，可以使用变量，保存多个值(一组值)时，可以使用数组。如果要保存一个人的完整信息呢?\\r\\n- JS中的对象表达结构更清晰,更强大。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-创建对象的三种方式\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 创建对象的三种方式\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用字面量    {}\\r\\n- 里面的属性或者方法采用键值对的方式\\r\\n- 多个属性或者方法中间用逗号隔开\\r\\n- 方法冒号后面跟的是一个匿名函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用new Object\\r\\n- var obj = new Object();\\r\\n- obj.uname = 'choudan';\\r\\n- obj.age = 3;\\r\\n- obj.sex = '男';\\r\\n- obj.sayHi = function(){}\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用构造函数\\r\\n- 前面两种一次只能创建一个对象，创建多个需要复制大量重复代码\\r\\n- 构造函数就是把对象里面的一些相同的属性和方法抽象出来封装到函数里面\\r\\n- 构造函数首字母要大写【规范】\\r\\n- 构造函数不需要return就可以返回结果\\r\\n- 调用构造函数，必须使用new\\r\\n- 方法和函数前面必须添加：this.\\r\\n```js\\r\\nfunction Star(uname, age, sex) {\\r\\nthis.name = uname;\\r\\nthis.age = age;\\r\\nthis.sex = sex;\\r\\nthis.sing = function (sang) {\\r\\nconsole.log(sang);\\r\\n}\\r\\n}\\r\\nvar ldh = new Star('刘德华', 18, '男');\\r\\nconsole.log(typeof (ldh));\\r\\nconsole.log(ldh.name);\\r\\nconsole.log(ldh.sex);\\r\\nldh.sing('冰雨');\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"      var zxy = new Star('张学友', 28, '男');\\r\\n      console.log(zxy.name);\\r\\n      console.log(zxy.sex);\\r\\n      zxy.sing('李香兰')\\r\\n  ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"      var zxy = new Star('张学友', 28, '男');\\r\\n      console.log(zxy.name);\\r\\n      console.log(zxy.sex);\\r\\n      zxy.sing('李香兰')\\r\\n  ```\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"...展开对象运算符\\r\\n```js\\r\\nvar obj = {\\r\\n'name': 'zs',\\r\\n'gender': 'nan',\\r\\n'age': 18\\r\\n}\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  obj2 = {\\r\\n      ...obj,\\r\\n      'city': 'shangqiu'\\r\\n  }\\r\\n  \\r\\n  // console(...obj)     // 报错\\r\\n  console.log(obj)\\r\\n  console.log(obj2)\\r\\n  ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  obj2 = {\\r\\n      ...obj,\\r\\n      'city': 'shangqiu'\\r\\n  }\\r\\n  \\r\\n  // console(...obj)     // 报错\\r\\n  console.log(obj)\\r\\n  console.log(obj2)\\r\\n  ```\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-使用\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的属性1：对象名.属性名        obj.uname\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的属性2：对象名\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"'属性名'\"}]},{\"type\":\"text\",\"value\":\"     obj\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"'uname'\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的方法1：对象名.方法名        obj.sayHi()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的方法2：对象名\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"'方法名'\"}]},{\"type\":\"text\",\"value\":\"   obj\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"'sayHi'\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-变量属性函数方法的区别\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 变量、属性、函数、方法的区别\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量、属性相同点：都是用来存储数据的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量、属性不同点：\\r\\n- 变量：单独声明并赋值，使用的时候直接写变量名，单独存在\\r\\n- 属性：在对象里面的，不需要声明的，使用的时候必须是：对象名.属性名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数、方法的相同点：都是实现某种功能，做某件事\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数、方法的不同点：\\r\\n- 函数：单独声明并调用，使用的时候直接写函数名，单独存在\\r\\n- 方法：在对象里面的，调用的时候必须是：对象名.属性名\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-new关键字\"},\"children\":[{\"type\":\"text\",\"value\":\"3. new关键字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用new关键字创建对象的过程，也成为对象的实例化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"new构造函数可以在内存中创建了一个空的对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在执行时会做四件事情:\\r\\n1. 在内存中创建一个新的空对象。\\r\\n2. 让 this 指向这个新的对象。\\r\\n3. 执行构造函数里面的代码，给这个新对象添加属性和方法。\\r\\n4. 返回这个新对象（所以构造函数里面不需要return)。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-遍历对象属性\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 遍历对象属性\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-in\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       for(var k in zxy){}       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js内置对象\"},\"children\":[{\"type\":\"text\",\"value\":\"js内置对象-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js中对象分为三种：自定义对象  内置对象    浏览器对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自定义对象、内置对象属于ECMScript     浏览器对象属于JS独有的，属于JS API内容\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-内置对象\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 内置对象\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-查文档\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 查文档\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://developer.mozilla.org/zh-CN/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"https://developer.mozilla.org/zh-CN/\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-math对象\"},\"children\":[{\"type\":\"text\",\"value\":\"3. Math对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math不是一个构造函数，所有的属性与方法都是静态的。所以不需要new来调用，而是直接使用里面的属性和方法即可。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.PI\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.max()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.min()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.abs()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.floor()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.ceil()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.round()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.random()\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-日期对象\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 日期对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date()日期对象 是有一个构造函数，必须使用new来调用创建日期对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果没有参数，返回当前系统的当前时间\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"参数常用的写法\\r\\n- 2022,7,3              var date1 = new Date(2019, 10, 1);\\r\\n- '2022-10-3 22:30:20'  var date2 = new Date('2022-7-3 22:30:20');\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getFullYear()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getMonth()    //月份 返回的是0~11，用的时候用要+1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getDate() //返回几日？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getDay()  //返回星期几\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getHours()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getMinutes()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getSeconds()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getTime() //现在时间距离1970.1.1总的毫秒数(时间戳)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"valueOf() //现在时间距离1970.1.1总的毫秒数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var date1 = +new Date(); //现在时间距离1970.1.1总的毫秒数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date.now()    //H5新增的获得总的毫秒数\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数组对象\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数组对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array();   //创建了一个空数组\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array(2);  //2表示数组长度为2，里面有两个空的数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array(2, 3); //等价与\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2,3\"}]},{\"type\":\"text\",\"value\":\",表示创建的数组里面有2个元素，分别为2、3\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"检测是否为数组,是否为什么对象？\\r\\n- isntanceof        console.log(arr instanceof Array);\\r\\n- Array.isArray()   console.log(Array.isArray(arr));\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"添加删除数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"push()\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 在数组的末尾，添加一个或者多个数组元素\\r\\n- push()参数直接写数组元素就可以了\\r\\n- 返回值：新数组长度\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"unshift()\\r\\n- 在数组的开头，添加一个或者多个数组元素\\r\\n- unshift()参数直接写数组元素就可以了\\r\\n- 返回值：新数组长度\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pop()\\r\\n- 可以删除数组的最后一个元素，一次只能删一个\\r\\n- 没有参数\\r\\n- 返回值：删除的元素\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"shift()\\r\\n- 可以删除数组的第一个元素，一次只能删一个\\r\\n- 没有参数\\r\\n- 返回值：删除的元素\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"indexOf()\\r\\n- 查找给定元素的第一个索引\\r\\n- 不存在则返回 -1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"lastIndexOf()\\r\\n- 查找给定元素的最后一个索引\\r\\n- 不存在则返回 -1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组转换为字符串\\r\\n- toString()    无参数，采用逗号分隔\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js           console.log(arr.toString());           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- join()        有参数，默认采用逗号分隔\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js           console.log(arr.join(''));           console.log(arr.join('-'));           console.log(arr.join('&'));           \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"concat()      连接两个或多个数组，不影响原数组，返回一个新的数组\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slice()\\r\\n- 数组截取slice(begin,end)\\r\\n- 返回被截取项目的新数组\\r\\n- 原数组不会改变\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"splice()\\r\\n- 数组删除splice(第几个开始，要删除的个数)\\r\\n- 返回被删除项目的新数组\\r\\n- 会影响原数组\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-字符串对象\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 字符串对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基本包装类型：把简单数据类型包装成了复杂数据类型，这个基本数据类型就有了属性和方法：js提供了三种基本包装类型：String、Number、Boolean。实现形式如下：\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       var temp = new String('andy');       str = temp;       temp = null;       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串具有不可变性：因为字符串不可变，所以不要大量的拼接字符串\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串所有的方法，都不会修改字符本身，操作完成会返回一个新的字符串\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"indexOf(要查找的字符,【起始的位置】)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"charAt(index) 根据位置返回字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"charCodeAt(index) 根据位置返回字符的ASCII。判断用户按下了哪个键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"str\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index\"}]},{\"type\":\"text\",\"value\":\"    H5新增的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"concat(str1,str2,str3,...)    拼接字符串，实际开发中用+拼接比较多\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"substr(start,length)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slice(start,end)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"substring(start,end)  //基本和slice相同，但不接收负值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"replace('被替换的字符','替换为的字符')\\r\\n- 只会替换第一个匹配到的字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"split('分隔符')\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 把字符串转换为数组\\r\\n- 不给参数为空，字符转换为1个元素的数组\\r\\n- 参数为''，将每个字符转换为数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"RegExpObject.exec(string)  用于检索字符串中的正则表达式的匹配\\r\\n- 返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为null\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"web-apis\"},\"children\":[{\"type\":\"text\",\"value\":\"Web APIs-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-web-apis和js基础关联性\"},\"children\":[{\"type\":\"text\",\"value\":\"1. Web APIs和JS基础关联性\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-api和web-api\"},\"children\":[{\"type\":\"text\",\"value\":\"2. API和Web API\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Web API：浏览器的API，一套操作浏览器功能和页面元素的API（DOM和BOM）\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-dom\"},\"children\":[{\"type\":\"text\",\"value\":\"3. DOM\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. 简介\\r\\n    - Document Object Model\\r\\n    - W3C组织推荐的处理扩展标记语言（HTML和XML）的接口\\r\\n    - DOM树（文档、元素、节点都看做是对象）：\\r\\n        - 文档：一个页面就是一个文档，DOM中使用document表示\\r\\n        - 元素：页面中的所有标签都是元素，DOM中使用element表示\\r\\n        - 节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n\\r\\n2. 获取元素\\r\\n    - 根据ID获取\\r\\n        - getElementById()\\r\\n        - 参数id是大小写敏感的字符串\\r\\n        - 返回的是一个元素对象\\r\\n        - console.dir()打印元素对象，更好的查看里面的属性和方法\\r\\n        ```js\\r\\n            var time = document.getElementById('time');\\r\\n            console.log(time);\\r\\n        ```\\r\\n    - 根据标签名获取\\r\\n        - getElementsByTagName()    返回带有指定标签名的对象的集合\\r\\n        ```js\\r\\n        var ol = document.getElementsByTagName('ol');\\r\\n        console.log(ol[0].getElementsByTagName('li'));\\r\\n        ```\\r\\n    - 通过HTML5新增的方法获取\\r\\n        - getElementsByClassName()\\r\\n        - querySelector()       返回选择器的第一个对象\\r\\n        - querySelectorAll()    返回选择器的所有对象\\r\\n        ```js\\r\\n        var boxs = document.getElementsByClassName('box');\\r\\n        console.log(boxs);\\r\\n\\r\\n        var firstBox = document.querySelector('.box');\\r\\n        console.log(firstBox);\\r\\n        console.dir(firstBox)\\r\\n\\r\\n        var nav = document.querySelector('#nav');\\r\\n        console.log(nav);\\r\\n        console.dir(nav)\\r\\n\\r\\n        var li  = document.querySelector('li');\\r\\n        console.log(li);\\r\\n\\r\\n        var allbox = document.querySelectorAll('.box');\\r\\n        console.log(allbox);\\r\\n        ```\\r\\n    - 特殊元素获取\\r\\n        - body元素获取: \\r\\n        - html元素获取：\\r\\n        ```js\\r\\n        var bodyEle = document.body;\\r\\n        var htmlEle = document.documentElement;\\r\\n        ```\\r\\n    - 因为文档页面从上往下加载，所以先得有标签，所以我们script写到标签的下面\\r\\n\\r\\n3. 事件基础\\r\\n    - JS使我们有能力创建动态页面，而事件是可以被JS侦测到的行为。\\r\\n    - 简单理解：触发————响应机制\\r\\n    - 页面中的每个元素都可以触发事件\\r\\n    - 事件由三部分组成，事件三要素\\r\\n        - 1. 事件源：事件被触发的对象\\r\\n        - 2. 事件类型：如何触发 什么事件 比如点击鼠标（onclick) 还是鼠标经过 还是键盘按下   onfocus/onblur\\r\\n        - 3. 事件处理程序：通过一个函数赋值的方式完成\\r\\n\\r\\n4. 操作元素\\r\\n    - 更改元素内容\\r\\n        - innerText：不识别html标签 非标准  去除空格和换行\\r\\n        - innerHTML【W3C标准】：识别html标签\\r\\n        - 区别：这两个属性是可读写的，可以获取、写入元素里面的内容\\r\\n    - 元素的属性操作\\r\\n    - 表单的属性操作：type、value、checked、selected、disabled\\r\\n    - 样式属性操作\\r\\n        - element.style     行内样式操作\\r\\n        - element.className 类名样式操作\\r\\n        - js里面的样式采取驼峰命名法(自动转换css中的样式名为驼峰命名)：font-size -> fontSize    background-color -> backgroundColor\\r\\n        - js修改style样式操作，产生的是行内样式，css权重比较高\\r\\n    - 排他思想\\r\\n        - 所有元素全部清除样式\\r\\n        - 给当前元素设置样式\\r\\n    - 属性操作\\r\\n        - 获取属性值\\r\\n            - element.属性                  ：无法获取自定义属性\\r\\n            - element.getAttribute('属性')  ：可以获取自定义属性\\r\\n        - 设置属性值\\r\\n            - element.属性 = '值'               ：只能设置css内置属性\\r\\n            - element.setAttribute('属性','值') ：可以设置css内置属性和自定义属性\\r\\n        - 移除属性\\r\\n            - removeAttribute('属性')\\r\\n        - H5的自定义属性\\r\\n            - 是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。\\r\\n            - H5规定自定义属性data-开头作为属性名并赋值。原因：有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。\\r\\n            - H5新增的获取自定义属性的方法：div[3].dataset.index  (必须是以data-开头，仅IE11以上才支持)\\r\\n            ```js\\r\\n                // css中自定义的以\\\"-\\\"连接的变量，用此法获取时，需转换成驼峰命名法\\r\\n                div[3].dataset.index\\r\\n                等同：\\r\\n                div[3].getAttribute('data-index')\\r\\n            ```\\r\\n\\r\\n5. 节点操作\\r\\n    - 获取元素的方法之一\\r\\n    - 利用节点的层次关系获取元素\\r\\n    - 网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n    - HTML DOM树中所有的节点均可通过JavaScript访问，所有HTML元素（节点）均可被修改，也可以创建或删除。\\r\\n    - 节点至少拥有三个基本属性：nodeType（节点类型）、nodeName（节点名称）、nodeValue（节点值）\\r\\n    - 节点类型：nodeType\\r\\n        - 元素节点【常用】：1\\r\\n        - 属性节点：2\\r\\n        - 文本节点（文字、空格、换行等）：3\\r\\n    - 父节点：node.parentNode\\r\\n        - 得到的是离元素最近的父级节点（亲爸爸），如果找不到则返回null\\r\\n    - 子节点【很少用】：parentNode.childNodes\\r\\n        - 得到的是所有的子节点（包括元素节点、文本节点等）\\r\\n        - 如果只想要获得立面的元素节点，则需要专门处理。所以一般不提倡使用childNodes\\r\\n    - 字元素节点【常用、非标准】：parentNode.children\\r\\n        - 获取所有的子元素节点\\r\\n    - 第一个、最后一个子节点\\r\\n        - firstChild：第一个子节点，不管是文本节点还是元素节点\\r\\n        - lastChild：最后一个子节点，不管是文本节点还是元素节点\\r\\n        - firstElementChild【IE9以上才支持】：第一个子元素节点\\r\\n        - lastElementChild【IE9以上才支持】：最后一个子元素节点\\r\\n        - ul.children[0])：第一个子元素节点\\r\\n        - ul.children[ul.children.length - 1])：最后一个子元素节点\\r\\n    - 兄弟节点\\r\\n        - node.nextSibling：返回当前元素的下一个兄弟节点(不管时文本还是元素等)，找不到则返回null。\\r\\n        - node.previousSibling\\r\\n        - node.nextElementSibling【IE9以上才支持】\\r\\n        - node.previousElementSibling【IE9以上才支持】\\r\\n    - 创建、添加节点\\r\\n        - var li = document.createElement('li');\\r\\n        - node.appendChild(child);  在后面追加元素  node:父级      child:子级\\r\\n        - node.insertBefore(li, ul.children[0]);\\r\\n    - 删除节点\\r\\n        - node.removeChild()\\r\\n    - 复制节点\\r\\n        - node.cloneNode()  参数为空或者false，则是浅拷贝，只复制节点本身，不复制立面的子节点；括号内为true，则为深拷贝，会复制节点本身和里面所有的子节点.\\r\\n    - 三种动态创建元素的区别\\r\\n        - 1. document.write()   创建元素.\\r\\n            - document.write('<div>123</div>');\\r\\n            - 如果页面文档流加载完毕，再调用此方法会导致页面重绘\\r\\n            - 利用数组\\r\\n        - 2. innerHTML\\r\\n            - 拼接字符串创建：td.innerHTML += '<a href=\\\"javascript:;\\\">删除</a>';\\r\\n            - 数组存储字符串然后转换为拼接字符串：for -> arr.push('<a href=\\\"javascript:;\\\">删除</a>') -> arr.join('')\\r\\n            - 创建多个元素效率更高（不要采用拼接字符串，应采用数组存储字符串然后转换为拼接字符串），结构稍微复杂\\r\\n        - 3. document.createElement()\\r\\n            - var td = document.createElement('td');\\r\\n            - 创建多个元素效率稍微低一点点，但是结构更清晰。\\r\\n6. DOM重点核心\\r\\n    - 文档对象模型( Document Object Model，简称DOM )，是W3C组织推荐的处理可扩展标记语言(HTML或者XML)的标准编程接口。\\r\\n    - W3C已经定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容、结构和样式。\\r\\n        - 1. 对于JavaScript，为了能够使JavaScript操作HTML，JavaScript就有了一套自己的dom编程接口。\\r\\n        - 2. 对于HTML,dom使得html形成一棵dom树.包含文档、元素、节点。\\r\\n    - 关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。\\r\\n        - 创建\\r\\n            - 1. document.write\\r\\n            - 2. element.innerHTML\\r\\n            - 3. document.createElement\\r\\n        - 增\\r\\n            - 1. appendChild\\r\\n            - 2. inertBebore\\r\\n        - 删除\\r\\n            - removeChild\\r\\n        - 改：  修改dom的元素属性，dom元素的内容、属性、表单的值的等\\r\\n            - 1. 修改元素属性：src、hrf、title等\\r\\n            - 2. 修改普通元素的内容：innerHTML、innerText\\r\\n            - 3. 修改表单元素：value、type、disabled等\\r\\n            - 4. 修改元素样式：style、className\\r\\n        - 查\\r\\n            - 1. DOM提供的API方法：getELementById、getElementsByTagName古老用法【不太推荐】\\r\\n            - 2. H5提供的新方法：querySelector、querySelectorAll    【推荐】\\r\\n            - 3. 利用节点操作获取元素：父（parentNode）、子（children）、兄（previousElementSibling、nextElementSibling）【推荐】\\r\\n        - 属性操作：主要针对自定义属性\\r\\n            - 1. setAttribute：设置dom的属性值\\r\\n            - 2. getAttribute：得到dom的属性值\\r\\n            - 3. removeAttribute：移除属性\\r\\n        - 事件操作：给元素注册事件\\r\\n            - 1. onclick        鼠标点击左键触发\\r\\n            - 2. onmouseover    鼠标经过触发:mouseover鼠标经过自身盒子会触发，经过子盒子还会触发。mouseenter只会经过自身盒子触发，因为mouseenter不会冒泡\\r\\n            - 3. onmouseout     鼠标离开触发\\r\\n            - 4. onfocus        获得鼠标焦点触发\\r\\n            - 5. onblur         失去鼠标焦点触发\\r\\n            - 6. onmousemove    鼠标移动触发\\r\\n            - 7. onmouseup      鼠标弹起触发\\r\\n            - 8. onmousedown    鼠标按下触发\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 简介\\r\\n    - Document Object Model\\r\\n    - W3C组织推荐的处理扩展标记语言（HTML和XML）的接口\\r\\n    - DOM树（文档、元素、节点都看做是对象）：\\r\\n        - 文档：一个页面就是一个文档，DOM中使用document表示\\r\\n        - 元素：页面中的所有标签都是元素，DOM中使用element表示\\r\\n        - 节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n\\r\\n2. 获取元素\\r\\n    - 根据ID获取\\r\\n        - getElementById()\\r\\n        - 参数id是大小写敏感的字符串\\r\\n        - 返回的是一个元素对象\\r\\n        - console.dir()打印元素对象，更好的查看里面的属性和方法\\r\\n        ```js\\r\\n            var time = document.getElementById('time');\\r\\n            console.log(time);\\r\\n        ```\\r\\n    - 根据标签名获取\\r\\n        - getElementsByTagName()    返回带有指定标签名的对象的集合\\r\\n        ```js\\r\\n        var ol = document.getElementsByTagName('ol');\\r\\n        console.log(ol[0].getElementsByTagName('li'));\\r\\n        ```\\r\\n    - 通过HTML5新增的方法获取\\r\\n        - getElementsByClassName()\\r\\n        - querySelector()       返回选择器的第一个对象\\r\\n        - querySelectorAll()    返回选择器的所有对象\\r\\n        ```js\\r\\n        var boxs = document.getElementsByClassName('box');\\r\\n        console.log(boxs);\\r\\n\\r\\n        var firstBox = document.querySelector('.box');\\r\\n        console.log(firstBox);\\r\\n        console.dir(firstBox)\\r\\n\\r\\n        var nav = document.querySelector('#nav');\\r\\n        console.log(nav);\\r\\n        console.dir(nav)\\r\\n\\r\\n        var li  = document.querySelector('li');\\r\\n        console.log(li);\\r\\n\\r\\n        var allbox = document.querySelectorAll('.box');\\r\\n        console.log(allbox);\\r\\n        ```\\r\\n    - 特殊元素获取\\r\\n        - body元素获取: \\r\\n        - html元素获取：\\r\\n        ```js\\r\\n        var bodyEle = document.body;\\r\\n        var htmlEle = document.documentElement;\\r\\n        ```\\r\\n    - 因为文档页面从上往下加载，所以先得有标签，所以我们script写到标签的下面\\r\\n\\r\\n3. 事件基础\\r\\n    - JS使我们有能力创建动态页面，而事件是可以被JS侦测到的行为。\\r\\n    - 简单理解：触发————响应机制\\r\\n    - 页面中的每个元素都可以触发事件\\r\\n    - 事件由三部分组成，事件三要素\\r\\n        - 1. 事件源：事件被触发的对象\\r\\n        - 2. 事件类型：如何触发 什么事件 比如点击鼠标（onclick) 还是鼠标经过 还是键盘按下   onfocus/onblur\\r\\n        - 3. 事件处理程序：通过一个函数赋值的方式完成\\r\\n\\r\\n4. 操作元素\\r\\n    - 更改元素内容\\r\\n        - innerText：不识别html标签 非标准  去除空格和换行\\r\\n        - innerHTML【W3C标准】：识别html标签\\r\\n        - 区别：这两个属性是可读写的，可以获取、写入元素里面的内容\\r\\n    - 元素的属性操作\\r\\n    - 表单的属性操作：type、value、checked、selected、disabled\\r\\n    - 样式属性操作\\r\\n        - element.style     行内样式操作\\r\\n        - element.className 类名样式操作\\r\\n        - js里面的样式采取驼峰命名法(自动转换css中的样式名为驼峰命名)：font-size -> fontSize    background-color -> backgroundColor\\r\\n        - js修改style样式操作，产生的是行内样式，css权重比较高\\r\\n    - 排他思想\\r\\n        - 所有元素全部清除样式\\r\\n        - 给当前元素设置样式\\r\\n    - 属性操作\\r\\n        - 获取属性值\\r\\n            - element.属性                  ：无法获取自定义属性\\r\\n            - element.getAttribute('属性')  ：可以获取自定义属性\\r\\n        - 设置属性值\\r\\n            - element.属性 = '值'               ：只能设置css内置属性\\r\\n            - element.setAttribute('属性','值') ：可以设置css内置属性和自定义属性\\r\\n        - 移除属性\\r\\n            - removeAttribute('属性')\\r\\n        - H5的自定义属性\\r\\n            - 是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。\\r\\n            - H5规定自定义属性data-开头作为属性名并赋值。原因：有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。\\r\\n            - H5新增的获取自定义属性的方法：div[3].dataset.index  (必须是以data-开头，仅IE11以上才支持)\\r\\n            ```js\\r\\n                // css中自定义的以\\\"-\\\"连接的变量，用此法获取时，需转换成驼峰命名法\\r\\n                div[3].dataset.index\\r\\n                等同：\\r\\n                div[3].getAttribute('data-index')\\r\\n            ```\\r\\n\\r\\n5. 节点操作\\r\\n    - 获取元素的方法之一\\r\\n    - 利用节点的层次关系获取元素\\r\\n    - 网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n    - HTML DOM树中所有的节点均可通过JavaScript访问，所有HTML元素（节点）均可被修改，也可以创建或删除。\\r\\n    - 节点至少拥有三个基本属性：nodeType（节点类型）、nodeName（节点名称）、nodeValue（节点值）\\r\\n    - 节点类型：nodeType\\r\\n        - 元素节点【常用】：1\\r\\n        - 属性节点：2\\r\\n        - 文本节点（文字、空格、换行等）：3\\r\\n    - 父节点：node.parentNode\\r\\n        - 得到的是离元素最近的父级节点（亲爸爸），如果找不到则返回null\\r\\n    - 子节点【很少用】：parentNode.childNodes\\r\\n        - 得到的是所有的子节点（包括元素节点、文本节点等）\\r\\n        - 如果只想要获得立面的元素节点，则需要专门处理。所以一般不提倡使用childNodes\\r\\n    - 字元素节点【常用、非标准】：parentNode.children\\r\\n        - 获取所有的子元素节点\\r\\n    - 第一个、最后一个子节点\\r\\n        - firstChild：第一个子节点，不管是文本节点还是元素节点\\r\\n        - lastChild：最后一个子节点，不管是文本节点还是元素节点\\r\\n        - firstElementChild【IE9以上才支持】：第一个子元素节点\\r\\n        - lastElementChild【IE9以上才支持】：最后一个子元素节点\\r\\n        - ul.children[0])：第一个子元素节点\\r\\n        - ul.children[ul.children.length - 1])：最后一个子元素节点\\r\\n    - 兄弟节点\\r\\n        - node.nextSibling：返回当前元素的下一个兄弟节点(不管时文本还是元素等)，找不到则返回null。\\r\\n        - node.previousSibling\\r\\n        - node.nextElementSibling【IE9以上才支持】\\r\\n        - node.previousElementSibling【IE9以上才支持】\\r\\n    - 创建、添加节点\\r\\n        - var li = document.createElement('li');\\r\\n        - node.appendChild(child);  在后面追加元素  node:父级      child:子级\\r\\n        - node.insertBefore(li, ul.children[0]);\\r\\n    - 删除节点\\r\\n        - node.removeChild()\\r\\n    - 复制节点\\r\\n        - node.cloneNode()  参数为空或者false，则是浅拷贝，只复制节点本身，不复制立面的子节点；括号内为true，则为深拷贝，会复制节点本身和里面所有的子节点.\\r\\n    - 三种动态创建元素的区别\\r\\n        - 1. document.write()   创建元素.\\r\\n            - document.write('<div>123</div>');\\r\\n            - 如果页面文档流加载完毕，再调用此方法会导致页面重绘\\r\\n            - 利用数组\\r\\n        - 2. innerHTML\\r\\n            - 拼接字符串创建：td.innerHTML += '<a href=\\\"javascript:;\\\">删除</a>';\\r\\n            - 数组存储字符串然后转换为拼接字符串：for -> arr.push('<a href=\\\"javascript:;\\\">删除</a>') -> arr.join('')\\r\\n            - 创建多个元素效率更高（不要采用拼接字符串，应采用数组存储字符串然后转换为拼接字符串），结构稍微复杂\\r\\n        - 3. document.createElement()\\r\\n            - var td = document.createElement('td');\\r\\n            - 创建多个元素效率稍微低一点点，但是结构更清晰。\\r\\n6. DOM重点核心\\r\\n    - 文档对象模型( Document Object Model，简称DOM )，是W3C组织推荐的处理可扩展标记语言(HTML或者XML)的标准编程接口。\\r\\n    - W3C已经定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容、结构和样式。\\r\\n        - 1. 对于JavaScript，为了能够使JavaScript操作HTML，JavaScript就有了一套自己的dom编程接口。\\r\\n        - 2. 对于HTML,dom使得html形成一棵dom树.包含文档、元素、节点。\\r\\n    - 关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。\\r\\n        - 创建\\r\\n            - 1. document.write\\r\\n            - 2. element.innerHTML\\r\\n            - 3. document.createElement\\r\\n        - 增\\r\\n            - 1. appendChild\\r\\n            - 2. inertBebore\\r\\n        - 删除\\r\\n            - removeChild\\r\\n        - 改：  修改dom的元素属性，dom元素的内容、属性、表单的值的等\\r\\n            - 1. 修改元素属性：src、hrf、title等\\r\\n            - 2. 修改普通元素的内容：innerHTML、innerText\\r\\n            - 3. 修改表单元素：value、type、disabled等\\r\\n            - 4. 修改元素样式：style、className\\r\\n        - 查\\r\\n            - 1. DOM提供的API方法：getELementById、getElementsByTagName古老用法【不太推荐】\\r\\n            - 2. H5提供的新方法：querySelector、querySelectorAll    【推荐】\\r\\n            - 3. 利用节点操作获取元素：父（parentNode）、子（children）、兄（previousElementSibling、nextElementSibling）【推荐】\\r\\n        - 属性操作：主要针对自定义属性\\r\\n            - 1. setAttribute：设置dom的属性值\\r\\n            - 2. getAttribute：得到dom的属性值\\r\\n            - 3. removeAttribute：移除属性\\r\\n        - 事件操作：给元素注册事件\\r\\n            - 1. onclick        鼠标点击左键触发\\r\\n            - 2. onmouseover    鼠标经过触发:mouseover鼠标经过自身盒子会触发，经过子盒子还会触发。mouseenter只会经过自身盒子触发，因为mouseenter不会冒泡\\r\\n            - 3. onmouseout     鼠标离开触发\\r\\n            - 4. onfocus        获得鼠标焦点触发\\r\\n            - 5. onblur         失去鼠标焦点触发\\r\\n            - 6. onmousemove    鼠标移动触发\\r\\n            - 7. onmouseup      鼠标弹起触发\\r\\n            - 8. onmousedown    鼠标按下触发\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"事件高级\"},\"children\":[{\"type\":\"text\",\"value\":\"事件高级-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-注册事件绑定事件\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 注册事件（绑定事件）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用on开头的事件\\r\\n- 注册事件的唯一性\\r\\n- 同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数将会覆盖前面注册的处理函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"addEventListener()    【IE9之前不支持】\\r\\n- eventTarget.addEventListener(type,listener\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\",useCapture\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- type：事件类型字符串，比如click、mouseover，注意这里不要带on\\r\\n- listener：事件处理函数，事件发生时，会调用该监听函数\\r\\n- useCapture：可选参数，是一个布尔值，默认是false。\\r\\n- 同一个元素、同一个事件可以添加多个监听器\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"attachEvent()【IE9之前的IE用此法】\\r\\n- eventTarget.attachEvent(eventNameWithOn,callback)\\r\\n- 事件类型字符串，比如click、mouseover，这里要带on\\r\\n- 事件处理函数，当目标触发事件时回调函数被调用\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-删除事件解绑事件\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 删除事件（解绑事件）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"event.Target = null;\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       divs[0].onclick = null;       divs[1].removeEventListener('click', fn);       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-dom事件流\"},\"children\":[{\"type\":\"text\",\"value\":\"3. DOM事件流\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件流描述的是从页面中接收事件的顺序。事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即DOM事件流。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分为3个阶段\\r\\n- 我们向水里面扔一块石头，首先它会有一个下降的过程，这个过程就可以理解为从最顶层向事件发生的最具体元素（目标点)的捕获过程;之后会产生泡泡，会在最低点（最具体元素）之后漂浮到水面上，这个过程相当于事件冒泡。\\r\\n- 1. 捕获阶段       ：事件捕获∶网景最早提出，由DOM最顶层节点开始，然后逐级向下传播到到最具体的元素接收的过程\\r\\n- 2. 当前目标阶段\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 3. 冒泡阶段       ：事件冒泡:IE最早提出，事件开始时由最具体的元素接收，然后逐级向上传播到到DOM最顶层节点的过程。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - 1. Js 代码中只能执行捕获或者冒泡其中的一个阶段。\\r\\n  - 2. onclick和attachEvent只能得到冒泡阶段。\\r\\n  - 3. addEventListener(type,listener[,useCapture])第三个参数如果是 true，表示在事件捕获阶段调用事件处理福序：document->html->body->father->son;  如果是false(不写默认就是false )，表示在事件冒泡阶段调用事件处理程序。\\r\\n  - 4. 实际开发中我们很少使用事件捕获，我们更关注事件冒泡。\\r\\n  - 5. 有些事件是没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave\\r\\n  - 6. 事件冒泡有时候会带来麻烦，有时候又会帮助很巧妙的做某些事件，我们后面讲解。\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  - 1. Js 代码中只能执行捕获或者冒泡其中的一个阶段。\\r\\n  - 2. onclick和attachEvent只能得到冒泡阶段。\\r\\n  - 3. addEventListener(type,listener[,useCapture])第三个参数如果是 true，表示在事件捕获阶段调用事件处理福序：document->html->body->father->son;  如果是false(不写默认就是false )，表示在事件冒泡阶段调用事件处理程序。\\r\\n  - 4. 实际开发中我们很少使用事件捕获，我们更关注事件冒泡。\\r\\n  - 5. 有些事件是没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave\\r\\n  - 6. 事件冒泡有时候会带来麻烦，有时候又会帮助很巧妙的做某些事件，我们后面讲解。\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-事件对象\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 事件对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"div.onclick = function(event){}\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"event 就是一个事件对象，写到侦听函数的小括号里面，当形参来看\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象只有有了事件才会存在，它是系统给我们自动创建的，不需要我们传递参数\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象是我们事件的一系列相关数据的集合跟事件相关的比如鼠标点击里面就包含了鼠标的相关信息，鼠标坐标啊，如果是键盘事件里面就包含的键盘事件的信息比如判断用户按下了那个键。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"时间对象可以自己命名，比如event、evt、e\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象也有兼容性问题，ie6 7 8浏览器不会给方法传递参数，如果需要的话，需要到window.event中获取查找。console.log(window.event)。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.target\"}]},{\"type\":\"text\",\"value\":\"                  指向点击的那个对象（元素），谁触发了事件，指向的就是谁。有可能是子元素触发了父元素的事件，则返回的是子元素。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"this/e.currentTarget\"}]},{\"type\":\"text\",\"value\":\"      指向的是绑定事件的对象（元素）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"其他常见事件对象的属性和方法\\r\\n- e.target\\r\\n- e.type                返回事件的类型，比如click、mouseover，不带on\\r\\n- e.cancelBubble        该属性阻止冒泡（非标准、ie6-8使用）\\r\\n- e.returnValue         该属性阻止默认事件（默认行为）（非标准、ie6-8使用，比如不让链接跳转）\\r\\n- e.preventDefault()    该方法阻止默认事件（默认行为）（标准，比如不让链接跳转）\\r\\n- e.stopPropagation()   阻止冒泡（标准）【推荐】\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-阻止事件冒泡\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 阻止事件冒泡\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-事件委托代理委派\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 事件委托（代理、委派）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件委托的原理不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置每个子节点。\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       var ul = document.querySelector('div.event-agent');       ul.addEventListener('click', function (e) {           e.target.style.backgroundColor = 'pink';       })       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-常用的鼠标事件\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 常用的鼠标事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"禁止鼠标右键菜单\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('contextmenu', function (e) {           e.preventDefault();     //禁用右键菜单       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"禁止选中文字\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('selectstart', function (e) {           e.preventDefault();     //禁止选中文字       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MouseEvent\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('click', function (e) {           console.log(e);           console.log(e.clientX);     //返回鼠标相对于浏览器窗口可视区的X坐标           console.log(e.clientY);     //返回鼠标相对于浏览器窗口可视区的Y坐标           console.log(e.pageX);       //返回鼠标相对于文档页面的X坐标     IE9+支持           console.log(e.pageY);       //返回鼠标相对于文档页面的Y坐标     IE9+支持           console.log(e.screenX);     //返回鼠标相对于电脑屏幕的X坐标           console.log(e.screenY);     //返回鼠标相对于电脑屏幕的Y坐标       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mousemove:只要鼠标移动1px，就会触发这个事件\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"8-常用的键盘事件\"},\"children\":[{\"type\":\"text\",\"value\":\"8. 常用的键盘事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeyup       某个键盘案件被弹起时触发\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeydown     某个键盘按键被按下时触发\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeypress    某个键盘按键被按下时触发（但不识别功能键，比如ctrl shift 箭头等）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三个事件的执行顺序：keydown -> keypress -> keyup\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"键盘事件对象中的keyCode属性可以得到相应键的ASCII码值\\r\\n- 我们的keyup和keydown事件不区分字母大小写a和A得到的都是65\\r\\n- 我们的keypress 事件区分字母大小写 a ->97  和  A -> 65\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"bom浏览器对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"BOM浏览器对象模型-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-bom概述\"},\"children\":[{\"type\":\"text\",\"value\":\"1. BOM概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM ( Browser Object Model )即浏览器对象模型，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是window。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM由一系列相关的对象构成，并且每个对象都提供了很多方法与属性。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM缺乏标准，JavaScript语法的标准化组织是ECMA，DOM的标准化组织是W3C，BOM最初是Netscape浏览器标准的一部分。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DOM\\r\\n- 文档对象模型\\r\\n- DOM就是把「文档」当做一个「对象」来看待\\r\\n- DOM的顶级对象是document\\r\\n- DOM主要学习的是操作页面元素\\r\\n- DOM是W3C标准规范\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM\\r\\n- 浏览器对象模型\\r\\n- 把「浏览器」当做一个「对象」来看待\\r\\n- BOM的顶级对象是window\\r\\n- BOM学习的是浏览器窗口交互的一些对象\\r\\n- BOM是浏览器厂商在各自浏览器上定义的，兼容性较差\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"window对象是浏览器的顶级对象，它具有双重角色。\\r\\n- 1. 它是JS访问浏览器窗口的一个接口。\\r\\n- 2. 它是一个全局对象。定义在全局作用域中的变量、函数都会变成window对象的属性和方法。\\r\\n- 在调用的时候可以省略window，前面学习的对话框都属于window对象方法，如 alert()、prompt()等。\\r\\n- 注意:window下的一个特殊属性window.name\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-window对象的常见事件\"},\"children\":[{\"type\":\"text\",\"value\":\"2. window对象的常见事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"页面加载事件\\r\\n- load：等页面内容全部加载完毕，包含页面dom元素、图片、flash、css等\\r\\n- DOMContentLoaded：事件触发时，仅当DOM加载完成。不包括样式表、图片、flash等。【ie9以上才支持】\\r\\n- 如果页面的图片很多的话,从用户访问到onload触发可能需要较长的时间,交互效果就不能实现，必然影响用户的体验，此时用DOMContentLoaded事件比较合适。\\r\\n```js\\r\\nwindow.addEventListener('load', function () {\\r\\nvar btn = document.querySelector('button');\\r\\nbtn.addEventListener('click', function () {\\r\\nalert('11');\\r\\n})\\r\\n})\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"      document.addEventListener('DOMContentLoaded', function () {\\r\\n          var btn = document.querySelector('button');\\r\\n          btn.addEventListener('click', function () {\\r\\n              alert('11');\\r\\n          })\\r\\n      })\\r\\n      ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"      document.addEventListener('DOMContentLoaded', function () {\\r\\n          var btn = document.querySelector('button');\\r\\n          btn.addEventListener('click', function () {\\r\\n              alert('11');\\r\\n          })\\r\\n      })\\r\\n      ```\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调整窗口大小事件\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"    window.onresize = function(){}\\r\\n    window.addEventListener('resize',function(){})\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"    window.onresize = function(){}\\r\\n    window.addEventListener('resize',function(){})\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-定时器\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 定时器\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"setTimeout(调用函数,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\"如果省略，默认为0立即调用\\r\\n- 延迟时间到了就去调用函数，只调用一次\\r\\n- clearTimeout(timeoutID)\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       function boom() {           console.log('boom!!!');       }       // 开始定时器       var time = setTimeout(boom, 1000);       // 停止定时器       clearTimeout(time);       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"setInterval(调用函数,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- 重复调用一个函数，每隔这个时间，就去调用一次回调函数\\r\\n- clearInterval(iintervalID)\\r\\n- 代码用法砼setTimeout\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-1-this指向问题\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 1. this指向问题\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"this 一般情况下this的最终指向的是那个调用它的对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1．全局作用域或者普通函数中this指向全局对象window（注意定时器里面的this指向window）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2．方法调用中谁调用this指向谁\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3．构造函数中this指向构造函数的实例\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-js执行机制\"},\"children\":[{\"type\":\"text\",\"value\":\"4. JS执行机制\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。这是因为Javascript这门脚本语言诞生的使命所致——JavaScript是为处理页面中用户的交互，以及操作DOM而诞生的。比如我们对某个DOM元素进行添加和删除操作，不能同时进行。应该先进行添加，之后再删除。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个路。这样所导致的问题是:如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同步和异步：为了解决这个问题，利用多核CPU的计算能力，HTML5提出 Web Worker标准，允许JavaScript脚本创建多个线程。于是，JS中出现了同步和异步。\\r\\n- 同步：前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。比如做饭的同步做法∶我们要烧水煮饭，等水开了( 10分钟之后），再去切菜，炒菜。\\r\\n- 异步：你在做一件事情时，因为这件事情会花费很长时间，在做这件事的同时，你还可以去处理其他事情。比如做饭的异步做法，我们在烧水的同时，利用这10分钟，去切菜，炒菜。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同步任务：同步任务都在主线程上执行，形成一个执行栈\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"异步任务：JS的异步是通过回调函数实现的。异步任务相关回调函数添加到任务队列中（任务队列也成为消息队列）\\r\\n- 普通事件：click、resize等\\r\\n- 资源加载：load、error等\\r\\n- 定时器：包括setInterval、setTimeout等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行机制：\\r\\n- 1. 先执行执行栈中的同步任务\\r\\n- 2. 异步任务（回调函数）放入任务队列中\\r\\n- 3. 一旦执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-location对象\"},\"children\":[{\"type\":\"text\",\"value\":\"5. location对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"window对象给我们提供了一个location属性用于获取或设置窗体的URL，并且可以用于解析URL。因为这个属性返回的是一个对象,所以我们将这个属性也称为location对象。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"protocol://host \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"port\",\"props\":{},\"children\":[]}]},{\"type\":\"text\",\"value\":\"/path/ \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\" 2query\"}]},{\"type\":\"text\",\"value\":\" #fragment\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.itcast.cn/index.html?name=andy&age=18#link\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.itcast.cn/index.html?name=andy&age=18#link\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- protocol：通信协议，常用的http、https、ftp、mailto等\\r\\n- host：主机（域名）：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.itcast.cn\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"www.itcast.cn\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- port：端口号（可选），省略时使用方案默认的端口，如http的默认端口为80\\r\\n- path：路径。由零或多个'/'符号隔开的字符串，一般用来表示主机上的一个目录或文件地址\\r\\n- query：参数 以键值对的形式，通过&符号分隔开来\\r\\n- fragment：片段 #后面的内容，常见于连接、锚点\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"location对象的常用属性\\r\\n- location.href         获取或设置整个URL\\r\\n- location.host         返回主机（域名）\\r\\n- location.port         返回端口号\\r\\n- location.pathname     返回路径\\r\\n- location.search       返回参数\\r\\n- location.hash         返回片段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"location对象中的方法\\r\\n- location.assign()     跟href一样，可以跳转页面，记录浏览历史，可以实现后退\\r\\n- location.replace()    替换当前页面，因为不记录历史，所以不能后退页面\\r\\n- location.reload()     重新加载页面，相当于刷新按钮或者F5，如果参数为true强制刷新ctrl+F5\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"var btn = document.querySelector('button');\\r\\nvar div = document.querySelector('div');\\r\\nbtn.addEventListener('click', function () {\\r\\n    // console.log(location.href);\\r\\n    var remainTime = 5;\\r\\n    skip();\\r\\n    var skipTime = setInterval(skip, 1000)\\r\\n    function skip() {\\r\\n        div.innerHTML = '您将在' + remainTime + '秒后进入IT之家首页...';\\r\\n        if (remainTime <= 0) {\\r\\n            clearInterval(skipTime);\\r\\n            location.href = 'https://www.ithome.com';\\r\\n        }\\r\\n        remainTime--;\\r\\n    }\\r\\n})\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"var btn = document.querySelector('button');\\r\\nvar div = document.querySelector('div');\\r\\nbtn.addEventListener('click', function () {\\r\\n    // console.log(location.href);\\r\\n    var remainTime = 5;\\r\\n    skip();\\r\\n    var skipTime = setInterval(skip, 1000)\\r\\n    function skip() {\\r\\n        div.innerHTML = '您将在' + remainTime + '秒后进入IT之家首页...';\\r\\n        if (remainTime <= 0) {\\r\\n            clearInterval(skipTime);\\r\\n            location.href = 'https://www.ithome.com';\\r\\n        }\\r\\n        remainTime--;\\r\\n    }\\r\\n})\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-navigator对象\"},\"children\":[{\"type\":\"text\",\"value\":\"6. navigator对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"navigator对象包含有关浏览器的信息，它有很多属性，我们最常用的是userAgent，该属性可以返回由客户机发送服务器的user-agent头部的值。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下面前端代码可以判断用户那个终端打开页面，实现跳转\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  if ((navigator.userAgent.match((/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|WOSBrowser|BrowserNG|WebOS|Symbian|Window Phone)/i)))) {\\r\\n    window.location.href = '';   //手机\\r\\n  } else {\\r\\n      window.location.href = '';    //电脑\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  if ((navigator.userAgent.match((/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|WOSBrowser|BrowserNG|WebOS|Symbian|Window Phone)/i)))) {\\r\\n    window.location.href = '';   //手机\\r\\n  } else {\\r\\n      window.location.href = '';    //电脑\\r\\n  }\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-history对象\"},\"children\":[{\"type\":\"text\",\"value\":\"7. history对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"back()        后退功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"forward()     前进功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"go(参数)      前进后退功能，如果参数是1前进1个页面，参数是-1后退1个页面\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"pc端网页特效\"},\"children\":[{\"type\":\"text\",\"value\":\"PC端网页特效\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-元素偏移量offset系列\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 元素偏移量offset系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"offset翻译过来就是偏移量，我们使用offset系列相关属性可以动态的得到该元素的位置（偏移)、大小等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"获得元素距离带有定位父元素的位置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"获得元素自身的大小(宽度高度)注意:返回的数值都不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用属性：\\r\\n- element.offsetParent      返回作为该元素带有定位的父级元素如果父级都没有定位则返回body\\r\\n- element.offsetTop         返回元素相对带有定位父元素上方的偏移\\r\\n- element.offsetLeft        返回元素相对带有定位父元素左边框的偏移\\r\\n- element.offsetWidth       返回自身包括padding 、边框、内容区的宽度，返回数值不带单位\\r\\n- element.offsetHeight      返回自身包括padding、边框、内容区的高度，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"offset与style区别\\r\\n- offset可以得到任意样式表中的样式值offset系列获得的数值是没有单位的\\r\\n- offsetWidth 包含padding+border +width\\r\\n- offsetWidth 等属性是只读属性，只能获取不能喊值\\r\\n- 所以，我们想要获取元素大小位置，用offset更合适\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - style只能得到行内样式表中的样式值\\r\\n  - style.width获得的是带有单位的字符串\\r\\n  - style.width获得不包含padding和border的值\\r\\n  - style.width是可读写属性，可以获取也可以赋值\\r\\n  - 所以，我们想要给元素更改值，则需要用style改变\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  - style只能得到行内样式表中的样式值\\r\\n  - style.width获得的是带有单位的字符串\\r\\n  - style.width获得不包含padding和border的值\\r\\n  - style.width是可读写属性，可以获取也可以赋值\\r\\n  - 所以，我们想要给元素更改值，则需要用style改变\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-元素可视区client系列\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 元素可视区client系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"client翻译过来就是客户端，我们使用client系列的相关属性来获取元素可视区的相关信息。通过client系列的相关属性可以动态的得到该元素的边框大小、元素大小等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientTop         返回元素上边框的大小\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientLeft        返回元素左边框的大小\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientWidth       返回自身包括padding、内容区的宽度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientHeight      返回自身包括padding、内容区的高度，不含边框，返回数值不带单位\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-立即执行函数\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 立即执行函数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不需要调用，立马就能执行的函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"(function(){})();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"(function(){}());\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"立即执行函数最大作用就是，独立创建了一个作用域，里面所有的变量都是局部变量，不会有命名冲突的情况\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"flexible.js\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-元素滚动scoll系列\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 元素滚动scoll系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"scroll翻译过来就是滚动的，我们使用scroll系列的相关属性可以动态的得到该元素的大小、滚动距离等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollTop         返回被卷去的上侧距离，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollLeft        返被卷去的左侧距离，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollWidth       返回自身实际的宽度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollHeight      返回自身实际的高度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"页面被卷去的头部:可以通过window.pageYOffset 获得如果是被卷去的左侧window.pageXOffset\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-动画函数封装\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 动画函数封装\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"核心原理:通过定时器setlnterval(不断移动盒子位置。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实现步骤∶\\r\\n- 1. 获得盒子当前位置\\r\\n- 2. 让盒子在当前位置加上1个移动距离3.利用定时器不断重复这个操作\\r\\n- 4. 加一个结束定时器的条件\\r\\n- 5. 注意此元素需要添加定位，才能使用element.style.left\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"缓动动画原理：\\r\\n- 缓动动画就是让元素运动速度有所变化，最常见的是让速度慢慢停下来\\r\\n- 1.让盒子每次移动的距离慢慢变小，速度就会慢慢落下来。\\r\\n- 2.核心算法∶(目标值-现在的位置)/ 10做为每次移动的距离步长\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"动画函数添加回调函数\\r\\n- 回调函数原理∶函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程就叫做回调。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"节流阀以及逻辑中断应用\\r\\n- if(flag){flag = false;do something};\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-常见网页特效案例\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 常见网页特效案例\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"本地存储\"},\"children\":[{\"type\":\"text\",\"value\":\"本地存储-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经常性在本地存储大量的数据，HTML5规范提出了相关解决方案。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-windowsessionstorage\"},\"children\":[{\"type\":\"text\",\"value\":\"1. window.sessionStorage\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"生命周期为关闭浏览器窗口\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在同一个窗口(页面)下数据可以共享\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以键值对的形式存储使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.setItem(key,value)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.getItem(key)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.removeItem(key)    //删除指定数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.clear()            //删除所有数据\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-windowlocalstorage\"},\"children\":[{\"type\":\"text\",\"value\":\"2. window.localStorage\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"生命周期永久生效，除非手动删除否则关闭页面也会存在\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以多窗口(页面)共享(同一浏览器可以共享，要求必须是同一个域名下)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以键值对的形式存储使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.setItem(key,value)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.getItem(key)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.removeItem(key)    //删除指定数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.clear()            //删除所有数据\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"jquery\"},\"children\":[{\"type\":\"text\",\"value\":\"JQuery-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-javascript库\"},\"children\":[{\"type\":\"text\",\"value\":\"1. JavaScript库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript库:即 library，是一个封装好的特定的集合（方法和函数)。从封装一大堆函数的角度理解库，就是在这个库中，封装了很多预先定义好的函数在里面，比如动画animate、hide、show，比如获取元素等。简单理解:就是一个JS文件，里面对我们原生js代码进行了封装，存放到里面。这样我们可以快速高效的使用这些封装好的功能了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比如jQuery，就是为了快速方便的操作DOM，里面基本都是函数(方法)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常见的JavaScript库\\r\\n- jQuery\\r\\n- Prototype\\r\\n- Yul\\r\\n- Dojo\\r\\n- Ext JS\\r\\n- 移动端的zepto\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-jquery概述\"},\"children\":[{\"type\":\"text\",\"value\":\"2. jQuery概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念\\r\\n- jQuery是一个快速、简洁的JavaScript库，其设计的宗旨是“write Less , Do More”，即倡导写更少的代码，做更多的事情。\\r\\n- j就是JavaScript ;Query查询;意思就是查询js，把js中的DOM操作做了封装，我们可以快速的查询使用里面的功能。\\r\\n- jQuery封装了JavaScript常用的功能代码，优化了DOM操作、事件处理、动画设计和Ajax交互。\\r\\n- 学习jQuery本质:就是学习调用这些函数(方法)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优点：\\r\\n- 轻量级。核心文件才几十kb，不会影响页面加载速度跨浏览器兼容。基本兼容了现在主流的浏览器\\r\\n- 链式编程、隐式迭代\\r\\n- 对事件、样式、动画支持，大大简化了DOM操作支持插件扩展开发。有着丰富的第三方的插件，例收∶树形菜单、日期控件、轮播图等\\r\\n- 免费、开源\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-jquery基本使用\"},\"children\":[{\"type\":\"text\",\"value\":\"3. jQuery基本使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$同时也是JQuery的顶级对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用原生JS获取来的对象就是DOM对象\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery方法获取的元素就是jQuery对象,jQuery是伪数组。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery对象不能使用原生js的属性和方法\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DOM对象与jQuery对象之间是可以相互转换的。因为原生js比jQuery更大，原生的一些属性和方法jQuery没有给我们封装.要想使用这些属性和方法需要把jQuery对象转换为DOM对象才能使用。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$('div')\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"                        jQuery转换为dom对象。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":6},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(document.querySelector('div'))   DOM对象转换为jQuery对象\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-jquery常用api\"},\"children\":[{\"type\":\"text\",\"value\":\"4. jQuery常用API\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 选择器\\r\\n- 基本和层级选择器\\r\\n- $(“选择器”）//里面选择器直接写CSS选择器即可，但是要加引号\\r\\n- ID选择器      $(\\\"#id\\\")        获取指定ID的元素\\r\\n- 全选选择器    $('*')          匹配所有元素\\r\\n- 类选择器      $(\\\".class\\\")     获取同一类class的元素\\r\\n- 标签选择器    $(\\\"div\\\")        获取同一类标签的所有元素\\r\\n- 并集选择器    $(\\\"div,p,li\\\")   选取多个元素\\r\\n- 交集选择器    $(\\\"li.current\\\") 交集元素\\r\\n- 隐式迭代\\r\\n- $(\\\"div\\\").css(\\\"background\\\",\\\"red\\\");\\r\\n- 遍历内部 DOM元素（伪数组形式存储)的过程就叫做隐式迭代。\\r\\n- 简单理解∶给匹配到的所有元素进行循环遍万，执行相应的方法，而不用我们再进行循环，简化我们的操作方便我们调用。\\r\\n- 隐式迭代就是把匹配的所有元素内部进行遍历循环，给每一个元素添加css这个方法\\r\\n- jQuery 筛选选择器\\r\\n- \"},{\"type\":\"element\",\"tag\":\"first\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"        $('li:first')   获取第一个li元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"last\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"         $('li:last')    获取最后一个li元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"eq\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"(index)    $(\\\"li:eq(2)\\\")   获取到的li元素中，选择索引号为2的元素，索引号index从0开始。\\r\\n- \"},{\"type\":\"element\",\"tag\":\"odd\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"          $(\\\"li:odd\\\")     获取到的li元素中，选择索引号为奇数的元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"even\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"         $(\\\"li:even\\\")    获取到的li元素中，选择索引号为偶数的元素\\r\\n- jQuery 筛选方法\\r\\n- parent()              $(\\\"1i\\\").parent();                   查找父级\\r\\n- children(selector)    $(\\\"ul\\\").children(\\\"li\\\")              相当于$(\\\"u1>li\\\")，最近一级(亲儿子)\\r\\n- find(selector)        $(\\\"ul\\\").find(\\\"li\\\");                 相当于$(\\\"ul li\\\"),后代选择器\\r\\n- siblings(selector)    $(\\\".first\\\").siblings(\\\"li\\\");         查找兄弟节点，不包括自己本身。  -> 可用于排他思想\\r\\n- nextAll(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"expr\"}]},{\"type\":\"text\",\"value\":\")       $(\\\".first\\\").nextAll()               查找当前元素之后所有的同辈元素\\r\\n- prevtAll(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"expr\"}]},{\"type\":\"text\",\"value\":\")      $(\\\".last\\\").prevAll()                查找当前元素之前所有的同辈元素\\r\\n- hasClass(class)       $('div').hasClass(\\\"protected\\\")      检查当前的元素是否含有某个特定的类,如果有，则返回true\\r\\n- eq(index)             $(\\\"1i\\\").ea(2);                      相当于$(\\\"li:ea(2)\\\") ,index从0开始\\r\\n- 链式编程\\r\\n- $(this).css(\\\"color\\\",\\\"red\\\").siblings().css(\\\"color\\\",\\\"\\\");\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 样式操作\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 操作css方法\\r\\n- jQuery可以使用css方法来修改简单元素样式;也可以操作类，修改多个样式。\\r\\n- 1. 参数只写属性名，则是返回属性值\\r\\n- $(this).css(\\\"color\\\");\\r\\n- 2. 参数是属性名，属性值，逗号分隔，是设置一组样式，属性必须加引号，值如果是数字可以不用跟单位和引号\\r\\n- $(this).css(\\\"color\\\", \\\"red\\\");\\r\\n- 3. 参数可以是对象形式，方便设置多组样式。属性名和属性值用冒号隔开，属性可以不用加引号，\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- $(this).css(\\\"color\\\":\\\"white\\\",\\\"font-size\\\":\\\"20px\\\"};\\r\\n- 示例：\\r\\n- ($(\\\"div\\\")).css(\\\"width\\\");  //获取样式\\r\\n- ($(\\\"div\\\")).css(\\\"width\\\",\\\"300px\\\");    //设置样式\\r\\n- $(\\\"div\\\").css({width: 400,height: 400,backgroundColor: 'purple'})\\r\\n- 操作类\\r\\n- 添加类：不会影响之前的类名\\r\\n- $(this).addClass('current');\\r\\n- 删除类\\r\\n- $(this).removeClass('current');\\r\\n- 切换类\\r\\n- $(this).toggleClass('current');\\r\\n- jQuery操作类与js原生className区别\\r\\n- js原生className会覆盖原有的类名\\r\\n- jQuery操作类不会覆盖原有的类名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 效果（动画效果）\\r\\n- 显示隐藏\\r\\n- show(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"speed,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"easing\"}]},{\"type\":\"text\",\"value\":\",\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"fn\"}]}]},{\"type\":\"text\",\"value\":\")\\r\\n- 参数都可以省略，无动画直接显示。\\r\\n- speed：三种预定速度之一的字符串(“slow”,“normal\\\",or “fast”)或表示动画时长的毫秒数值(如:1000)。\\r\\n- easing：(Optional)用来指定切换效果，默认是“swing”，可用参数“linear\\\"。\\r\\n- fn：回调函数，在动画完成时执行的函数，每个元素执行一次。\\r\\n- hide()\\r\\n- hide(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"speed,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"easing\"}]},{\"type\":\"text\",\"value\":\",\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"fn\"}]}]},{\"type\":\"text\",\"value\":\")\\r\\n- toggle()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - 滑动显示隐藏\\r\\n      ```js\\r\\n          slideDown([speed,[easing],[fn]])\\r\\n          slideUp([speed,[easing],[fn]])\\r\\n          slideToggle([speed,[easing],[fn]])\\r\\n      ```\\r\\n\\r\\n  - 事件切换\\r\\n      - hover([over],out):\\r\\n          - over:鼠标移到元素上要触发的函数\\r\\n          - out:鼠标移出元素要触发的函数\\r\\n\\r\\n  - 动画队列及其停止排队方法\\r\\n      - 动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。\\r\\n      - stop()\\r\\n          - stop(方法用于停止动画或效果。\\r\\n          - 注意:stop()写到动画或者效果的前面，相当于停止结束上一次的动画。\\r\\n\\r\\n  - 淡入淡出\\r\\n      ```js\\r\\n          fadeIn([speed,[easing],[fn]])\\r\\n          fadeOut([speed,[easing],[fn]])\\r\\n          fadeToggle([speed,[easing],[fn]])\\r\\n          fateTo([speed],opacity,[easing],[fn])  // 修改透明度\\r\\n      ```\\r\\n\\r\\n  - 自定义动画：只有是元素才能用这个动画，document用不了\\r\\n      - animate(params,[speed],[easing],[fn])\\r\\n          - params:一组包含作为动画属性和终值的样式属性和及其值的集合\\r\\n          - speed:三种预定速度之一的字符串(\\\"slow\\\",\\\"normal\\\", or \\\"fast\\\")或表示动画时长的毫秒数值(如：1000) \\r\\n          - easing:要使用的擦除效果的名称(需要插件支持).默认jQuery提供\\\"linear\\\" 和 \\\"swing\\\".\\r\\n          - fn:在动画完成时执行的函数，每个元素执行一次。\\r\\n          - $(\\\"body,html\\\").animate({scrollTop:0});        返回顶部\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  - 滑动显示隐藏\\r\\n      ```js\\r\\n          slideDown([speed,[easing],[fn]])\\r\\n          slideUp([speed,[easing],[fn]])\\r\\n          slideToggle([speed,[easing],[fn]])\\r\\n      ```\\r\\n\\r\\n  - 事件切换\\r\\n      - hover([over],out):\\r\\n          - over:鼠标移到元素上要触发的函数\\r\\n          - out:鼠标移出元素要触发的函数\\r\\n\\r\\n  - 动画队列及其停止排队方法\\r\\n      - 动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。\\r\\n      - stop()\\r\\n          - stop(方法用于停止动画或效果。\\r\\n          - 注意:stop()写到动画或者效果的前面，相当于停止结束上一次的动画。\\r\\n\\r\\n  - 淡入淡出\\r\\n      ```js\\r\\n          fadeIn([speed,[easing],[fn]])\\r\\n          fadeOut([speed,[easing],[fn]])\\r\\n          fadeToggle([speed,[easing],[fn]])\\r\\n          fateTo([speed],opacity,[easing],[fn])  // 修改透明度\\r\\n      ```\\r\\n\\r\\n  - 自定义动画：只有是元素才能用这个动画，document用不了\\r\\n      - animate(params,[speed],[easing],[fn])\\r\\n          - params:一组包含作为动画属性和终值的样式属性和及其值的集合\\r\\n          - speed:三种预定速度之一的字符串(\\\"slow\\\",\\\"normal\\\", or \\\"fast\\\")或表示动画时长的毫秒数值(如：1000) \\r\\n          - easing:要使用的擦除效果的名称(需要插件支持).默认jQuery提供\\\"linear\\\" 和 \\\"swing\\\".\\r\\n          - fn:在动画完成时执行的函数，每个元素执行一次。\\r\\n          - $(\\\"body,html\\\").animate({scrollTop:0});        返回顶部\\n\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 属性操作\\r\\n- 设置或获取元素固有属性 element.prop()     //类似原生getAttribute()\\r\\n- 所谓元素固有属性就是元素本身自带的属性，比如\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<a>\"}]},{\"type\":\"text\",\"value\":\"元素里面的href，比如\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<input>\"}]},{\"type\":\"text\",\"value\":\"元素里面的type。\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log($(\\\"a\\\").prop('href'));\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 设置或获取元素自定义属性 element.attr()   //类似原生setAttribute()\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               $(\\\"a\\\").attr(\\\"index\\\", 100);               $(\\\"a\\\").attr(\\\"data-index\\\",121);               console.log($(\\\"a\\\").attr(\\\"index\\\"));               console.log($(\\\"a\\\").attr(\\\"data-index\\\"));               console.log($(\\\"a\\\").data(\\\"index\\\"));    //返回的是数字类型index值           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 数据缓存data()    这个里面的数据是存放在元素的内存里面\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(\\\"a\\\").data(\\\"uname\\\",\\\"andy\\\");\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- console.log($(\\\"a\\\").data(\\\"uname\\\"));\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 文本属性值\\r\\n- 获取普通元素内容\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               console.log($(\\\"a\\\").html());               console.log($(\\\"a\\\").text());           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 设置元素文本内容\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               $(\\\"a\\\").html(\\\"设置hi~\\\");               $(\\\"a\\\").text(\\\"设置hi~~~\\\");          \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 获取设置表单值\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               console.log($(\\\"input\\\").val());               $(\\\"input\\\").val(182371);           \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 元素操作\\r\\n- 遍历元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(\\\"div\\\").each(function(i,domEle){})\"}]},{\"type\":\"text\",\"value\":\"   //只能遍历对象\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$.each($(\\\"div\\\"),function(i, ele){})\"}]},{\"type\":\"text\",\"value\":\"         //可以遍历对象，也可以遍历数组\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               var arr = [\\\"red\\\", \\\"green\\\", \\\"blue\\\", \\\"pink\\\"];               var sum = '';               $(\\\"div\\\").each(function (i, domEle) {                   console.log(i);                   console.log(domEle);                   $(domEle).css(\\\"background-color\\\", arr[i]);                   sum += $(domEle).text();                   console.log(sum);               });               var sum = '';               $.each($(\\\"div\\\"), function (i, ele) {                   sum += $(ele).text();                   console.log(sum);               })               $.each(arr, function (i, ele) {                   console.log(i);                   console.log(ele);               })               \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 创建元素\\r\\n- var li = $(\\\"\"},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我是后来创建的li\"}]},{\"type\":\"text\",\"value\":\"\\\");\\r\\n- 添加元素\\r\\n- 内部添加：生成之后他们是父子关系\\r\\n- $(\\\"ul\\\").append(li);\\r\\n- $(\\\"ul\\\").prepend(li);\\r\\n- 外部添加：生成之后他们是兄弟关系\\r\\n- $(\\\"div\\\").after(div);\\r\\n- $(\\\"div\\\").before(div);\\r\\n- 删除元素\\r\\n- remove()\\r\\n- $(\\\"ul\\\").remove();                             // 删除匹配的元素 自杀\\r\\n- $(\\\"ul\\\").empty(); === $(\\\"ul\\\").html(\\\"\\\");        // 可以删除匹配的元素里面的子节点、孩子\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 尺寸、位置操作\\r\\n- jQuery尺寸\\r\\n- width()/ height()                     取得/设置匹配元素宽度和高度值只算width / height\\r\\n- innerWidth()/ innerHieght()           取得/设置匹配元素宽度和高度值包含padding\\r\\n- outerWidth() / outerHeight()          取很/设置匹配元素宽度和高度值包含padding. border\\r\\n- nouterWidth(true)/ outerHeight(true)  取得/设置匹配元素宽度和高度值包含padding .borde、margin\\r\\n- 以上参数为空，则是获取相应值，返回的是数字型。\\r\\n- 如果参数为数字，则是修改相应值。\\r\\n- 参数可以不必写单位。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - jQuery位置\\r\\n      - offset()                  获取/设置距离文档的位置（偏移）\\r\\n          - `offset().top`\\r\\n          - `offset().left`\\r\\n      - position()                获取距离带有定位的父盒子的位置\\r\\n      - scrollTop()/scrollLeft()\\r\\n          - `$(document).scrollTop();`\\r\\n          - `$(window).scroll(function(){console.log($(document).scrollTop());})`\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"  - jQuery位置\\r\\n      - offset()                  获取/设置距离文档的位置（偏移）\\r\\n          - `offset().top`\\r\\n          - `offset().left`\\r\\n      - position()                获取距离带有定位的父盒子的位置\\r\\n      - scrollTop()/scrollLeft()\\r\\n          - `$(document).scrollTop();`\\r\\n          - `$(window).scroll(function(){console.log($(document).scrollTop());})`\\n\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-jquery事件注册\"},\"children\":[{\"type\":\"text\",\"value\":\"5. jQuery事件注册\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件注册\\r\\n- $(\\\"div\\\").click(function(){})\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件处理\\r\\n- on()方法在匹配元素上绑定一个或多个事件的事件处理函数\\r\\n- element.on(events,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"selector\"}]},{\"type\":\"text\",\"value\":\",fn)\\r\\n- 1. events:一个或多个用空格分隔的事件类型，如\\\"click\\\"或\\\"keydown”.\\r\\n- 2. selector:元素的子元素选择器。\\r\\n- 3. fn:回调函数即绑定在元素身上的侦听函数。\\r\\n- on可以给未来动态创建的元素绑定事件\\r\\n- off()可以移除通过on()方法添加的事件处理程序\\r\\n- $(\\\"ul\\\").off()             解除ul上的所有事件\\r\\n- $(\\\"ul\\\").off(\\\"click\\\");     解除ul上的click事件\\r\\n- 如果有的事件只想触发一次，可以使用one()\\r\\n- 自动触发事件\\r\\n- 元素.事件()\\r\\n- 元素.trigger('事件')\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 元素.triggerHandler('事件')   // 不会触发元素的默认行为,例如input元素获得焦点后的光标闪烁\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件对象\\r\\n- 事件被触发，就会有事件对象的产生\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-jquery其他方法\"},\"children\":[{\"type\":\"text\",\"value\":\"6. jQuery其他方法\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery拷贝对象\\r\\n- 如果想要把某个对象拷贝（合并）给另外一个对象使用，此时可以使用$.extend(〉方法\\r\\n- 语法∶$.extend (\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"deep\"}]},{\"type\":\"text\",\"value\":\", target,object1,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"objectN\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- 1. deep:如果设为true为深拷贝，默认为false 浅拷贝\\r\\n- 2. target:要拷贝的目标对象\\r\\n- 3. object1:待拷贝到第一个对象的对象。\\r\\n- 4. objectN:待拷贝到第N个对象的对象。\\r\\n- 5. 浅拷贝是把被拷贝的对象复杂数据类型中的地址拷贝给目标对象，修改目标对象会影响被拷贝对象。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多库共存\\r\\n- jQuery使用$作为标示符，随着jQuery的流行,其他js 库也会用这$作为标识符，这样一起使用会引起冲突。\\r\\n- 1. 如果$符号冲突，我们就使用jQuery\\r\\n- 2. 让jQuery释放对$控制权，让用户自己决定\\r\\n- var suibian = jQuery.noConflict();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery插件\\r\\n- jQuery功能比较有限，想要更复杂的特效效果，可以借助于jQuery插件完成。\\r\\n- 注意:这些插件也是依赖于jQuery来完成的，所以必须要先引入jQuery文件，因此也称为jQuery插件。\\r\\n- jQuery插件常用的网站:\\r\\n- 1. jQuery插件库 \"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.jq22.com/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.jq22.com/\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 2.jQuery之家 \"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.htmleaf.com/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.htmleaf.com/\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- jQuery插件使用步骤:\\r\\n- 1.引入相关文件。( jQuery文件和插件文件)\\r\\n- 2.复制相关html、css、js(调用插件)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"图片懒加载（图片使用延迟加载可提高网页下载速度。他也能帮助减轻服务器负载）\\r\\n- 当我们页面滑动达到可视区域，再加载图片。\\r\\n- 我们使用jquery插件库EasyLazyload。注意，此时的js引入文件和js调用必须写到DOM元素(图片)最后面\\r\\n- 全屏滚动(fullpage.js)\\r\\n- gitHub：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://github.com/alvarotrigo/fullPage.js\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"https://github.com/alvarotrigo/fullPage.js\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 中文翻译网站：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.dowebok.com/demo/2014/77/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.dowebok.com/demo/2014/77/\"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数据可视化\"},\"children\":[{\"type\":\"text\",\"value\":\"数据可视化-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-什么是数据可视化\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 什么是数据可视化\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常见的数据可视化库\\r\\n- D3.js目前 Web端评价最高的Javascript可视化工具库(入手难)\\r\\n- ECharts.js百度出品的一个并源Javascript 数据可视化库\\r\\n- Highcharts.js国外的前端数据可视化库，非商用免费，被许多国外大公司所使用\\r\\n- AntV蚂蚁金服全新一代数据可视化解决方案\\r\\n- 等等\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-数据可视化项目概述\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 数据可视化项目概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"学习这个项目的目的\\r\\n- 市场需求和学习阶段需求项目用到的技术:以前学习过的技术和新技术\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CSS3动画、渐变\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery库+原生JavaScript\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"flex布局和 rem适配方案\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"图片边框border-image\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6模板字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ECharts可视化库等等\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-echarts简介\"},\"children\":[{\"type\":\"text\",\"value\":\"3. ECharts简介\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-echarts的基本使用\"},\"children\":[{\"type\":\"text\",\"value\":\"4. ECharts的基本使用\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数据可视化项目开发\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数据可视化项目开发\"}]}]},\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"h1\",\"props\":{\"id\":\"javascript基础web-apisjqueryecharts\"},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript基础+Web APIs+jQuery+ECharts\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js的组成\"},\"children\":[{\"type\":\"text\",\"value\":\"JS的组成-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-ecmascript\"},\"children\":[{\"type\":\"text\",\"value\":\"1. ECMAScript\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript：网景公司\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Jscript：微软\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-dom-文档对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"2. DOM - 文档对象模型\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Document ObjectModel\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-bom-浏览器对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"3. BOM - 浏览器对象模型\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Browser ObjectModel\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js初识\"},\"children\":[{\"type\":\"text\",\"value\":\"JS初识-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-行内式的js直接写到元素的内部\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 行内式的js，直接写到元素的内部\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<input type=\\\"button\\\" value=\\\"唐伯虎\\\" onclick=\\\"alert('秋香姐')\\\">\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-内嵌式的js\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 内嵌式的js\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"<script>\\r\\n  alert(\\\"hello javascript!\\\")\\r\\n  alert(\\\"hello world!\\\")\\r\\n</script>\\r\\n```\\r\\n\\r\\n### 3. 外部js文件\\r\\n<!-- <script src=\\\"my.js\\\">此处不可写代码</script> -->\\r\\n\\r\\n### 4. JS属于解释型语言\\n\",\"language\":\"html\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"<\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-ff4237\"},\"children\":[{\"type\":\"text\",\"value\":\"script\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\">\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"alert\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"\\\"hello javascript!\\\"\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"alert\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"\\\"hello world!\\\"\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"</\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-ff4237\"},\"children\":[{\"type\":\"text\",\"value\":\"script\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\">\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"```\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"### 3. 外部js文件\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"<!-- <script src=\\\"my.js\\\">此处不可写代码</script> -->\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"### 4. JS属于解释型语言\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"运行时及时解释，并立即执行\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-标识符\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 标识符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"开发人员为变量、属性、函数、参数取的名字\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"命名要有意义\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量一般用名词\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数一般用动词\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-关键字\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 关键字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JS本身已经使用了的字，不能再用他们充当变量名、方法名。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-保留字\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 保留字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"预留的关键字，未来可能会成为关键字\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"注释\"},\"children\":[{\"type\":\"text\",\"value\":\"注释-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-单行注释\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 单行注释\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"// 注释内容\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-多行注释\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 多行注释\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/*  注释内容  */\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"输入输出语句\"},\"children\":[{\"type\":\"text\",\"value\":\"输入输出语句-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-prompt\"},\"children\":[{\"type\":\"text\",\"value\":\"1. prompt()\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"输入框\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"prompt('请输入您的年龄：')\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-alert\"},\"children\":[{\"type\":\"text\",\"value\":\"2. alert()\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"弹出警示框\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"alert(\\\"hello javascript!\\\")\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"alert\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"\\\"hello javascript!\\\"\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-console\"},\"children\":[{\"type\":\"text\",\"value\":\"3. console\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"控制台输出\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log('这是程序员能看到的')\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'这是程序员能看到的'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"变量\"},\"children\":[{\"type\":\"text\",\"value\":\"变量-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概述\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"存放数据的容器，通过变量名获取数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"本质是内存空间\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Diagram Designer\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-使用\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"先声明再使用【推荐】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不声明也可以直接赋值,但会变成全局变量\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-语法扩展\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 语法扩展\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-命名规范\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 命名规范\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"驼峰命名法，myFirstName\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"name可能在有的浏览器有特殊含义，尽量不要作为变量名\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-交换变量的案例\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 交换变量的案例\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-const-与-let\"},\"children\":[{\"type\":\"text\",\"value\":\"6. const 与 let\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6 新增加了两个重要的关键字: let 和 const。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"let 声明的变量只在 let 命令所在的代码块内有效。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 声明一个只读的常量，一旦声明，常量的值就不能改变。\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用于声明一个或多个常量，声明时必须进行初始化，且初始化后值不可再修改\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 定义常量、let 定义的变量相同点：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"二者都是块级作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"都不能和它所在作用域内的其他变量或函数拥有相同的名称(不能再其作用域内重复声明)\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"区别：\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 声明的常量必须初始化，let声明的变量不用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"const 定义常量的值不能通过再赋值修改，也不能再次声明。而 let 定义的变量值可以修改。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  try {\\r\\n      const PI = 3.141592653589793;\\r\\n      PI = 3.14;\\r\\n  }\\r\\n  catch (err) {\\r\\n      console.log(err);\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"try\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"PI\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"3.141592653589793\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"PI\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"3.14\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"catch\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (err) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(err);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数据类型\"},\"children\":[{\"type\":\"text\",\"value\":\"数据类型-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-js是动态语言变量的数据类型是可以变化的\"},\"children\":[{\"type\":\"text\",\"value\":\"1. js是动态语言，变量的数据类型是可以变化的\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-简单数据类型也叫值类型放在栈立面\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 简单数据类型：也叫值类型；放在栈立面。\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Number        默认：0\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"八进制   数字前面加0\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"十六进制 数字前面加0x\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数字型的最大值/最小值\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log(Number.MAX_VALUE);\\r\\nconsole.log(Number.MIN_VALUE);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"Number\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".MAX_VALUE);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"Number\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".MIN_VALUE);\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Infinity/-Infinity 表示无穷大/无穷小\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log(Number.MAX_VALUE*2);\\r\\nconsole.log(-Number.MAX_VALUE*2);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"Number\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".MAX_VALUE\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"*\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"-\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"Number\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".MAX_VALUE\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"*\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"NaN  非数字的\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"console.log('huang'-100);\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'huang'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"-\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"100\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"isNaN()\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"是数字返回false\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不是数字返回true\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用方法\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"// amount 保留2位小数\\r\\namount.toFixed(2) \\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// amount 保留2位小数\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"amount.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"toFixed\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\") \"}]}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"String        \\\"\\\"\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串嵌套，外单内双或外双内单\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转义字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串长度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串的拼接\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双引号还是单引号？\\r\\n1）html中属性规范是用双引号，js中字符串规定是用单引号\\r\\n2）js中单引号区别和php很像：单引号快，双引号可转义字符，双引号可解析变量\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Boolean       false\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Undefined     undefined\\r\\n- 声明变量未赋值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Null          null\\r\\n- 也是object类型(特殊，设计js时的错误，没有改过来)\\r\\n- 如果有个变量以后打算存储为对象，暂时没想好放啥，可以先赋值null\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-typeof检测数据类型\"},\"children\":[{\"type\":\"text\",\"value\":\"3. typeof检测数据类型\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-数据类型的转换\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 数据类型的转换\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为字符串\\r\\n- toString\\r\\n- String()\\r\\n- 加号拼接字符串【常用】\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为数值型\\r\\n- parseInt()【常用】\\r\\n- parseFloat() 【常用】\\r\\n- Number()\\r\\n- 利用算数运算进行隐式转换 - * /\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"转换为布尔型\\r\\n- Boolean()，输出为false的5种情况，其他全是true\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js         console.log(Boolean(''));         console.log(Boolean(0));         console.log(Boolean(NaN));         console.log(Boolean(null));         console.log(Boolean(undefined));       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-复杂数据类型也叫引用类型放在堆立面\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 复杂数据类型：也叫引用类型；放在堆立面。\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"object\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"运算符-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"也称为操作符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"运算符两侧有留一个空格，便于阅读代码\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-算数运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 算数运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"+：加\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"-：减\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"*：乘\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"/：除\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"%：取余   用于判断是否能够整除\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"浮点数有精度问题，不要直接判断两个浮点数是否相等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"表达式和返回值\\r\\n- 由数字、运算符、变量等组成的式子，我们成为表达式\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-递增递减运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 递增递减运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"递增++\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前置递增：前自加，后返回值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"后置递增：前返回值，后自加\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"递减--\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"特性同递增\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"必须和变量搭配使用，简化代码\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"前置与后置区别\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独使用时，运行结果相同\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"与其他代码使用时，执行结构不同\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用后置，且代码最好单独放一行，便于阅读代码\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-比较运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 比较运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小于：<\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"大于：>\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"大于等于：>=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"小于等于：<=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"等于：==  (默认有隐式数据类型转换)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log(18 == '18');  //true\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不等于：!=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全等：=== !-\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"要求值和数据类型都一致\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log(18 == '18');  //false\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-逻辑运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 逻辑运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"与：&&\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"或：||\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"非：!\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"短路运算（逻辑中断）\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"当有多个表达式（值）时，左边的值可以确定运算，右边的表达式（值）不再计算\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-赋值运算符\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 赋值运算符\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"+=    -=\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"*=    /=  %=\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-运算符优先级\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 运算符优先级\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. ()\\r\\n2. 一元运算符：++   --  !\\r\\n3. 算数运算符：先*  /   % 后 + -\\r\\n4. 关系运算符：>    >=  <   <=\\r\\n5. 相等运算符：==   !=  === !-\\r\\n6. 逻辑运算符: 先&& 后||\\r\\n7. 赋值运算符：=\\r\\n8. 逗号运算符：,\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1. ()\\r\\n2. 一元运算符：++   --  !\\r\\n3. 算数运算符：先*  /   % 后 + -\\r\\n4. 关系运算符：>    >=  <   <=\\r\\n5. 相等运算符：==   !=  === !-\\r\\n6. 逻辑运算符: 先&& 后||\\r\\n7. 赋值运算符：=\\r\\n8. 逗号运算符：,\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"流程控制-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 流程控制\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"顺序结构\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分支结构\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"循环结构\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-顺序流程控制\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 顺序流程控制\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-分支流程控制if语句\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 分支流程控制if语句\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if else\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"if else if  else if   else    : 比较值和范围值匹配\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-三元表达式\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 三元表达式\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"条件表达式 ? 表达式1 : 表达式2\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-分支流程控制switch语句\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 分支流程控制switch语句\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较值和特定的值匹配\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比较值和特定的值必须全等(===),才执行对应的语句\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"break如果不写，后面的语句不再判读case而继续执行语句，直至执行完switch中的所有语句或遇见break后退出。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-循环\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 循环\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for：可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"forEach：不可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-in：不可遍历元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-of：可遍历元素\"}]}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  var arr1 = [1, 2, 3, 4, 'huang', true, 3.2];\\r\\n  for (var i = 0; i < arr1.length; i++) {\\r\\n      console.log('for ' + arr1[i]);\\r\\n  }\\r\\n\\r\\n  arr1.forEach(element => {\\r\\n      console.log('forEach ' + element);\\r\\n  });\\r\\n\\r\\n  for (const key in arr1) {\\r\\n      if (Object.hasOwnProperty.call(arr1, key)) {\\r\\n          const element = arr1[key];\\r\\n          console.log('for-in ' + element);\\r\\n      }\\r\\n  }\\r\\n\\r\\n  for (const iterator of arr1) {\\r\\n      console.log('for-of ' + iterator);\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1 \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" [\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"1\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"3\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"4\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'huang'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"true\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"3.2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"];\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"for\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" i \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"; i \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"<\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"length\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"; i\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"++\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\") {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'for '\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1[i]);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  arr1.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"forEach\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c7a6a9\"},\"children\":[{\"type\":\"text\",\"value\":\"element\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=>\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'forEach '\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" element);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  });\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"for\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"key\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"in\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"Object\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".hasOwnProperty.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"call\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(arr1, key)) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"          \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"element\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1[key];\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"          console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'for-in '\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" element);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"for\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"iterator\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"of\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" arr1) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'for-of '\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" iterator);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"双重for\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"while\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"do while\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"continue break\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数组\"},\"children\":[{\"type\":\"text\",\"value\":\"数组-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概念\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"一组数据的集合存放在单个变量下\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-创建数组\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 创建数组\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr = new Array();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr = \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\";\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组里面的数据用逗号分隔\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组元组可以是各种数据类型\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-获取数组元素\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 获取数组元素\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-新增数组元素\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 新增数组元素\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"修改length长度\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"通过修改索引号的方式增加\\r\\n- 已有索引号时  -- 修改\\r\\n- 原来没有索引号    -- 增加\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数组的方法\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数组的方法\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"过滤方法:Array.prototype.filter()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\\r\\nconst result = words.filter(word => word.length > 6);\\r\\nconsole.log(result);\\r\\n// expected output: Array [\\\"exuberant\\\", \\\"destruction\\\", \\\"present\\\"]\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"words\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" [\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'spray'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'limit'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'elite'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'exuberant'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'destruction'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'present'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"];\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"result\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" words.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"filter\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c7a6a9\"},\"children\":[{\"type\":\"text\",\"value\":\"word\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=>\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" word.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"length\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\">\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"6\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(result);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: Array [\\\"exuberant\\\", \\\"destruction\\\", \\\"present\\\"]\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"拼接字符串:Array.prototype.join()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const elements = ['Fire', 'Air', 'Water'];\\r\\n\\r\\nconsole.log(elements.join());\\r\\n// expected output: \\\"Fire,Air,Water\\\"\\r\\n\\r\\nconsole.log(elements.join(''));\\r\\n// expected output: \\\"FireAirWater\\\"\\r\\n\\r\\nconsole.log(elements.join('-'));\\r\\n// expected output: \\\"Fire-Air-Water\\\"\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"elements\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" [\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'Fire'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'Air'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'Water'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"];\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(elements.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"join\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"());\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: \\\"Fire,Air,Water\\\"\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(elements.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"join\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"''\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"));\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: \\\"FireAirWater\\\"\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(elements.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"join\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'-'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"));\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: \\\"Fire-Air-Water\\\"\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查找是否包含某元素:Array.prototype.indexOf()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"const beasts = ['ant', 'bison', 'camel', 'duck', 'bison'];\\r\\n\\r\\nconsole.log(beasts.indexOf('bison'));\\r\\n// expected output: 1\\r\\n\\r\\n// start from index 2\\r\\nconsole.log(beasts.indexOf('bison', 2));\\r\\n// expected output: 4\\r\\n\\r\\nconsole.log(beasts.indexOf('giraffe'));\\r\\n// expected output: -1\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"beasts\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" [\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'ant'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'bison'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'camel'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'duck'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'bison'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"];\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(beasts.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"indexOf\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'bison'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"));\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: 1\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// start from index 2\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(beasts.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"indexOf\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'bison'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"2\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"));\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: 4\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(beasts.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"indexOf\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'giraffe'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"));\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// expected output: -1\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"查找某个元素，并获取元素的代理内存地址，可以直接对元素进行修改：Array.prototype.find()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  const findResult = this.goodslist.find(x => x.id == id)\\r\\n  if (findResult) {\\r\\n    console.log(findResult)\\r\\n    console.log(checked)\\r\\n    findResult.goods_state = checked\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"const\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"findResult\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"this\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\".goodslist.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"find\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-c7a6a9\"},\"children\":[{\"type\":\"text\",\"value\":\"x\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=>\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" x.id \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"==\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" id)\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (findResult) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(findResult)\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    console.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"log\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(checked)\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    findResult.goods_state \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" checked\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"函数\"},\"children\":[{\"type\":\"text\",\"value\":\"函数-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概念-1\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概念\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"封装了一段可被重复调用的代码块\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"目的：让大量代码重复使用\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-使用-1\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用函数的时候，函数名要加()  eg:  sayHi()   getSum()\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-参数\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 参数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"定时函数时，函数可以带参数也可以不带参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"形参：形式上的 参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实参：实际的参数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数调用的时候，实参传递给形参\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果实参的个数多于形参的个数，会取到形参的个数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果实参的个数少于形参的个数，多余的形参定义为undefined\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"【建议】尽量让形参的个数与实参的个数相匹配\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-返回值\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 返回值\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只要函数体内遇到return，就把后面的结果返回给函数的调用者\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return会终止函数的执行，return后面的代码不会被执行\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"return只会返回一个值，如果写了多个值，返回最后一个值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以使用数组返回一组值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数没有return，则返回的是undefined\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-声明的方式\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 声明的方式\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. function（命名函数）\\r\\n    - 声明函数的关键字：function\\r\\n    - 函数名一般是动词  eg：sayHi   getSum\\r\\n    - 函数不调用自己不执行\\r\\n\\r\\n2. 函数表达式(匿名函数)\\r\\n    - var fun = function ()\\r\\n    - fun是变量名，不是函数名\\r\\n    - 函数表达式声明方式跟声明变量差不多，只不过变量里存的是函数   \\r\\n\\r\\n3. => 函数\\r\\n```js\\r\\n    var elements = [\\r\\n        'Hydrogen',\\r\\n        'Helium',\\r\\n        'Lithium',\\r\\n        'Beryllium'\\r\\n    ];\\r\\n    \\r\\n    elements.map(function(element) { \\r\\n        return element.length; \\r\\n    }); // 返回数组：[8, 6, 7, 9]\\r\\n    \\r\\n    // 上面的普通函数可以改写成如下的箭头函数\\r\\n    elements.map((element) => {\\r\\n        return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数只有一个参数时，可以省略参数的圆括号\\r\\n    elements.map(element => {\\r\\n    return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\\r\\n    elements.map(element => element.length); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 在这个例子中，因为我们只需要 `length` 属性，所以可以使用参数解构\\r\\n    // 需要注意的是字符串 `\\\"length\\\"` 是我们想要获得的属性的名称，而 `lengthFooBArX` 则只是个变量名，\\r\\n    // 可以替换成任意合法的变量名\\r\\n    elements.map(({ \\\"length\\\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\\r\\n```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1. function（命名函数）\\r\\n    - 声明函数的关键字：function\\r\\n    - 函数名一般是动词  eg：sayHi   getSum\\r\\n    - 函数不调用自己不执行\\r\\n\\r\\n2. 函数表达式(匿名函数)\\r\\n    - var fun = function ()\\r\\n    - fun是变量名，不是函数名\\r\\n    - 函数表达式声明方式跟声明变量差不多，只不过变量里存的是函数   \\r\\n\\r\\n3. => 函数\\r\\n```js\\r\\n    var elements = [\\r\\n        'Hydrogen',\\r\\n        'Helium',\\r\\n        'Lithium',\\r\\n        'Beryllium'\\r\\n    ];\\r\\n    \\r\\n    elements.map(function(element) { \\r\\n        return element.length; \\r\\n    }); // 返回数组：[8, 6, 7, 9]\\r\\n    \\r\\n    // 上面的普通函数可以改写成如下的箭头函数\\r\\n    elements.map((element) => {\\r\\n        return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数只有一个参数时，可以省略参数的圆括号\\r\\n    elements.map(element => {\\r\\n    return element.length;\\r\\n    }); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\\r\\n    elements.map(element => element.length); // [8, 6, 7, 9]\\r\\n    \\r\\n    // 在这个例子中，因为我们只需要 `length` 属性，所以可以使用参数解构\\r\\n    // 需要注意的是字符串 `\\\"length\\\"` 是我们想要获得的属性的名称，而 `lengthFooBArX` 则只是个变量名，\\r\\n    // 可以替换成任意合法的变量名\\r\\n    elements.map(({ \\\"length\\\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\\r\\n```\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-arguments\"},\"children\":[{\"type\":\"text\",\"value\":\"6. arguments\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只有函数才有arguments对象，而且是每个函数都内置好了这个对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"arguments中存储了传递的所有实参\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"展示形式是一个伪数组\\r\\n- 不是真正意义上的数组\\r\\n- 具有数组的length属性\\r\\n- 按照索引的方式进行存储\\r\\n- 它没有真正数组的一些方法pop() push()等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以按照数组的方式遍历arguments\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-函数可以调用另外一个函数\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 函数可以调用另外一个函数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"跟函数的书写顺序无关\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"作用域-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 作用域\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"就是代码名字在某个范围内起作用和效果\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"目的:提高程序的可靠性/减少命名冲突\"},{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js的作用域(es6)之前:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局作用域:\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"整个script标签\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单独的js文件\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"局部作用域\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在函数内部\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"代码的名字只在函数内部起作用\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"没有块级作用域\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js的作用域(es6)\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"有块级作用域\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-变量的作用域\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 变量的作用域\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"全局变量\\r\\n- 在全局作用域下var声明的变量；在全局下都可以使用\\r\\n- 在函数内部没有声明直接使用的变量，也是全局变量\\r\\n- 只有浏览器关闭的时候才会销毁，比较占内存\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"局部变量\\r\\n- 在局部作用域下var声明的变量（在函数内部的变量）；仅在局部作用域下可以使用\\r\\n- 函数的形参也可以看做是局部变量\\r\\n- 程序执行完毕就会销毁，节约内存资源\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-现阶段js没有块级\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 现阶段，js没有块级\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-作用域链\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 作用域链\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只要是代码，就至少有一个作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"写在函数内部的是局部作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果函数中还有函数，那么在这个作用域中就可以诞生一个作用域\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"根据内部函数可以访问外部函数变量的这种机制，用链式查找决定决定哪些数据能被内部函数访问，就称为作用域链。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"就近原则\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"预解析\"},\"children\":[{\"type\":\"text\",\"value\":\"预解析-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-js引擎运行js分为两步-预解析-代码执行\"},\"children\":[{\"type\":\"text\",\"value\":\"1. js引擎运行js分为两步：    预解析  代码执行\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js引擎把js里面所有的var还有function提升到当前作用域的最前面\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"按照代码书写的顺序从上往下执行\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-变量预解析变量提升和函数预解析函数提升\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 变量预解析（变量提升）和函数预解析（函数提升）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量提升\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"把所有的变量声明提升到当前作用域最前面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只提升声明，不提升赋值\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数提升\"},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"把所有的命名函数声明提升到当前作用域最前面\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"只提升声明，不调用函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"匿名函数声明不提升\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"对象\"},\"children\":[{\"type\":\"text\",\"value\":\"对象-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-概述-1\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"对象是一组无序的相关属性和方法的集合\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串、数值、数组、函数都是对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"属性：事物的特征，在对象中用属性来表示（常用名词）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"方法：事物的行为，在对象中用方法来表示（常用动词）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"为什么需要对象？\\r\\n- 保存一个值时，可以使用变量，保存多个值(一组值)时，可以使用数组。如果要保存一个人的完整信息呢?\\r\\n- JS中的对象表达结构更清晰,更强大。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-创建对象的三种方式\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 创建对象的三种方式\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用字面量    {}\\r\\n- 里面的属性或者方法采用键值对的方式\\r\\n- 多个属性或者方法中间用逗号隔开\\r\\n- 方法冒号后面跟的是一个匿名函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用new Object\\r\\n- var obj = new Object();\\r\\n- obj.uname = 'choudan';\\r\\n- obj.age = 3;\\r\\n- obj.sex = '男';\\r\\n- obj.sayHi = function(){}\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用构造函数\\r\\n- 前面两种一次只能创建一个对象，创建多个需要复制大量重复代码\\r\\n- 构造函数就是把对象里面的一些相同的属性和方法抽象出来封装到函数里面\\r\\n- 构造函数首字母要大写【规范】\\r\\n- 构造函数不需要return就可以返回结果\\r\\n- 调用构造函数，必须使用new\\r\\n- 方法和函数前面必须添加：this.\\r\\n```js\\r\\nfunction Star(uname, age, sex) {\\r\\nthis.name = uname;\\r\\nthis.age = age;\\r\\nthis.sex = sex;\\r\\nthis.sing = function (sang) {\\r\\nconsole.log(sang);\\r\\n}\\r\\n}\\r\\nvar ldh = new Star('刘德华', 18, '男');\\r\\nconsole.log(typeof (ldh));\\r\\nconsole.log(ldh.name);\\r\\nconsole.log(ldh.sex);\\r\\nldh.sing('冰雨');\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"      var zxy = new Star('张学友', 28, '男');\\r\\n      console.log(zxy.name);\\r\\n      console.log(zxy.sex);\\r\\n      zxy.sing('李香兰')\\r\\n  ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"      var zxy = new Star('张学友', 28, '男');\\r\\n      console.log(zxy.name);\\r\\n      console.log(zxy.sex);\\r\\n      zxy.sing('李香兰')\\r\\n  ```\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"...展开对象运算符\\r\\n```js\\r\\nvar obj = {\\r\\n'name': 'zs',\\r\\n'gender': 'nan',\\r\\n'age': 18\\r\\n}\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  obj2 = {\\r\\n      ...obj,\\r\\n      'city': 'shangqiu'\\r\\n  }\\r\\n  \\r\\n  // console(...obj)     // 报错\\r\\n  console.log(obj)\\r\\n  console.log(obj2)\\r\\n  ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"  obj2 = {\\r\\n      ...obj,\\r\\n      'city': 'shangqiu'\\r\\n  }\\r\\n  \\r\\n  // console(...obj)     // 报错\\r\\n  console.log(obj)\\r\\n  console.log(obj2)\\r\\n  ```\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-使用\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的属性1：对象名.属性名        obj.uname\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的属性2：对象名\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"'属性名'\"}]},{\"type\":\"text\",\"value\":\"     obj\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"'uname'\"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的方法1：对象名.方法名        obj.sayHi()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调用对象的方法2：对象名\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"'方法名'\"}]},{\"type\":\"text\",\"value\":\"   obj\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"'sayHi'\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-变量属性函数方法的区别\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 变量、属性、函数、方法的区别\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量、属性相同点：都是用来存储数据的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"变量、属性不同点：\\r\\n- 变量：单独声明并赋值，使用的时候直接写变量名，单独存在\\r\\n- 属性：在对象里面的，不需要声明的，使用的时候必须是：对象名.属性名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数、方法的相同点：都是实现某种功能，做某件事\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"函数、方法的不同点：\\r\\n- 函数：单独声明并调用，使用的时候直接写函数名，单独存在\\r\\n- 方法：在对象里面的，调用的时候必须是：对象名.属性名\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-new关键字\"},\"children\":[{\"type\":\"text\",\"value\":\"3. new关键字\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用new关键字创建对象的过程，也成为对象的实例化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"new构造函数可以在内存中创建了一个空的对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在执行时会做四件事情:\\r\\n1. 在内存中创建一个新的空对象。\\r\\n2. 让 this 指向这个新的对象。\\r\\n3. 执行构造函数里面的代码，给这个新对象添加属性和方法。\\r\\n4. 返回这个新对象（所以构造函数里面不需要return)。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-遍历对象属性\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 遍历对象属性\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"for-in\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       for(var k in zxy){}       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"js内置对象\"},\"children\":[{\"type\":\"text\",\"value\":\"js内置对象-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js中对象分为三种：自定义对象  内置对象    浏览器对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"自定义对象、内置对象属于ECMScript     浏览器对象属于JS独有的，属于JS API内容\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-内置对象\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 内置对象\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-查文档\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 查文档\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://developer.mozilla.org/zh-CN/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"https://developer.mozilla.org/zh-CN/\"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-math对象\"},\"children\":[{\"type\":\"text\",\"value\":\"3. Math对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math不是一个构造函数，所有的属性与方法都是静态的。所以不需要new来调用，而是直接使用里面的属性和方法即可。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.PI\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.max()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.min()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.abs()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.floor()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.ceil()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.round()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Math.random()\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-日期对象\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 日期对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date()日期对象 是有一个构造函数，必须使用new来调用创建日期对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"如果没有参数，返回当前系统的当前时间\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"参数常用的写法\\r\\n- 2022,7,3              var date1 = new Date(2019, 10, 1);\\r\\n- '2022-10-3 22:30:20'  var date2 = new Date('2022-7-3 22:30:20');\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getFullYear()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getMonth()    //月份 返回的是0~11，用的时候用要+1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getDate() //返回几日？\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getDay()  //返回星期几\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getHours()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getMinutes()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getSeconds()\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"getTime() //现在时间距离1970.1.1总的毫秒数(时间戳)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"valueOf() //现在时间距离1970.1.1总的毫秒数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var date1 = +new Date(); //现在时间距离1970.1.1总的毫秒数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Date.now()    //H5新增的获得总的毫秒数\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数组对象\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数组对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array();   //创建了一个空数组\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array(2);  //2表示数组长度为2，里面有两个空的数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"var arr1 = new Array(2, 3); //等价与\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2,3\"}]},{\"type\":\"text\",\"value\":\",表示创建的数组里面有2个元素，分别为2、3\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"检测是否为数组,是否为什么对象？\\r\\n- isntanceof        console.log(arr instanceof Array);\\r\\n- Array.isArray()   console.log(Array.isArray(arr));\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"添加删除数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"push()\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 在数组的末尾，添加一个或者多个数组元素\\r\\n- push()参数直接写数组元素就可以了\\r\\n- 返回值：新数组长度\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"unshift()\\r\\n- 在数组的开头，添加一个或者多个数组元素\\r\\n- unshift()参数直接写数组元素就可以了\\r\\n- 返回值：新数组长度\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pop()\\r\\n- 可以删除数组的最后一个元素，一次只能删一个\\r\\n- 没有参数\\r\\n- 返回值：删除的元素\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"shift()\\r\\n- 可以删除数组的第一个元素，一次只能删一个\\r\\n- 没有参数\\r\\n- 返回值：删除的元素\\r\\n- 原数组也会发生变化\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"indexOf()\\r\\n- 查找给定元素的第一个索引\\r\\n- 不存在则返回 -1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"lastIndexOf()\\r\\n- 查找给定元素的最后一个索引\\r\\n- 不存在则返回 -1\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"数组转换为字符串\\r\\n- toString()    无参数，采用逗号分隔\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js           console.log(arr.toString());           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- join()        有参数，默认采用逗号分隔\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js           console.log(arr.join(''));           console.log(arr.join('-'));           console.log(arr.join('&'));           \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"concat()      连接两个或多个数组，不影响原数组，返回一个新的数组\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slice()\\r\\n- 数组截取slice(begin,end)\\r\\n- 返回被截取项目的新数组\\r\\n- 原数组不会改变\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"splice()\\r\\n- 数组删除splice(第几个开始，要删除的个数)\\r\\n- 返回被删除项目的新数组\\r\\n- 会影响原数组\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-字符串对象\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 字符串对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"基本包装类型：把简单数据类型包装成了复杂数据类型，这个基本数据类型就有了属性和方法：js提供了三种基本包装类型：String、Number、Boolean。实现形式如下：\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       var temp = new String('andy');       str = temp;       temp = null;       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串具有不可变性：因为字符串不可变，所以不要大量的拼接字符串\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"字符串所有的方法，都不会修改字符本身，操作完成会返回一个新的字符串\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"indexOf(要查找的字符,【起始的位置】)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"charAt(index) 根据位置返回字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"charCodeAt(index) 根据位置返回字符的ASCII。判断用户按下了哪个键\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"str\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"index\"}]},{\"type\":\"text\",\"value\":\"    H5新增的\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"concat(str1,str2,str3,...)    拼接字符串，实际开发中用+拼接比较多\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"substr(start,length)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"slice(start,end)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"substring(start,end)  //基本和slice相同，但不接收负值\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"replace('被替换的字符','替换为的字符')\\r\\n- 只会替换第一个匹配到的字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"split('分隔符')\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 把字符串转换为数组\\r\\n- 不给参数为空，字符转换为1个元素的数组\\r\\n- 参数为''，将每个字符转换为数组元素\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"RegExpObject.exec(string)  用于检索字符串中的正则表达式的匹配\\r\\n- 返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为null\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"web-apis\"},\"children\":[{\"type\":\"text\",\"value\":\"Web APIs-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-web-apis和js基础关联性\"},\"children\":[{\"type\":\"text\",\"value\":\"1. Web APIs和JS基础关联性\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-api和web-api\"},\"children\":[{\"type\":\"text\",\"value\":\"2. API和Web API\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Web API：浏览器的API，一套操作浏览器功能和页面元素的API（DOM和BOM）\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-dom\"},\"children\":[{\"type\":\"text\",\"value\":\"3. DOM\"}]},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"1. 简介\\r\\n    - Document Object Model\\r\\n    - W3C组织推荐的处理扩展标记语言（HTML和XML）的接口\\r\\n    - DOM树（文档、元素、节点都看做是对象）：\\r\\n        - 文档：一个页面就是一个文档，DOM中使用document表示\\r\\n        - 元素：页面中的所有标签都是元素，DOM中使用element表示\\r\\n        - 节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n\\r\\n2. 获取元素\\r\\n    - 根据ID获取\\r\\n        - getElementById()\\r\\n        - 参数id是大小写敏感的字符串\\r\\n        - 返回的是一个元素对象\\r\\n        - console.dir()打印元素对象，更好的查看里面的属性和方法\\r\\n        ```js\\r\\n            var time = document.getElementById('time');\\r\\n            console.log(time);\\r\\n        ```\\r\\n    - 根据标签名获取\\r\\n        - getElementsByTagName()    返回带有指定标签名的对象的集合\\r\\n        ```js\\r\\n        var ol = document.getElementsByTagName('ol');\\r\\n        console.log(ol[0].getElementsByTagName('li'));\\r\\n        ```\\r\\n    - 通过HTML5新增的方法获取\\r\\n        - getElementsByClassName()\\r\\n        - querySelector()       返回选择器的第一个对象\\r\\n        - querySelectorAll()    返回选择器的所有对象\\r\\n        ```js\\r\\n        var boxs = document.getElementsByClassName('box');\\r\\n        console.log(boxs);\\r\\n\\r\\n        var firstBox = document.querySelector('.box');\\r\\n        console.log(firstBox);\\r\\n        console.dir(firstBox)\\r\\n\\r\\n        var nav = document.querySelector('#nav');\\r\\n        console.log(nav);\\r\\n        console.dir(nav)\\r\\n\\r\\n        var li  = document.querySelector('li');\\r\\n        console.log(li);\\r\\n\\r\\n        var allbox = document.querySelectorAll('.box');\\r\\n        console.log(allbox);\\r\\n        ```\\r\\n    - 特殊元素获取\\r\\n        - body元素获取: \\r\\n        - html元素获取：\\r\\n        ```js\\r\\n        var bodyEle = document.body;\\r\\n        var htmlEle = document.documentElement;\\r\\n        ```\\r\\n    - 因为文档页面从上往下加载，所以先得有标签，所以我们script写到标签的下面\\r\\n\\r\\n3. 事件基础\\r\\n    - JS使我们有能力创建动态页面，而事件是可以被JS侦测到的行为。\\r\\n    - 简单理解：触发————响应机制\\r\\n    - 页面中的每个元素都可以触发事件\\r\\n    - 事件由三部分组成，事件三要素\\r\\n        - 1. 事件源：事件被触发的对象\\r\\n        - 2. 事件类型：如何触发 什么事件 比如点击鼠标（onclick) 还是鼠标经过 还是键盘按下   onfocus/onblur\\r\\n        - 3. 事件处理程序：通过一个函数赋值的方式完成\\r\\n\\r\\n4. 操作元素\\r\\n    - 更改元素内容\\r\\n        - innerText：不识别html标签 非标准  去除空格和换行\\r\\n        - innerHTML【W3C标准】：识别html标签\\r\\n        - 区别：这两个属性是可读写的，可以获取、写入元素里面的内容\\r\\n    - 元素的属性操作\\r\\n    - 表单的属性操作：type、value、checked、selected、disabled\\r\\n    - 样式属性操作\\r\\n        - element.style     行内样式操作\\r\\n        - element.className 类名样式操作\\r\\n        - js里面的样式采取驼峰命名法(自动转换css中的样式名为驼峰命名)：font-size -> fontSize    background-color -> backgroundColor\\r\\n        - js修改style样式操作，产生的是行内样式，css权重比较高\\r\\n    - 排他思想\\r\\n        - 所有元素全部清除样式\\r\\n        - 给当前元素设置样式\\r\\n    - 属性操作\\r\\n        - 获取属性值\\r\\n            - element.属性                  ：无法获取自定义属性\\r\\n            - element.getAttribute('属性')  ：可以获取自定义属性\\r\\n        - 设置属性值\\r\\n            - element.属性 = '值'               ：只能设置css内置属性\\r\\n            - element.setAttribute('属性','值') ：可以设置css内置属性和自定义属性\\r\\n        - 移除属性\\r\\n            - removeAttribute('属性')\\r\\n        - H5的自定义属性\\r\\n            - 是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。\\r\\n            - H5规定自定义属性data-开头作为属性名并赋值。原因：有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。\\r\\n            - H5新增的获取自定义属性的方法：div[3].dataset.index  (必须是以data-开头，仅IE11以上才支持)\\r\\n            ```js\\r\\n                // css中自定义的以\\\"-\\\"连接的变量，用此法获取时，需转换成驼峰命名法\\r\\n                div[3].dataset.index\\r\\n                等同：\\r\\n                div[3].getAttribute('data-index')\\r\\n            ```\\r\\n\\r\\n5. 节点操作\\r\\n    - 获取元素的方法之一\\r\\n    - 利用节点的层次关系获取元素\\r\\n    - 网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n    - HTML DOM树中所有的节点均可通过JavaScript访问，所有HTML元素（节点）均可被修改，也可以创建或删除。\\r\\n    - 节点至少拥有三个基本属性：nodeType（节点类型）、nodeName（节点名称）、nodeValue（节点值）\\r\\n    - 节点类型：nodeType\\r\\n        - 元素节点【常用】：1\\r\\n        - 属性节点：2\\r\\n        - 文本节点（文字、空格、换行等）：3\\r\\n    - 父节点：node.parentNode\\r\\n        - 得到的是离元素最近的父级节点（亲爸爸），如果找不到则返回null\\r\\n    - 子节点【很少用】：parentNode.childNodes\\r\\n        - 得到的是所有的子节点（包括元素节点、文本节点等）\\r\\n        - 如果只想要获得立面的元素节点，则需要专门处理。所以一般不提倡使用childNodes\\r\\n    - 字元素节点【常用、非标准】：parentNode.children\\r\\n        - 获取所有的子元素节点\\r\\n    - 第一个、最后一个子节点\\r\\n        - firstChild：第一个子节点，不管是文本节点还是元素节点\\r\\n        - lastChild：最后一个子节点，不管是文本节点还是元素节点\\r\\n        - firstElementChild【IE9以上才支持】：第一个子元素节点\\r\\n        - lastElementChild【IE9以上才支持】：最后一个子元素节点\\r\\n        - ul.children[0])：第一个子元素节点\\r\\n        - ul.children[ul.children.length - 1])：最后一个子元素节点\\r\\n    - 兄弟节点\\r\\n        - node.nextSibling：返回当前元素的下一个兄弟节点(不管时文本还是元素等)，找不到则返回null。\\r\\n        - node.previousSibling\\r\\n        - node.nextElementSibling【IE9以上才支持】\\r\\n        - node.previousElementSibling【IE9以上才支持】\\r\\n    - 创建、添加节点\\r\\n        - var li = document.createElement('li');\\r\\n        - node.appendChild(child);  在后面追加元素  node:父级      child:子级\\r\\n        - node.insertBefore(li, ul.children[0]);\\r\\n    - 删除节点\\r\\n        - node.removeChild()\\r\\n    - 复制节点\\r\\n        - node.cloneNode()  参数为空或者false，则是浅拷贝，只复制节点本身，不复制立面的子节点；括号内为true，则为深拷贝，会复制节点本身和里面所有的子节点.\\r\\n    - 三种动态创建元素的区别\\r\\n        - 1. document.write()   创建元素.\\r\\n            - document.write('<div>123</div>');\\r\\n            - 如果页面文档流加载完毕，再调用此方法会导致页面重绘\\r\\n            - 利用数组\\r\\n        - 2. innerHTML\\r\\n            - 拼接字符串创建：td.innerHTML += '<a href=\\\"javascript:;\\\">删除</a>';\\r\\n            - 数组存储字符串然后转换为拼接字符串：for -> arr.push('<a href=\\\"javascript:;\\\">删除</a>') -> arr.join('')\\r\\n            - 创建多个元素效率更高（不要采用拼接字符串，应采用数组存储字符串然后转换为拼接字符串），结构稍微复杂\\r\\n        - 3. document.createElement()\\r\\n            - var td = document.createElement('td');\\r\\n            - 创建多个元素效率稍微低一点点，但是结构更清晰。\\r\\n6. DOM重点核心\\r\\n    - 文档对象模型( Document Object Model，简称DOM )，是W3C组织推荐的处理可扩展标记语言(HTML或者XML)的标准编程接口。\\r\\n    - W3C已经定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容、结构和样式。\\r\\n        - 1. 对于JavaScript，为了能够使JavaScript操作HTML，JavaScript就有了一套自己的dom编程接口。\\r\\n        - 2. 对于HTML,dom使得html形成一棵dom树.包含文档、元素、节点。\\r\\n    - 关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。\\r\\n        - 创建\\r\\n            - 1. document.write\\r\\n            - 2. element.innerHTML\\r\\n            - 3. document.createElement\\r\\n        - 增\\r\\n            - 1. appendChild\\r\\n            - 2. inertBebore\\r\\n        - 删除\\r\\n            - removeChild\\r\\n        - 改：  修改dom的元素属性，dom元素的内容、属性、表单的值的等\\r\\n            - 1. 修改元素属性：src、hrf、title等\\r\\n            - 2. 修改普通元素的内容：innerHTML、innerText\\r\\n            - 3. 修改表单元素：value、type、disabled等\\r\\n            - 4. 修改元素样式：style、className\\r\\n        - 查\\r\\n            - 1. DOM提供的API方法：getELementById、getElementsByTagName古老用法【不太推荐】\\r\\n            - 2. H5提供的新方法：querySelector、querySelectorAll    【推荐】\\r\\n            - 3. 利用节点操作获取元素：父（parentNode）、子（children）、兄（previousElementSibling、nextElementSibling）【推荐】\\r\\n        - 属性操作：主要针对自定义属性\\r\\n            - 1. setAttribute：设置dom的属性值\\r\\n            - 2. getAttribute：得到dom的属性值\\r\\n            - 3. removeAttribute：移除属性\\r\\n        - 事件操作：给元素注册事件\\r\\n            - 1. onclick        鼠标点击左键触发\\r\\n            - 2. onmouseover    鼠标经过触发:mouseover鼠标经过自身盒子会触发，经过子盒子还会触发。mouseenter只会经过自身盒子触发，因为mouseenter不会冒泡\\r\\n            - 3. onmouseout     鼠标离开触发\\r\\n            - 4. onfocus        获得鼠标焦点触发\\r\\n            - 5. onblur         失去鼠标焦点触发\\r\\n            - 6. onmousemove    鼠标移动触发\\r\\n            - 7. onmouseup      鼠标弹起触发\\r\\n            - 8. onmousedown    鼠标按下触发\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1. 简介\\r\\n    - Document Object Model\\r\\n    - W3C组织推荐的处理扩展标记语言（HTML和XML）的接口\\r\\n    - DOM树（文档、元素、节点都看做是对象）：\\r\\n        - 文档：一个页面就是一个文档，DOM中使用document表示\\r\\n        - 元素：页面中的所有标签都是元素，DOM中使用element表示\\r\\n        - 节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n\\r\\n2. 获取元素\\r\\n    - 根据ID获取\\r\\n        - getElementById()\\r\\n        - 参数id是大小写敏感的字符串\\r\\n        - 返回的是一个元素对象\\r\\n        - console.dir()打印元素对象，更好的查看里面的属性和方法\\r\\n        ```js\\r\\n            var time = document.getElementById('time');\\r\\n            console.log(time);\\r\\n        ```\\r\\n    - 根据标签名获取\\r\\n        - getElementsByTagName()    返回带有指定标签名的对象的集合\\r\\n        ```js\\r\\n        var ol = document.getElementsByTagName('ol');\\r\\n        console.log(ol[0].getElementsByTagName('li'));\\r\\n        ```\\r\\n    - 通过HTML5新增的方法获取\\r\\n        - getElementsByClassName()\\r\\n        - querySelector()       返回选择器的第一个对象\\r\\n        - querySelectorAll()    返回选择器的所有对象\\r\\n        ```js\\r\\n        var boxs = document.getElementsByClassName('box');\\r\\n        console.log(boxs);\\r\\n\\r\\n        var firstBox = document.querySelector('.box');\\r\\n        console.log(firstBox);\\r\\n        console.dir(firstBox)\\r\\n\\r\\n        var nav = document.querySelector('#nav');\\r\\n        console.log(nav);\\r\\n        console.dir(nav)\\r\\n\\r\\n        var li  = document.querySelector('li');\\r\\n        console.log(li);\\r\\n\\r\\n        var allbox = document.querySelectorAll('.box');\\r\\n        console.log(allbox);\\r\\n        ```\\r\\n    - 特殊元素获取\\r\\n        - body元素获取: \\r\\n        - html元素获取：\\r\\n        ```js\\r\\n        var bodyEle = document.body;\\r\\n        var htmlEle = document.documentElement;\\r\\n        ```\\r\\n    - 因为文档页面从上往下加载，所以先得有标签，所以我们script写到标签的下面\\r\\n\\r\\n3. 事件基础\\r\\n    - JS使我们有能力创建动态页面，而事件是可以被JS侦测到的行为。\\r\\n    - 简单理解：触发————响应机制\\r\\n    - 页面中的每个元素都可以触发事件\\r\\n    - 事件由三部分组成，事件三要素\\r\\n        - 1. 事件源：事件被触发的对象\\r\\n        - 2. 事件类型：如何触发 什么事件 比如点击鼠标（onclick) 还是鼠标经过 还是键盘按下   onfocus/onblur\\r\\n        - 3. 事件处理程序：通过一个函数赋值的方式完成\\r\\n\\r\\n4. 操作元素\\r\\n    - 更改元素内容\\r\\n        - innerText：不识别html标签 非标准  去除空格和换行\\r\\n        - innerHTML【W3C标准】：识别html标签\\r\\n        - 区别：这两个属性是可读写的，可以获取、写入元素里面的内容\\r\\n    - 元素的属性操作\\r\\n    - 表单的属性操作：type、value、checked、selected、disabled\\r\\n    - 样式属性操作\\r\\n        - element.style     行内样式操作\\r\\n        - element.className 类名样式操作\\r\\n        - js里面的样式采取驼峰命名法(自动转换css中的样式名为驼峰命名)：font-size -> fontSize    background-color -> backgroundColor\\r\\n        - js修改style样式操作，产生的是行内样式，css权重比较高\\r\\n    - 排他思想\\r\\n        - 所有元素全部清除样式\\r\\n        - 给当前元素设置样式\\r\\n    - 属性操作\\r\\n        - 获取属性值\\r\\n            - element.属性                  ：无法获取自定义属性\\r\\n            - element.getAttribute('属性')  ：可以获取自定义属性\\r\\n        - 设置属性值\\r\\n            - element.属性 = '值'               ：只能设置css内置属性\\r\\n            - element.setAttribute('属性','值') ：可以设置css内置属性和自定义属性\\r\\n        - 移除属性\\r\\n            - removeAttribute('属性')\\r\\n        - H5的自定义属性\\r\\n            - 是为了保存并使用数据。有些数据可以保存到页面中而不用保存到数据库中。\\r\\n            - H5规定自定义属性data-开头作为属性名并赋值。原因：有些自定义属性很容易引起歧义，不容易判断是元素的内置属性还是自定义属性。\\r\\n            - H5新增的获取自定义属性的方法：div[3].dataset.index  (必须是以data-开头，仅IE11以上才支持)\\r\\n            ```js\\r\\n                // css中自定义的以\\\"-\\\"连接的变量，用此法获取时，需转换成驼峰命名法\\r\\n                div[3].dataset.index\\r\\n                等同：\\r\\n                div[3].getAttribute('data-index')\\r\\n            ```\\r\\n\\r\\n5. 节点操作\\r\\n    - 获取元素的方法之一\\r\\n    - 利用节点的层次关系获取元素\\r\\n    - 网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示\\r\\n    - HTML DOM树中所有的节点均可通过JavaScript访问，所有HTML元素（节点）均可被修改，也可以创建或删除。\\r\\n    - 节点至少拥有三个基本属性：nodeType（节点类型）、nodeName（节点名称）、nodeValue（节点值）\\r\\n    - 节点类型：nodeType\\r\\n        - 元素节点【常用】：1\\r\\n        - 属性节点：2\\r\\n        - 文本节点（文字、空格、换行等）：3\\r\\n    - 父节点：node.parentNode\\r\\n        - 得到的是离元素最近的父级节点（亲爸爸），如果找不到则返回null\\r\\n    - 子节点【很少用】：parentNode.childNodes\\r\\n        - 得到的是所有的子节点（包括元素节点、文本节点等）\\r\\n        - 如果只想要获得立面的元素节点，则需要专门处理。所以一般不提倡使用childNodes\\r\\n    - 字元素节点【常用、非标准】：parentNode.children\\r\\n        - 获取所有的子元素节点\\r\\n    - 第一个、最后一个子节点\\r\\n        - firstChild：第一个子节点，不管是文本节点还是元素节点\\r\\n        - lastChild：最后一个子节点，不管是文本节点还是元素节点\\r\\n        - firstElementChild【IE9以上才支持】：第一个子元素节点\\r\\n        - lastElementChild【IE9以上才支持】：最后一个子元素节点\\r\\n        - ul.children[0])：第一个子元素节点\\r\\n        - ul.children[ul.children.length - 1])：最后一个子元素节点\\r\\n    - 兄弟节点\\r\\n        - node.nextSibling：返回当前元素的下一个兄弟节点(不管时文本还是元素等)，找不到则返回null。\\r\\n        - node.previousSibling\\r\\n        - node.nextElementSibling【IE9以上才支持】\\r\\n        - node.previousElementSibling【IE9以上才支持】\\r\\n    - 创建、添加节点\\r\\n        - var li = document.createElement('li');\\r\\n        - node.appendChild(child);  在后面追加元素  node:父级      child:子级\\r\\n        - node.insertBefore(li, ul.children[0]);\\r\\n    - 删除节点\\r\\n        - node.removeChild()\\r\\n    - 复制节点\\r\\n        - node.cloneNode()  参数为空或者false，则是浅拷贝，只复制节点本身，不复制立面的子节点；括号内为true，则为深拷贝，会复制节点本身和里面所有的子节点.\\r\\n    - 三种动态创建元素的区别\\r\\n        - 1. document.write()   创建元素.\\r\\n            - document.write('<div>123</div>');\\r\\n            - 如果页面文档流加载完毕，再调用此方法会导致页面重绘\\r\\n            - 利用数组\\r\\n        - 2. innerHTML\\r\\n            - 拼接字符串创建：td.innerHTML += '<a href=\\\"javascript:;\\\">删除</a>';\\r\\n            - 数组存储字符串然后转换为拼接字符串：for -> arr.push('<a href=\\\"javascript:;\\\">删除</a>') -> arr.join('')\\r\\n            - 创建多个元素效率更高（不要采用拼接字符串，应采用数组存储字符串然后转换为拼接字符串），结构稍微复杂\\r\\n        - 3. document.createElement()\\r\\n            - var td = document.createElement('td');\\r\\n            - 创建多个元素效率稍微低一点点，但是结构更清晰。\\r\\n6. DOM重点核心\\r\\n    - 文档对象模型( Document Object Model，简称DOM )，是W3C组织推荐的处理可扩展标记语言(HTML或者XML)的标准编程接口。\\r\\n    - W3C已经定义了一系列的DOM接口，通过这些DOM接口可以改变网页的内容、结构和样式。\\r\\n        - 1. 对于JavaScript，为了能够使JavaScript操作HTML，JavaScript就有了一套自己的dom编程接口。\\r\\n        - 2. 对于HTML,dom使得html形成一棵dom树.包含文档、元素、节点。\\r\\n    - 关于dom操作，我们主要针对于元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。\\r\\n        - 创建\\r\\n            - 1. document.write\\r\\n            - 2. element.innerHTML\\r\\n            - 3. document.createElement\\r\\n        - 增\\r\\n            - 1. appendChild\\r\\n            - 2. inertBebore\\r\\n        - 删除\\r\\n            - removeChild\\r\\n        - 改：  修改dom的元素属性，dom元素的内容、属性、表单的值的等\\r\\n            - 1. 修改元素属性：src、hrf、title等\\r\\n            - 2. 修改普通元素的内容：innerHTML、innerText\\r\\n            - 3. 修改表单元素：value、type、disabled等\\r\\n            - 4. 修改元素样式：style、className\\r\\n        - 查\\r\\n            - 1. DOM提供的API方法：getELementById、getElementsByTagName古老用法【不太推荐】\\r\\n            - 2. H5提供的新方法：querySelector、querySelectorAll    【推荐】\\r\\n            - 3. 利用节点操作获取元素：父（parentNode）、子（children）、兄（previousElementSibling、nextElementSibling）【推荐】\\r\\n        - 属性操作：主要针对自定义属性\\r\\n            - 1. setAttribute：设置dom的属性值\\r\\n            - 2. getAttribute：得到dom的属性值\\r\\n            - 3. removeAttribute：移除属性\\r\\n        - 事件操作：给元素注册事件\\r\\n            - 1. onclick        鼠标点击左键触发\\r\\n            - 2. onmouseover    鼠标经过触发:mouseover鼠标经过自身盒子会触发，经过子盒子还会触发。mouseenter只会经过自身盒子触发，因为mouseenter不会冒泡\\r\\n            - 3. onmouseout     鼠标离开触发\\r\\n            - 4. onfocus        获得鼠标焦点触发\\r\\n            - 5. onblur         失去鼠标焦点触发\\r\\n            - 6. onmousemove    鼠标移动触发\\r\\n            - 7. onmouseup      鼠标弹起触发\\r\\n            - 8. onmousedown    鼠标按下触发\"}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"事件高级\"},\"children\":[{\"type\":\"text\",\"value\":\"事件高级-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-注册事件绑定事件\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 注册事件（绑定事件）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"利用on开头的事件\\r\\n- 注册事件的唯一性\\r\\n- 同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数将会覆盖前面注册的处理函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"addEventListener()    【IE9之前不支持】\\r\\n- eventTarget.addEventListener(type,listener\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\",useCapture\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- type：事件类型字符串，比如click、mouseover，注意这里不要带on\\r\\n- listener：事件处理函数，事件发生时，会调用该监听函数\\r\\n- useCapture：可选参数，是一个布尔值，默认是false。\\r\\n- 同一个元素、同一个事件可以添加多个监听器\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"attachEvent()【IE9之前的IE用此法】\\r\\n- eventTarget.attachEvent(eventNameWithOn,callback)\\r\\n- 事件类型字符串，比如click、mouseover，这里要带on\\r\\n- 事件处理函数，当目标触发事件时回调函数被调用\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-删除事件解绑事件\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 删除事件（解绑事件）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"event.Target = null;\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       divs[0].onclick = null;       divs[1].removeEventListener('click', fn);       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-dom事件流\"},\"children\":[{\"type\":\"text\",\"value\":\"3. DOM事件流\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件流描述的是从页面中接收事件的顺序。事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即DOM事件流。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"分为3个阶段\\r\\n- 我们向水里面扔一块石头，首先它会有一个下降的过程，这个过程就可以理解为从最顶层向事件发生的最具体元素（目标点)的捕获过程;之后会产生泡泡，会在最低点（最具体元素）之后漂浮到水面上，这个过程相当于事件冒泡。\\r\\n- 1. 捕获阶段       ：事件捕获∶网景最早提出，由DOM最顶层节点开始，然后逐级向下传播到到最具体的元素接收的过程\\r\\n- 2. 当前目标阶段\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 3. 冒泡阶段       ：事件冒泡:IE最早提出，事件开始时由最具体的元素接收，然后逐级向上传播到到DOM最顶层节点的过程。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - 1. Js 代码中只能执行捕获或者冒泡其中的一个阶段。\\r\\n  - 2. onclick和attachEvent只能得到冒泡阶段。\\r\\n  - 3. addEventListener(type,listener[,useCapture])第三个参数如果是 true，表示在事件捕获阶段调用事件处理福序：document->html->body->father->son;  如果是false(不写默认就是false )，表示在事件冒泡阶段调用事件处理程序。\\r\\n  - 4. 实际开发中我们很少使用事件捕获，我们更关注事件冒泡。\\r\\n  - 5. 有些事件是没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave\\r\\n  - 6. 事件冒泡有时候会带来麻烦，有时候又会帮助很巧妙的做某些事件，我们后面讲解。\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"  - 1. Js 代码中只能执行捕获或者冒泡其中的一个阶段。\\r\\n  - 2. onclick和attachEvent只能得到冒泡阶段。\\r\\n  - 3. addEventListener(type,listener[,useCapture])第三个参数如果是 true，表示在事件捕获阶段调用事件处理福序：document->html->body->father->son;  如果是false(不写默认就是false )，表示在事件冒泡阶段调用事件处理程序。\\r\\n  - 4. 实际开发中我们很少使用事件捕获，我们更关注事件冒泡。\\r\\n  - 5. 有些事件是没有冒泡的，比如onblur、onfocus、onmouseenter、onmouseleave\\r\\n  - 6. 事件冒泡有时候会带来麻烦，有时候又会帮助很巧妙的做某些事件，我们后面讲解。\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-事件对象\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 事件对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"div.onclick = function(event){}\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"event 就是一个事件对象，写到侦听函数的小括号里面，当形参来看\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象只有有了事件才会存在，它是系统给我们自动创建的，不需要我们传递参数\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象是我们事件的一系列相关数据的集合跟事件相关的比如鼠标点击里面就包含了鼠标的相关信息，鼠标坐标啊，如果是键盘事件里面就包含的键盘事件的信息比如判断用户按下了那个键。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"时间对象可以自己命名，比如event、evt、e\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件对象也有兼容性问题，ie6 7 8浏览器不会给方法传递参数，如果需要的话，需要到window.event中获取查找。console.log(window.event)。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"e.target\"}]},{\"type\":\"text\",\"value\":\"                  指向点击的那个对象（元素），谁触发了事件，指向的就是谁。有可能是子元素触发了父元素的事件，则返回的是子元素。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"strong\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"this/e.currentTarget\"}]},{\"type\":\"text\",\"value\":\"      指向的是绑定事件的对象（元素）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"其他常见事件对象的属性和方法\\r\\n- e.target\\r\\n- e.type                返回事件的类型，比如click、mouseover，不带on\\r\\n- e.cancelBubble        该属性阻止冒泡（非标准、ie6-8使用）\\r\\n- e.returnValue         该属性阻止默认事件（默认行为）（非标准、ie6-8使用，比如不让链接跳转）\\r\\n- e.preventDefault()    该方法阻止默认事件（默认行为）（标准，比如不让链接跳转）\\r\\n- e.stopPropagation()   阻止冒泡（标准）【推荐】\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-阻止事件冒泡\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 阻止事件冒泡\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-事件委托代理委派\"},\"children\":[{\"type\":\"text\",\"value\":\"6. 事件委托（代理、委派）\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"事件委托的原理不是每个子节点单独设置事件监听器，而是事件监听器设置在其父节点上，然后利用冒泡原理影响设置每个子节点。\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       var ul = document.querySelector('div.event-agent');       ul.addEventListener('click', function (e) {           e.target.style.backgroundColor = 'pink';       })       \"}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-常用的鼠标事件\"},\"children\":[{\"type\":\"text\",\"value\":\"7. 常用的鼠标事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"禁止鼠标右键菜单\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('contextmenu', function (e) {           e.preventDefault();     //禁用右键菜单       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"禁止选中文字\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('selectstart', function (e) {           e.preventDefault();     //禁止选中文字       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"MouseEvent\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       document.addEventListener('click', function (e) {           console.log(e);           console.log(e.clientX);     //返回鼠标相对于浏览器窗口可视区的X坐标           console.log(e.clientY);     //返回鼠标相对于浏览器窗口可视区的Y坐标           console.log(e.pageX);       //返回鼠标相对于文档页面的X坐标     IE9+支持           console.log(e.pageY);       //返回鼠标相对于文档页面的Y坐标     IE9+支持           console.log(e.screenX);     //返回鼠标相对于电脑屏幕的X坐标           console.log(e.screenY);     //返回鼠标相对于电脑屏幕的Y坐标       })       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"mousemove:只要鼠标移动1px，就会触发这个事件\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"8-常用的键盘事件\"},\"children\":[{\"type\":\"text\",\"value\":\"8. 常用的键盘事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeyup       某个键盘案件被弹起时触发\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeydown     某个键盘按键被按下时触发\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"onkeypress    某个键盘按键被按下时触发（但不识别功能键，比如ctrl shift 箭头等）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"三个事件的执行顺序：keydown -> keypress -> keyup\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"键盘事件对象中的keyCode属性可以得到相应键的ASCII码值\\r\\n- 我们的keyup和keydown事件不区分字母大小写a和A得到的都是65\\r\\n- 我们的keypress 事件区分字母大小写 a ->97  和  A -> 65\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"bom浏览器对象模型\"},\"children\":[{\"type\":\"text\",\"value\":\"BOM浏览器对象模型-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-bom概述\"},\"children\":[{\"type\":\"text\",\"value\":\"1. BOM概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM ( Browser Object Model )即浏览器对象模型，它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是window。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM由一系列相关的对象构成，并且每个对象都提供了很多方法与属性。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM缺乏标准，JavaScript语法的标准化组织是ECMA，DOM的标准化组织是W3C，BOM最初是Netscape浏览器标准的一部分。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DOM\\r\\n- 文档对象模型\\r\\n- DOM就是把「文档」当做一个「对象」来看待\\r\\n- DOM的顶级对象是document\\r\\n- DOM主要学习的是操作页面元素\\r\\n- DOM是W3C标准规范\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"BOM\\r\\n- 浏览器对象模型\\r\\n- 把「浏览器」当做一个「对象」来看待\\r\\n- BOM的顶级对象是window\\r\\n- BOM学习的是浏览器窗口交互的一些对象\\r\\n- BOM是浏览器厂商在各自浏览器上定义的，兼容性较差\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"window对象是浏览器的顶级对象，它具有双重角色。\\r\\n- 1. 它是JS访问浏览器窗口的一个接口。\\r\\n- 2. 它是一个全局对象。定义在全局作用域中的变量、函数都会变成window对象的属性和方法。\\r\\n- 在调用的时候可以省略window，前面学习的对话框都属于window对象方法，如 alert()、prompt()等。\\r\\n- 注意:window下的一个特殊属性window.name\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-window对象的常见事件\"},\"children\":[{\"type\":\"text\",\"value\":\"2. window对象的常见事件\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"页面加载事件\\r\\n- load：等页面内容全部加载完毕，包含页面dom元素、图片、flash、css等\\r\\n- DOMContentLoaded：事件触发时，仅当DOM加载完成。不包括样式表、图片、flash等。【ie9以上才支持】\\r\\n- 如果页面的图片很多的话,从用户访问到onload触发可能需要较长的时间,交互效果就不能实现，必然影响用户的体验，此时用DOMContentLoaded事件比较合适。\\r\\n```js\\r\\nwindow.addEventListener('load', function () {\\r\\nvar btn = document.querySelector('button');\\r\\nbtn.addEventListener('click', function () {\\r\\nalert('11');\\r\\n})\\r\\n})\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"      document.addEventListener('DOMContentLoaded', function () {\\r\\n          var btn = document.querySelector('button');\\r\\n          btn.addEventListener('click', function () {\\r\\n              alert('11');\\r\\n          })\\r\\n      })\\r\\n      ```\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"      document.addEventListener('DOMContentLoaded', function () {\\r\\n          var btn = document.querySelector('button');\\r\\n          btn.addEventListener('click', function () {\\r\\n              alert('11');\\r\\n          })\\r\\n      })\\r\\n      ```\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"调整窗口大小事件\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"    window.onresize = function(){}\\r\\n    window.addEventListener('resize',function(){})\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    window.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"onresize\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(){}\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    window.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"addEventListener\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'resize'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\",\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(){})\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-定时器\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 定时器\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"setTimeout(调用函数,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\"如果省略，默认为0立即调用\\r\\n- 延迟时间到了就去调用函数，只调用一次\\r\\n- clearTimeout(timeoutID)\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js       function boom() {           console.log('boom!!!');       }       // 开始定时器       var time = setTimeout(boom, 1000);       // 停止定时器       clearTimeout(time);       \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"setInterval(调用函数,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"延迟的毫秒数\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- 重复调用一个函数，每隔这个时间，就去调用一次回调函数\\r\\n- clearInterval(iintervalID)\\r\\n- 代码用法砼setTimeout\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-1-this指向问题\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 1. this指向问题\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"this 一般情况下this的最终指向的是那个调用它的对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"1．全局作用域或者普通函数中this指向全局对象window（注意定时器里面的this指向window）\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"2．方法调用中谁调用this指向谁\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"3．构造函数中this指向构造函数的实例\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-js执行机制\"},\"children\":[{\"type\":\"text\",\"value\":\"4. JS执行机制\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。这是因为Javascript这门脚本语言诞生的使命所致——JavaScript是为处理页面中用户的交互，以及操作DOM而诞生的。比如我们对某个DOM元素进行添加和删除操作，不能同时进行。应该先进行添加，之后再删除。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个路。这样所导致的问题是:如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同步和异步：为了解决这个问题，利用多核CPU的计算能力，HTML5提出 Web Worker标准，允许JavaScript脚本创建多个线程。于是，JS中出现了同步和异步。\\r\\n- 同步：前一个任务结束后再执行后一个任务，程序的执行顺序与任务的排列顺序是一致的、同步的。比如做饭的同步做法∶我们要烧水煮饭，等水开了( 10分钟之后），再去切菜，炒菜。\\r\\n- 异步：你在做一件事情时，因为这件事情会花费很长时间，在做这件事的同时，你还可以去处理其他事情。比如做饭的异步做法，我们在烧水的同时，利用这10分钟，去切菜，炒菜。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"同步任务：同步任务都在主线程上执行，形成一个执行栈\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"异步任务：JS的异步是通过回调函数实现的。异步任务相关回调函数添加到任务队列中（任务队列也成为消息队列）\\r\\n- 普通事件：click、resize等\\r\\n- 资源加载：load、error等\\r\\n- 定时器：包括setInterval、setTimeout等\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"执行机制：\\r\\n- 1. 先执行执行栈中的同步任务\\r\\n- 2. 异步任务（回调函数）放入任务队列中\\r\\n- 3. 一旦执行栈中的所有同步任务执行完毕，系统就会按次序读取任务队列中的异步任务，于是被读取的异步任务结束等待状态，进入执行栈，开始执行。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-location对象\"},\"children\":[{\"type\":\"text\",\"value\":\"5. location对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"window对象给我们提供了一个location属性用于获取或设置窗体的URL，并且可以用于解析URL。因为这个属性返回的是一个对象,所以我们将这个属性也称为location对象。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"protocol://host \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"port\",\"props\":{},\"children\":[]}]},{\"type\":\"text\",\"value\":\"/path/ \"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\" 2query\"}]},{\"type\":\"text\",\"value\":\" #fragment\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.itcast.cn/index.html?name=andy&age=18#link\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.itcast.cn/index.html?name=andy&age=18#link\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- protocol：通信协议，常用的http、https、ftp、mailto等\\r\\n- host：主机（域名）：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.itcast.cn\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"www.itcast.cn\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- port：端口号（可选），省略时使用方案默认的端口，如http的默认端口为80\\r\\n- path：路径。由零或多个'/'符号隔开的字符串，一般用来表示主机上的一个目录或文件地址\\r\\n- query：参数 以键值对的形式，通过&符号分隔开来\\r\\n- fragment：片段 #后面的内容，常见于连接、锚点\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"location对象的常用属性\\r\\n- location.href         获取或设置整个URL\\r\\n- location.host         返回主机（域名）\\r\\n- location.port         返回端口号\\r\\n- location.pathname     返回路径\\r\\n- location.search       返回参数\\r\\n- location.hash         返回片段\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"location对象中的方法\\r\\n- location.assign()     跟href一样，可以跳转页面，记录浏览历史，可以实现后退\\r\\n- location.replace()    替换当前页面，因为不记录历史，所以不能后退页面\\r\\n- location.reload()     重新加载页面，相当于刷新按钮或者F5，如果参数为true强制刷新ctrl+F5\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"var btn = document.querySelector('button');\\r\\nvar div = document.querySelector('div');\\r\\nbtn.addEventListener('click', function () {\\r\\n    // console.log(location.href);\\r\\n    var remainTime = 5;\\r\\n    skip();\\r\\n    var skipTime = setInterval(skip, 1000)\\r\\n    function skip() {\\r\\n        div.innerHTML = '您将在' + remainTime + '秒后进入IT之家首页...';\\r\\n        if (remainTime <= 0) {\\r\\n            clearInterval(skipTime);\\r\\n            location.href = 'https://www.ithome.com';\\r\\n        }\\r\\n        remainTime--;\\r\\n    }\\r\\n})\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" btn \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" document.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"querySelector\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'button'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" div \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" document.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"querySelector\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'div'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\");\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"btn.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"addEventListener\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'click'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\", \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" () {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"// console.log(location.href);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" remainTime \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"5\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"skip\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"();\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"var\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" skipTime \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"setInterval\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(skip, \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"1000\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"function\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"skip\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"() {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"        div.innerHTML \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'您将在'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" remainTime \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"+\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'秒后进入IT之家首页...'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"        \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" (remainTime \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"<=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\") {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"            \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-3ef978\"},\"children\":[{\"type\":\"text\",\"value\":\"clearInterval\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"(skipTime);\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"            location.href \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"'https://www.ithome.com'\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"        }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"        remainTime\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"--\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    }\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"})\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-navigator对象\"},\"children\":[{\"type\":\"text\",\"value\":\"6. navigator对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"navigator对象包含有关浏览器的信息，它有很多属性，我们最常用的是userAgent，该属性可以返回由客户机发送服务器的user-agent头部的值。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"下面前端代码可以判断用户那个终端打开页面，实现跳转\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  if ((navigator.userAgent.match((/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|WOSBrowser|BrowserNG|WebOS|Symbian|Window Phone)/i)))) {\\r\\n    window.location.href = '';   //手机\\r\\n  } else {\\r\\n      window.location.href = '';    //电脑\\r\\n  }\\n\",\"language\":\"js\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"if\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" ((navigator.userAgent.\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-4e64ee\"},\"children\":[{\"type\":\"text\",\"value\":\"match\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"((\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"/(phone\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"pad\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"pod\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"iPhone\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"iPod\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"ios\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"iPad\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"Android\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"Mobile\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"BlackBerry\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"IEMobile\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"MQQBrowser\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"JUC\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"Fennec\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"WOSBrowser\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"BrowserNG\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"WebOS\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"Symbian\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"|\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"Window Phone)/\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"i\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\")))) {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"    window.location.href \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"''\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";   \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"//手机\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  } \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"else\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" {\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"      window.location.href \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-266ca3\"},\"children\":[{\"type\":\"text\",\"value\":\"=\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\" \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-9526f4\"},\"children\":[{\"type\":\"text\",\"value\":\"''\"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\";    \"}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-62c0d5\"},\"children\":[{\"type\":\"text\",\"value\":\"//电脑\"}]}]},{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"ct-a4d404\"},\"children\":[{\"type\":\"text\",\"value\":\"  }\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"7-history对象\"},\"children\":[{\"type\":\"text\",\"value\":\"7. history对象\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"back()        后退功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"forward()     前进功能\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"go(参数)      前进后退功能，如果参数是1前进1个页面，参数是-1后退1个页面\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"pc端网页特效\"},\"children\":[{\"type\":\"text\",\"value\":\"PC端网页特效\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-元素偏移量offset系列\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 元素偏移量offset系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"offset翻译过来就是偏移量，我们使用offset系列相关属性可以动态的得到该元素的位置（偏移)、大小等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"获得元素距离带有定位父元素的位置\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"获得元素自身的大小(宽度高度)注意:返回的数值都不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常用属性：\\r\\n- element.offsetParent      返回作为该元素带有定位的父级元素如果父级都没有定位则返回body\\r\\n- element.offsetTop         返回元素相对带有定位父元素上方的偏移\\r\\n- element.offsetLeft        返回元素相对带有定位父元素左边框的偏移\\r\\n- element.offsetWidth       返回自身包括padding 、边框、内容区的宽度，返回数值不带单位\\r\\n- element.offsetHeight      返回自身包括padding、边框、内容区的高度，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"offset与style区别\\r\\n- offset可以得到任意样式表中的样式值offset系列获得的数值是没有单位的\\r\\n- offsetWidth 包含padding+border +width\\r\\n- offsetWidth 等属性是只读属性，只能获取不能喊值\\r\\n- 所以，我们想要获取元素大小位置，用offset更合适\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - style只能得到行内样式表中的样式值\\r\\n  - style.width获得的是带有单位的字符串\\r\\n  - style.width获得不包含padding和border的值\\r\\n  - style.width是可读写属性，可以获取也可以赋值\\r\\n  - 所以，我们想要给元素更改值，则需要用style改变\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"  - style只能得到行内样式表中的样式值\\r\\n  - style.width获得的是带有单位的字符串\\r\\n  - style.width获得不包含padding和border的值\\r\\n  - style.width是可读写属性，可以获取也可以赋值\\r\\n  - 所以，我们想要给元素更改值，则需要用style改变\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-元素可视区client系列\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 元素可视区client系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"client翻译过来就是客户端，我们使用client系列的相关属性来获取元素可视区的相关信息。通过client系列的相关属性可以动态的得到该元素的边框大小、元素大小等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientTop         返回元素上边框的大小\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientLeft        返回元素左边框的大小\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientWidth       返回自身包括padding、内容区的宽度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.clientHeight      返回自身包括padding、内容区的高度，不含边框，返回数值不带单位\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-立即执行函数\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 立即执行函数\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"不需要调用，立马就能执行的函数\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"(function(){})();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"(function(){}());\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"立即执行函数最大作用就是，独立创建了一个作用域，里面所有的变量都是局部变量，不会有命名冲突的情况\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"flexible.js\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-元素滚动scoll系列\"},\"children\":[{\"type\":\"text\",\"value\":\"3. 元素滚动scoll系列\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"scroll翻译过来就是滚动的，我们使用scroll系列的相关属性可以动态的得到该元素的大小、滚动距离等。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollTop         返回被卷去的上侧距离，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollLeft        返被卷去的左侧距离，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollWidth       返回自身实际的宽度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"element.scrollHeight      返回自身实际的高度，不含边框，返回数值不带单位\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"页面被卷去的头部:可以通过window.pageYOffset 获得如果是被卷去的左侧window.pageXOffset\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-动画函数封装\"},\"children\":[{\"type\":\"text\",\"value\":\"4. 动画函数封装\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"核心原理:通过定时器setlnterval(不断移动盒子位置。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"实现步骤∶\\r\\n- 1. 获得盒子当前位置\\r\\n- 2. 让盒子在当前位置加上1个移动距离3.利用定时器不断重复这个操作\\r\\n- 4. 加一个结束定时器的条件\\r\\n- 5. 注意此元素需要添加定位，才能使用element.style.left\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"缓动动画原理：\\r\\n- 缓动动画就是让元素运动速度有所变化，最常见的是让速度慢慢停下来\\r\\n- 1.让盒子每次移动的距离慢慢变小，速度就会慢慢落下来。\\r\\n- 2.核心算法∶(目标值-现在的位置)/ 10做为每次移动的距离步长\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"动画函数添加回调函数\\r\\n- 回调函数原理∶函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程就叫做回调。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"节流阀以及逻辑中断应用\\r\\n- if(flag){flag = false;do something};\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-常见网页特效案例\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 常见网页特效案例\"}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"本地存储\"},\"children\":[{\"type\":\"text\",\"value\":\"本地存储-\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"随着互联网的快速发展，基于网页的应用越来越普遍，同时也变的越来越复杂，为了满足各种各样的需求，会经常性在本地存储大量的数据，HTML5规范提出了相关解决方案。\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-windowsessionstorage\"},\"children\":[{\"type\":\"text\",\"value\":\"1. window.sessionStorage\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"生命周期为关闭浏览器窗口\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"在同一个窗口(页面)下数据可以共享\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以键值对的形式存储使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.setItem(key,value)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.getItem(key)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.removeItem(key)    //删除指定数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"sessionStorage.clear()            //删除所有数据\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-windowlocalstorage\"},\"children\":[{\"type\":\"text\",\"value\":\"2. window.localStorage\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"生命周期永久生效，除非手动删除否则关闭页面也会存在\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"可以多窗口(页面)共享(同一浏览器可以共享，要求必须是同一个域名下)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"以键值对的形式存储使用\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.setItem(key,value)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.getItem(key)\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.removeItem(key)    //删除指定数据\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"localStorage.clear()            //删除所有数据\"}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"jquery\"},\"children\":[{\"type\":\"text\",\"value\":\"JQuery-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-javascript库\"},\"children\":[{\"type\":\"text\",\"value\":\"1. JavaScript库\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"JavaScript库:即 library，是一个封装好的特定的集合（方法和函数)。从封装一大堆函数的角度理解库，就是在这个库中，封装了很多预先定义好的函数在里面，比如动画animate、hide、show，比如获取元素等。简单理解:就是一个JS文件，里面对我们原生js代码进行了封装，存放到里面。这样我们可以快速高效的使用这些封装好的功能了。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"比如jQuery，就是为了快速方便的操作DOM，里面基本都是函数(方法)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常见的JavaScript库\\r\\n- jQuery\\r\\n- Prototype\\r\\n- Yul\\r\\n- Dojo\\r\\n- Ext JS\\r\\n- 移动端的zepto\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-jquery概述\"},\"children\":[{\"type\":\"text\",\"value\":\"2. jQuery概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"概念\\r\\n- jQuery是一个快速、简洁的JavaScript库，其设计的宗旨是“write Less , Do More”，即倡导写更少的代码，做更多的事情。\\r\\n- j就是JavaScript ;Query查询;意思就是查询js，把js中的DOM操作做了封装，我们可以快速的查询使用里面的功能。\\r\\n- jQuery封装了JavaScript常用的功能代码，优化了DOM操作、事件处理、动画设计和Ajax交互。\\r\\n- 学习jQuery本质:就是学习调用这些函数(方法)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"优点：\\r\\n- 轻量级。核心文件才几十kb，不会影响页面加载速度跨浏览器兼容。基本兼容了现在主流的浏览器\\r\\n- 链式编程、隐式迭代\\r\\n- 对事件、样式、动画支持，大大简化了DOM操作支持插件扩展开发。有着丰富的第三方的插件，例收∶树形菜单、日期控件、轮播图等\\r\\n- 免费、开源\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-jquery基本使用\"},\"children\":[{\"type\":\"text\",\"value\":\"3. jQuery基本使用\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$同时也是JQuery的顶级对象\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"用原生JS获取来的对象就是DOM对象\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":2},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery方法获取的元素就是jQuery对象,jQuery是伪数组。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":3},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery对象不能使用原生js的属性和方法\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":4},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"DOM对象与jQuery对象之间是可以相互转换的。因为原生js比jQuery更大，原生的一些属性和方法jQuery没有给我们封装.要想使用这些属性和方法需要把jQuery对象转换为DOM对象才能使用。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":5},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$('div')\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"0\"}]},{\"type\":\"text\",\"value\":\"                        jQuery转换为dom对象。\"}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"ol\",\"props\":{\"start\":6},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(document.querySelector('div'))   DOM对象转换为jQuery对象\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-jquery常用api\"},\"children\":[{\"type\":\"text\",\"value\":\"4. jQuery常用API\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 选择器\\r\\n- 基本和层级选择器\\r\\n- $(“选择器”）//里面选择器直接写CSS选择器即可，但是要加引号\\r\\n- ID选择器      $(\\\"#id\\\")        获取指定ID的元素\\r\\n- 全选选择器    $('*')          匹配所有元素\\r\\n- 类选择器      $(\\\".class\\\")     获取同一类class的元素\\r\\n- 标签选择器    $(\\\"div\\\")        获取同一类标签的所有元素\\r\\n- 并集选择器    $(\\\"div,p,li\\\")   选取多个元素\\r\\n- 交集选择器    $(\\\"li.current\\\") 交集元素\\r\\n- 隐式迭代\\r\\n- $(\\\"div\\\").css(\\\"background\\\",\\\"red\\\");\\r\\n- 遍历内部 DOM元素（伪数组形式存储)的过程就叫做隐式迭代。\\r\\n- 简单理解∶给匹配到的所有元素进行循环遍万，执行相应的方法，而不用我们再进行循环，简化我们的操作方便我们调用。\\r\\n- 隐式迭代就是把匹配的所有元素内部进行遍历循环，给每一个元素添加css这个方法\\r\\n- jQuery 筛选选择器\\r\\n- \"},{\"type\":\"element\",\"tag\":\"first\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"        $('li:first')   获取第一个li元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"last\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"         $('li:last')    获取最后一个li元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"eq\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"(index)    $(\\\"li:eq(2)\\\")   获取到的li元素中，选择索引号为2的元素，索引号index从0开始。\\r\\n- \"},{\"type\":\"element\",\"tag\":\"odd\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"          $(\\\"li:odd\\\")     获取到的li元素中，选择索引号为奇数的元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"even\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"         $(\\\"li:even\\\")    获取到的li元素中，选择索引号为偶数的元素\\r\\n- jQuery 筛选方法\\r\\n- parent()              $(\\\"1i\\\").parent();                   查找父级\\r\\n- children(selector)    $(\\\"ul\\\").children(\\\"li\\\")              相当于$(\\\"u1>li\\\")，最近一级(亲儿子)\\r\\n- find(selector)        $(\\\"ul\\\").find(\\\"li\\\");                 相当于$(\\\"ul li\\\"),后代选择器\\r\\n- siblings(selector)    $(\\\".first\\\").siblings(\\\"li\\\");         查找兄弟节点，不包括自己本身。  -> 可用于排他思想\\r\\n- nextAll(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"expr\"}]},{\"type\":\"text\",\"value\":\")       $(\\\".first\\\").nextAll()               查找当前元素之后所有的同辈元素\\r\\n- prevtAll(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"expr\"}]},{\"type\":\"text\",\"value\":\")      $(\\\".last\\\").prevAll()                查找当前元素之前所有的同辈元素\\r\\n- hasClass(class)       $('div').hasClass(\\\"protected\\\")      检查当前的元素是否含有某个特定的类,如果有，则返回true\\r\\n- eq(index)             $(\\\"1i\\\").ea(2);                      相当于$(\\\"li:ea(2)\\\") ,index从0开始\\r\\n- 链式编程\\r\\n- $(this).css(\\\"color\\\",\\\"red\\\").siblings().css(\\\"color\\\",\\\"\\\");\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 样式操作\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 操作css方法\\r\\n- jQuery可以使用css方法来修改简单元素样式;也可以操作类，修改多个样式。\\r\\n- 1. 参数只写属性名，则是返回属性值\\r\\n- $(this).css(\\\"color\\\");\\r\\n- 2. 参数是属性名，属性值，逗号分隔，是设置一组样式，属性必须加引号，值如果是数字可以不用跟单位和引号\\r\\n- $(this).css(\\\"color\\\", \\\"red\\\");\\r\\n- 3. 参数可以是对象形式，方便设置多组样式。属性名和属性值用冒号隔开，属性可以不用加引号，\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- $(this).css(\\\"color\\\":\\\"white\\\",\\\"font-size\\\":\\\"20px\\\"};\\r\\n- 示例：\\r\\n- ($(\\\"div\\\")).css(\\\"width\\\");  //获取样式\\r\\n- ($(\\\"div\\\")).css(\\\"width\\\",\\\"300px\\\");    //设置样式\\r\\n- $(\\\"div\\\").css({width: 400,height: 400,backgroundColor: 'purple'})\\r\\n- 操作类\\r\\n- 添加类：不会影响之前的类名\\r\\n- $(this).addClass('current');\\r\\n- 删除类\\r\\n- $(this).removeClass('current');\\r\\n- 切换类\\r\\n- $(this).toggleClass('current');\\r\\n- jQuery操作类与js原生className区别\\r\\n- js原生className会覆盖原有的类名\\r\\n- jQuery操作类不会覆盖原有的类名\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 效果（动画效果）\\r\\n- 显示隐藏\\r\\n- show(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"speed,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"easing\"}]},{\"type\":\"text\",\"value\":\",\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"fn\"}]}]},{\"type\":\"text\",\"value\":\")\\r\\n- 参数都可以省略，无动画直接显示。\\r\\n- speed：三种预定速度之一的字符串(“slow”,“normal\\\",or “fast”)或表示动画时长的毫秒数值(如:1000)。\\r\\n- easing：(Optional)用来指定切换效果，默认是“swing”，可用参数“linear\\\"。\\r\\n- fn：回调函数，在动画完成时执行的函数，每个元素执行一次。\\r\\n- hide()\\r\\n- hide(\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"speed,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"easing\"}]},{\"type\":\"text\",\"value\":\",\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"fn\"}]}]},{\"type\":\"text\",\"value\":\")\\r\\n- toggle()\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - 滑动显示隐藏\\r\\n      ```js\\r\\n          slideDown([speed,[easing],[fn]])\\r\\n          slideUp([speed,[easing],[fn]])\\r\\n          slideToggle([speed,[easing],[fn]])\\r\\n      ```\\r\\n\\r\\n  - 事件切换\\r\\n      - hover([over],out):\\r\\n          - over:鼠标移到元素上要触发的函数\\r\\n          - out:鼠标移出元素要触发的函数\\r\\n\\r\\n  - 动画队列及其停止排队方法\\r\\n      - 动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。\\r\\n      - stop()\\r\\n          - stop(方法用于停止动画或效果。\\r\\n          - 注意:stop()写到动画或者效果的前面，相当于停止结束上一次的动画。\\r\\n\\r\\n  - 淡入淡出\\r\\n      ```js\\r\\n          fadeIn([speed,[easing],[fn]])\\r\\n          fadeOut([speed,[easing],[fn]])\\r\\n          fadeToggle([speed,[easing],[fn]])\\r\\n          fateTo([speed],opacity,[easing],[fn])  // 修改透明度\\r\\n      ```\\r\\n\\r\\n  - 自定义动画：只有是元素才能用这个动画，document用不了\\r\\n      - animate(params,[speed],[easing],[fn])\\r\\n          - params:一组包含作为动画属性和终值的样式属性和及其值的集合\\r\\n          - speed:三种预定速度之一的字符串(\\\"slow\\\",\\\"normal\\\", or \\\"fast\\\")或表示动画时长的毫秒数值(如：1000) \\r\\n          - easing:要使用的擦除效果的名称(需要插件支持).默认jQuery提供\\\"linear\\\" 和 \\\"swing\\\".\\r\\n          - fn:在动画完成时执行的函数，每个元素执行一次。\\r\\n          - $(\\\"body,html\\\").animate({scrollTop:0});        返回顶部\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"  - 滑动显示隐藏\\r\\n      ```js\\r\\n          slideDown([speed,[easing],[fn]])\\r\\n          slideUp([speed,[easing],[fn]])\\r\\n          slideToggle([speed,[easing],[fn]])\\r\\n      ```\\r\\n\\r\\n  - 事件切换\\r\\n      - hover([over],out):\\r\\n          - over:鼠标移到元素上要触发的函数\\r\\n          - out:鼠标移出元素要触发的函数\\r\\n\\r\\n  - 动画队列及其停止排队方法\\r\\n      - 动画或者效果一旦触发就会执行，如果多次触发，就造成多个动画或者效果排队执行。\\r\\n      - stop()\\r\\n          - stop(方法用于停止动画或效果。\\r\\n          - 注意:stop()写到动画或者效果的前面，相当于停止结束上一次的动画。\\r\\n\\r\\n  - 淡入淡出\\r\\n      ```js\\r\\n          fadeIn([speed,[easing],[fn]])\\r\\n          fadeOut([speed,[easing],[fn]])\\r\\n          fadeToggle([speed,[easing],[fn]])\\r\\n          fateTo([speed],opacity,[easing],[fn])  // 修改透明度\\r\\n      ```\\r\\n\\r\\n  - 自定义动画：只有是元素才能用这个动画，document用不了\\r\\n      - animate(params,[speed],[easing],[fn])\\r\\n          - params:一组包含作为动画属性和终值的样式属性和及其值的集合\\r\\n          - speed:三种预定速度之一的字符串(\\\"slow\\\",\\\"normal\\\", or \\\"fast\\\")或表示动画时长的毫秒数值(如：1000) \\r\\n          - easing:要使用的擦除效果的名称(需要插件支持).默认jQuery提供\\\"linear\\\" 和 \\\"swing\\\".\\r\\n          - fn:在动画完成时执行的函数，每个元素执行一次。\\r\\n          - $(\\\"body,html\\\").animate({scrollTop:0});        返回顶部\"}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 属性操作\\r\\n- 设置或获取元素固有属性 element.prop()     //类似原生getAttribute()\\r\\n- 所谓元素固有属性就是元素本身自带的属性，比如\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<a>\"}]},{\"type\":\"text\",\"value\":\"元素里面的href，比如\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"<input>\"}]},{\"type\":\"text\",\"value\":\"元素里面的type。\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"console.log($(\\\"a\\\").prop('href'));\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 设置或获取元素自定义属性 element.attr()   //类似原生setAttribute()\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               $(\\\"a\\\").attr(\\\"index\\\", 100);               $(\\\"a\\\").attr(\\\"data-index\\\",121);               console.log($(\\\"a\\\").attr(\\\"index\\\"));               console.log($(\\\"a\\\").attr(\\\"data-index\\\"));               console.log($(\\\"a\\\").data(\\\"index\\\"));    //返回的是数字类型index值           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 数据缓存data()    这个里面的数据是存放在元素的内存里面\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(\\\"a\\\").data(\\\"uname\\\",\\\"andy\\\");\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- console.log($(\\\"a\\\").data(\\\"uname\\\"));\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 文本属性值\\r\\n- 获取普通元素内容\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               console.log($(\\\"a\\\").html());               console.log($(\\\"a\\\").text());           \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 设置元素文本内容\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               $(\\\"a\\\").html(\\\"设置hi~\\\");               $(\\\"a\\\").text(\\\"设置hi~~~\\\");          \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 获取设置表单值\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               console.log($(\\\"input\\\").val());               $(\\\"input\\\").val(182371);           \"}]}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 元素操作\\r\\n- 遍历元素\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$(\\\"div\\\").each(function(i,domEle){})\"}]},{\"type\":\"text\",\"value\":\"   //只能遍历对象\\r\\n- \"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"$.each($(\\\"div\\\"),function(i, ele){})\"}]},{\"type\":\"text\",\"value\":\"         //可以遍历对象，也可以遍历数组\\r\\n\"},{\"type\":\"element\",\"tag\":\"code-inline\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"js               var arr = [\\\"red\\\", \\\"green\\\", \\\"blue\\\", \\\"pink\\\"];               var sum = '';               $(\\\"div\\\").each(function (i, domEle) {                   console.log(i);                   console.log(domEle);                   $(domEle).css(\\\"background-color\\\", arr[i]);                   sum += $(domEle).text();                   console.log(sum);               });               var sum = '';               $.each($(\\\"div\\\"), function (i, ele) {                   sum += $(ele).text();                   console.log(sum);               })               $.each(arr, function (i, ele) {                   console.log(i);                   console.log(ele);               })               \"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 创建元素\\r\\n- var li = $(\\\"\"},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"我是后来创建的li\"}]},{\"type\":\"text\",\"value\":\"\\\");\\r\\n- 添加元素\\r\\n- 内部添加：生成之后他们是父子关系\\r\\n- $(\\\"ul\\\").append(li);\\r\\n- $(\\\"ul\\\").prepend(li);\\r\\n- 外部添加：生成之后他们是兄弟关系\\r\\n- $(\\\"div\\\").after(div);\\r\\n- $(\\\"div\\\").before(div);\\r\\n- 删除元素\\r\\n- remove()\\r\\n- $(\\\"ul\\\").remove();                             // 删除匹配的元素 自杀\\r\\n- $(\\\"ul\\\").empty(); === $(\\\"ul\\\").html(\\\"\\\");        // 可以删除匹配的元素里面的子节点、孩子\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 尺寸、位置操作\\r\\n- jQuery尺寸\\r\\n- width()/ height()                     取得/设置匹配元素宽度和高度值只算width / height\\r\\n- innerWidth()/ innerHieght()           取得/设置匹配元素宽度和高度值包含padding\\r\\n- outerWidth() / outerHeight()          取很/设置匹配元素宽度和高度值包含padding. border\\r\\n- nouterWidth(true)/ outerHeight(true)  取得/设置匹配元素宽度和高度值包含padding .borde、margin\\r\\n- 以上参数为空，则是获取相应值，返回的是数字型。\\r\\n- 如果参数为数字，则是修改相应值。\\r\\n- 参数可以不必写单位。\"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"code\":\"  - jQuery位置\\r\\n      - offset()                  获取/设置距离文档的位置（偏移）\\r\\n          - `offset().top`\\r\\n          - `offset().left`\\r\\n      - position()                获取距离带有定位的父盒子的位置\\r\\n      - scrollTop()/scrollLeft()\\r\\n          - `$(document).scrollTop();`\\r\\n          - `$(window).scroll(function(){console.log($(document).scrollTop());})`\\n\"},\"children\":[{\"type\":\"element\",\"tag\":\"pre\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{\"class\":\"line\"},\"children\":[{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"  - jQuery位置\\r\\n      - offset()                  获取/设置距离文档的位置（偏移）\\r\\n          - `offset().top`\\r\\n          - `offset().left`\\r\\n      - position()                获取距离带有定位的父盒子的位置\\r\\n      - scrollTop()/scrollLeft()\\r\\n          - `$(document).scrollTop();`\\r\\n          - `$(window).scroll(function(){console.log($(document).scrollTop());})`\"}]}]}]}]}]}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-jquery事件注册\"},\"children\":[{\"type\":\"text\",\"value\":\"5. jQuery事件注册\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件注册\\r\\n- $(\\\"div\\\").click(function(){})\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件处理\\r\\n- on()方法在匹配元素上绑定一个或多个事件的事件处理函数\\r\\n- element.on(events,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"selector\"}]},{\"type\":\"text\",\"value\":\",fn)\\r\\n- 1. events:一个或多个用空格分隔的事件类型，如\\\"click\\\"或\\\"keydown”.\\r\\n- 2. selector:元素的子元素选择器。\\r\\n- 3. fn:回调函数即绑定在元素身上的侦听函数。\\r\\n- on可以给未来动态创建的元素绑定事件\\r\\n- off()可以移除通过on()方法添加的事件处理程序\\r\\n- $(\\\"ul\\\").off()             解除ul上的所有事件\\r\\n- $(\\\"ul\\\").off(\\\"click\\\");     解除ul上的click事件\\r\\n- 如果有的事件只想触发一次，可以使用one()\\r\\n- 自动触发事件\\r\\n- 元素.事件()\\r\\n- 元素.trigger('事件')\"},{\"type\":\"element\",\"tag\":\"br\",\"props\":{},\"children\":[]},{\"type\":\"text\",\"value\":\"\\n- 元素.triggerHandler('事件')   // 不会触发元素的默认行为,例如input元素获得焦点后的光标闪烁\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery 事件对象\\r\\n- 事件被触发，就会有事件对象的产生\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"6-jquery其他方法\"},\"children\":[{\"type\":\"text\",\"value\":\"6. jQuery其他方法\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery拷贝对象\\r\\n- 如果想要把某个对象拷贝（合并）给另外一个对象使用，此时可以使用$.extend(〉方法\\r\\n- 语法∶$.extend (\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"deep\"}]},{\"type\":\"text\",\"value\":\", target,object1,\"},{\"type\":\"element\",\"tag\":\"span\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"objectN\"}]},{\"type\":\"text\",\"value\":\")\\r\\n- 1. deep:如果设为true为深拷贝，默认为false 浅拷贝\\r\\n- 2. target:要拷贝的目标对象\\r\\n- 3. object1:待拷贝到第一个对象的对象。\\r\\n- 4. objectN:待拷贝到第N个对象的对象。\\r\\n- 5. 浅拷贝是把被拷贝的对象复杂数据类型中的地址拷贝给目标对象，修改目标对象会影响被拷贝对象。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"多库共存\\r\\n- jQuery使用$作为标示符，随着jQuery的流行,其他js 库也会用这$作为标识符，这样一起使用会引起冲突。\\r\\n- 1. 如果$符号冲突，我们就使用jQuery\\r\\n- 2. 让jQuery释放对$控制权，让用户自己决定\\r\\n- var suibian = jQuery.noConflict();\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery插件\\r\\n- jQuery功能比较有限，想要更复杂的特效效果，可以借助于jQuery插件完成。\\r\\n- 注意:这些插件也是依赖于jQuery来完成的，所以必须要先引入jQuery文件，因此也称为jQuery插件。\\r\\n- jQuery插件常用的网站:\\r\\n- 1. jQuery插件库 \"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.jq22.com/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.jq22.com/\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 2.jQuery之家 \"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.htmleaf.com/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.htmleaf.com/\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- jQuery插件使用步骤:\\r\\n- 1.引入相关文件。( jQuery文件和插件文件)\\r\\n- 2.复制相关html、css、js(调用插件)。\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"图片懒加载（图片使用延迟加载可提高网页下载速度。他也能帮助减轻服务器负载）\\r\\n- 当我们页面滑动达到可视区域，再加载图片。\\r\\n- 我们使用jquery插件库EasyLazyload。注意，此时的js引入文件和js调用必须写到DOM元素(图片)最后面\\r\\n- 全屏滚动(fullpage.js)\\r\\n- gitHub：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://github.com/alvarotrigo/fullPage.js\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"https://github.com/alvarotrigo/fullPage.js\"}]},{\"type\":\"text\",\"value\":\"\\r\\n- 中文翻译网站：\"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"http://www.dowebok.com/demo/2014/77/\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"http://www.dowebok.com/demo/2014/77/\"}]}]}]},{\"type\":\"element\",\"tag\":\"h2\",\"props\":{\"id\":\"数据可视化\"},\"children\":[{\"type\":\"text\",\"value\":\"数据可视化-\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"1-什么是数据可视化\"},\"children\":[{\"type\":\"text\",\"value\":\"1. 什么是数据可视化\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"常见的数据可视化库\\r\\n- D3.js目前 Web端评价最高的Javascript可视化工具库(入手难)\\r\\n- ECharts.js百度出品的一个并源Javascript 数据可视化库\\r\\n- Highcharts.js国外的前端数据可视化库，非商用免费，被许多国外大公司所使用\\r\\n- AntV蚂蚁金服全新一代数据可视化解决方案\\r\\n- 等等\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"2-数据可视化项目概述\"},\"children\":[{\"type\":\"text\",\"value\":\"2. 数据可视化项目概述\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"学习这个项目的目的\\r\\n- 市场需求和学习阶段需求项目用到的技术:以前学习过的技术和新技术\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"CSS3动画、渐变\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"jQuery库+原生JavaScript\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"flex布局和 rem适配方案\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"图片边框border-image\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ES6模板字符\"}]},{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"ECharts可视化库等等\"}]}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"3-echarts简介\"},\"children\":[{\"type\":\"text\",\"value\":\"3. ECharts简介\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"4-echarts的基本使用\"},\"children\":[{\"type\":\"text\",\"value\":\"4. ECharts的基本使用\"}]},{\"type\":\"element\",\"tag\":\"h3\",\"props\":{\"id\":\"5-数据可视化项目开发\"},\"children\":[{\"type\":\"text\",\"value\":\"5. 数据可视化项目开发\"}]},{\"type\":\"element\",\"tag\":\"style\",\"children\":[{\"type\":\"text\",\"value\":\".ct-c7a6a9{color:#953800}\\n.ct-3ef978{color:#0550AE}\\n.ct-266ca3{color:#CF222E}\\n.ct-62c0d5{color:#6E7781}\\n.ct-9526f4{color:#0A3069}\\n.ct-4e64ee{color:#8250DF}\\n.ct-ff4237{color:#116329}\\n.ct-a4d404{color:#24292F}\\n.dark .ct-a4d404{color:#C9D1D9}\\n.dark .ct-ff4237{color:#7EE787}\\n.dark .ct-4e64ee{color:#D2A8FF}\\n.dark .ct-9526f4{color:#A5D6FF}\\n.dark .ct-62c0d5{color:#8B949E}\\n.dark .ct-266ca3{color:#FF7B72}\\n.dark .ct-3ef978{color:#79C0FF}\\n.dark .ct-c7a6a9{color:#FFA657}\"}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[{\"id\":\"js的组成\",\"depth\":2,\"text\":\"JS的组成-\",\"children\":[{\"id\":\"1-ecmascript\",\"depth\":3,\"text\":\"1. ECMAScript\"},{\"id\":\"2-dom-文档对象模型\",\"depth\":3,\"text\":\"2. DOM - 文档对象模型\"},{\"id\":\"3-bom-浏览器对象模型\",\"depth\":3,\"text\":\"3. BOM - 浏览器对象模型\"}]},{\"id\":\"js初识\",\"depth\":2,\"text\":\"JS初识-\",\"children\":[{\"id\":\"1-行内式的js直接写到元素的内部\",\"depth\":3,\"text\":\"1. 行内式的js，直接写到元素的内部\"},{\"id\":\"2-内嵌式的js\",\"depth\":3,\"text\":\"2. 内嵌式的js\"},{\"id\":\"5-标识符\",\"depth\":3,\"text\":\"5. 标识符\"},{\"id\":\"6-关键字\",\"depth\":3,\"text\":\"6. 关键字\"},{\"id\":\"7-保留字\",\"depth\":3,\"text\":\"7. 保留字\"}]},{\"id\":\"注释\",\"depth\":2,\"text\":\"注释-\",\"children\":[{\"id\":\"1-单行注释\",\"depth\":3,\"text\":\"1. 单行注释\"},{\"id\":\"2-多行注释\",\"depth\":3,\"text\":\"2. 多行注释\"}]},{\"id\":\"输入输出语句\",\"depth\":2,\"text\":\"输入输出语句-\",\"children\":[{\"id\":\"1-prompt\",\"depth\":3,\"text\":\"1. prompt()\"},{\"id\":\"2-alert\",\"depth\":3,\"text\":\"2. alert()\"},{\"id\":\"3-console\",\"depth\":3,\"text\":\"3. console\"}]},{\"id\":\"变量\",\"depth\":2,\"text\":\"变量-\",\"children\":[{\"id\":\"1-概述\",\"depth\":3,\"text\":\"1. 概述\"},{\"id\":\"2-使用\",\"depth\":3,\"text\":\"2. 使用\"},{\"id\":\"3-语法扩展\",\"depth\":3,\"text\":\"3. 语法扩展\"},{\"id\":\"4-命名规范\",\"depth\":3,\"text\":\"4. 命名规范\"},{\"id\":\"5-交换变量的案例\",\"depth\":3,\"text\":\"5. 交换变量的案例\"},{\"id\":\"6-const-与-let\",\"depth\":3,\"text\":\"6. const 与 let\"}]},{\"id\":\"数据类型\",\"depth\":2,\"text\":\"数据类型-\",\"children\":[{\"id\":\"1-js是动态语言变量的数据类型是可以变化的\",\"depth\":3,\"text\":\"1. js是动态语言，变量的数据类型是可以变化的\"},{\"id\":\"2-简单数据类型也叫值类型放在栈立面\",\"depth\":3,\"text\":\"2. 简单数据类型：也叫值类型；放在栈立面。\"},{\"id\":\"3-typeof检测数据类型\",\"depth\":3,\"text\":\"3. typeof检测数据类型\"},{\"id\":\"4-数据类型的转换\",\"depth\":3,\"text\":\"4. 数据类型的转换\"},{\"id\":\"5-复杂数据类型也叫引用类型放在堆立面\",\"depth\":3,\"text\":\"5. 复杂数据类型：也叫引用类型；放在堆立面。\"}]},{\"id\":\"运算符\",\"depth\":2,\"text\":\"运算符-\",\"children\":[{\"id\":\"1-算数运算符\",\"depth\":3,\"text\":\"1. 算数运算符\"},{\"id\":\"2-递增递减运算符\",\"depth\":3,\"text\":\"2. 递增递减运算符\"},{\"id\":\"3-比较运算符\",\"depth\":3,\"text\":\"3. 比较运算符\"},{\"id\":\"4-逻辑运算符\",\"depth\":3,\"text\":\"4. 逻辑运算符\"},{\"id\":\"5-赋值运算符\",\"depth\":3,\"text\":\"5. 赋值运算符\"},{\"id\":\"6-运算符优先级\",\"depth\":3,\"text\":\"6. 运算符优先级\"}]},{\"id\":\"流程控制\",\"depth\":2,\"text\":\"流程控制-\",\"children\":[{\"id\":\"1-流程控制\",\"depth\":3,\"text\":\"1. 流程控制\"},{\"id\":\"2-顺序流程控制\",\"depth\":3,\"text\":\"2. 顺序流程控制\"},{\"id\":\"3-分支流程控制if语句\",\"depth\":3,\"text\":\"3. 分支流程控制if语句\"},{\"id\":\"4-三元表达式\",\"depth\":3,\"text\":\"4. 三元表达式\"},{\"id\":\"5-分支流程控制switch语句\",\"depth\":3,\"text\":\"5. 分支流程控制switch语句\"},{\"id\":\"6-循环\",\"depth\":3,\"text\":\"6. 循环\"}]},{\"id\":\"数组\",\"depth\":2,\"text\":\"数组-\",\"children\":[{\"id\":\"1-概念\",\"depth\":3,\"text\":\"1. 概念\"},{\"id\":\"2-创建数组\",\"depth\":3,\"text\":\"2. 创建数组\"},{\"id\":\"3-获取数组元素\",\"depth\":3,\"text\":\"3. 获取数组元素\"},{\"id\":\"4-新增数组元素\",\"depth\":3,\"text\":\"4. 新增数组元素\"},{\"id\":\"5-数组的方法\",\"depth\":3,\"text\":\"5. 数组的方法\"}]},{\"id\":\"函数\",\"depth\":2,\"text\":\"函数-\",\"children\":[{\"id\":\"1-概念-1\",\"depth\":3,\"text\":\"1. 概念\"},{\"id\":\"2-使用-1\",\"depth\":3,\"text\":\"2. 使用\"},{\"id\":\"3-参数\",\"depth\":3,\"text\":\"3. 参数\"},{\"id\":\"4-返回值\",\"depth\":3,\"text\":\"4. 返回值\"},{\"id\":\"5-声明的方式\",\"depth\":3,\"text\":\"5. 声明的方式\"},{\"id\":\"6-arguments\",\"depth\":3,\"text\":\"6. arguments\"},{\"id\":\"7-函数可以调用另外一个函数\",\"depth\":3,\"text\":\"7. 函数可以调用另外一个函数\"}]},{\"id\":\"作用域\",\"depth\":2,\"text\":\"作用域-\",\"children\":[{\"id\":\"1-作用域\",\"depth\":3,\"text\":\"1. 作用域\"},{\"id\":\"2-变量的作用域\",\"depth\":3,\"text\":\"2. 变量的作用域\"},{\"id\":\"3-现阶段js没有块级\",\"depth\":3,\"text\":\"3. 现阶段，js没有块级\"},{\"id\":\"3-作用域链\",\"depth\":3,\"text\":\"3. 作用域链\"}]},{\"id\":\"预解析\",\"depth\":2,\"text\":\"预解析-\",\"children\":[{\"id\":\"1-js引擎运行js分为两步-预解析-代码执行\",\"depth\":3,\"text\":\"1. js引擎运行js分为两步：    预解析  代码执行\"},{\"id\":\"2-变量预解析变量提升和函数预解析函数提升\",\"depth\":3,\"text\":\"2. 变量预解析（变量提升）和函数预解析（函数提升）\"}]},{\"id\":\"对象\",\"depth\":2,\"text\":\"对象-\",\"children\":[{\"id\":\"1-概述-1\",\"depth\":3,\"text\":\"1. 概述\"},{\"id\":\"2-创建对象的三种方式\",\"depth\":3,\"text\":\"2. 创建对象的三种方式\"},{\"id\":\"3-使用\",\"depth\":3,\"text\":\"3. 使用\"},{\"id\":\"4-变量属性函数方法的区别\",\"depth\":3,\"text\":\"4. 变量、属性、函数、方法的区别\"},{\"id\":\"3-new关键字\",\"depth\":3,\"text\":\"3. new关键字\"},{\"id\":\"4-遍历对象属性\",\"depth\":3,\"text\":\"4. 遍历对象属性\"}]},{\"id\":\"js内置对象\",\"depth\":2,\"text\":\"js内置对象-\",\"children\":[{\"id\":\"1-内置对象\",\"depth\":3,\"text\":\"1. 内置对象\"},{\"id\":\"2-查文档\",\"depth\":3,\"text\":\"2. 查文档\"},{\"id\":\"3-math对象\",\"depth\":3,\"text\":\"3. Math对象\"},{\"id\":\"4-日期对象\",\"depth\":3,\"text\":\"4. 日期对象\"},{\"id\":\"5-数组对象\",\"depth\":3,\"text\":\"5. 数组对象\"},{\"id\":\"6-字符串对象\",\"depth\":3,\"text\":\"6. 字符串对象\"}]},{\"id\":\"web-apis\",\"depth\":2,\"text\":\"Web APIs-\",\"children\":[{\"id\":\"1-web-apis和js基础关联性\",\"depth\":3,\"text\":\"1. Web APIs和JS基础关联性\"},{\"id\":\"2-api和web-api\",\"depth\":3,\"text\":\"2. API和Web API\"},{\"id\":\"3-dom\",\"depth\":3,\"text\":\"3. DOM\"}]},{\"id\":\"事件高级\",\"depth\":2,\"text\":\"事件高级-\",\"children\":[{\"id\":\"1-注册事件绑定事件\",\"depth\":3,\"text\":\"1. 注册事件（绑定事件）\"},{\"id\":\"2-删除事件解绑事件\",\"depth\":3,\"text\":\"2. 删除事件（解绑事件）\"},{\"id\":\"3-dom事件流\",\"depth\":3,\"text\":\"3. DOM事件流\"},{\"id\":\"4-事件对象\",\"depth\":3,\"text\":\"4. 事件对象\"},{\"id\":\"5-阻止事件冒泡\",\"depth\":3,\"text\":\"5. 阻止事件冒泡\"},{\"id\":\"6-事件委托代理委派\",\"depth\":3,\"text\":\"6. 事件委托（代理、委派）\"},{\"id\":\"7-常用的鼠标事件\",\"depth\":3,\"text\":\"7. 常用的鼠标事件\"},{\"id\":\"8-常用的键盘事件\",\"depth\":3,\"text\":\"8. 常用的键盘事件\"}]},{\"id\":\"bom浏览器对象模型\",\"depth\":2,\"text\":\"BOM浏览器对象模型-\",\"children\":[{\"id\":\"1-bom概述\",\"depth\":3,\"text\":\"1. BOM概述\"},{\"id\":\"2-window对象的常见事件\",\"depth\":3,\"text\":\"2. window对象的常见事件\"},{\"id\":\"3-定时器\",\"depth\":3,\"text\":\"3. 定时器\"},{\"id\":\"3-1-this指向问题\",\"depth\":3,\"text\":\"3. 1. this指向问题\"},{\"id\":\"4-js执行机制\",\"depth\":3,\"text\":\"4. JS执行机制\"},{\"id\":\"5-location对象\",\"depth\":3,\"text\":\"5. location对象\"},{\"id\":\"6-navigator对象\",\"depth\":3,\"text\":\"6. navigator对象\"},{\"id\":\"7-history对象\",\"depth\":3,\"text\":\"7. history对象\"}]},{\"id\":\"pc端网页特效\",\"depth\":2,\"text\":\"PC端网页特效\",\"children\":[{\"id\":\"1-元素偏移量offset系列\",\"depth\":3,\"text\":\"1. 元素偏移量offset系列\"},{\"id\":\"2-元素可视区client系列\",\"depth\":3,\"text\":\"2. 元素可视区client系列\"},{\"id\":\"2-立即执行函数\",\"depth\":3,\"text\":\"2. 立即执行函数\"},{\"id\":\"3-元素滚动scoll系列\",\"depth\":3,\"text\":\"3. 元素滚动scoll系列\"},{\"id\":\"4-动画函数封装\",\"depth\":3,\"text\":\"4. 动画函数封装\"},{\"id\":\"5-常见网页特效案例\",\"depth\":3,\"text\":\"5. 常见网页特效案例\"}]},{\"id\":\"本地存储\",\"depth\":2,\"text\":\"本地存储-\",\"children\":[{\"id\":\"1-windowsessionstorage\",\"depth\":3,\"text\":\"1. window.sessionStorage\"},{\"id\":\"2-windowlocalstorage\",\"depth\":3,\"text\":\"2. window.localStorage\"}]},{\"id\":\"jquery\",\"depth\":2,\"text\":\"JQuery-\",\"children\":[{\"id\":\"1-javascript库\",\"depth\":3,\"text\":\"1. JavaScript库\"},{\"id\":\"2-jquery概述\",\"depth\":3,\"text\":\"2. jQuery概述\"},{\"id\":\"3-jquery基本使用\",\"depth\":3,\"text\":\"3. jQuery基本使用\"},{\"id\":\"4-jquery常用api\",\"depth\":3,\"text\":\"4. jQuery常用API\"},{\"id\":\"5-jquery事件注册\",\"depth\":3,\"text\":\"5. jQuery事件注册\"},{\"id\":\"6-jquery其他方法\",\"depth\":3,\"text\":\"6. jQuery其他方法\"}]},{\"id\":\"数据可视化\",\"depth\":2,\"text\":\"数据可视化-\",\"children\":[{\"id\":\"1-什么是数据可视化\",\"depth\":3,\"text\":\"1. 什么是数据可视化\"},{\"id\":\"2-数据可视化项目概述\",\"depth\":3,\"text\":\"2. 数据可视化项目概述\"},{\"id\":\"3-echarts简介\",\"depth\":3,\"text\":\"3. ECharts简介\"},{\"id\":\"4-echarts的基本使用\",\"depth\":3,\"text\":\"4. ECharts的基本使用\"},{\"id\":\"5-数据可视化项目开发\",\"depth\":3,\"text\":\"5. 数据可视化项目开发\"}]}]}},\"_type\":\"markdown\",\"_id\":\"content:3.Note:1.program:2.learnJavascript.md\",\"_source\":\"content\",\"_file\":\"3.Note/1.program/2.learnJavascript.md\",\"_extension\":\"md\"},\"hash\":\"rqT10rk2Pu\"}";

export { _2_learnJavascript as default };
//# sourceMappingURL=2.learnJavascript.mjs.map
